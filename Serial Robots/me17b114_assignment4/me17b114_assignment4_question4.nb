(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    364273,       6902]
NotebookOptionsPosition[    362966,       6852]
NotebookOutlinePosition[    363309,       6867]
CellTagsIndexPosition[    363266,       6864]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.8128734319175425`*^9}],

Cell[CellGroupData[{

Cell["\<\
Importing functions defined in Assignment 3 required for this question:\
\>", "Subsection",
 CellChangeTimes->{{3.8128709716755757`*^9, 3.8128709964830456`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DH2HomTrans", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", "\[Alpha]_", ",", "d_", ",", "\[Theta]_"}], "}"}], 
    "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Computing", " ", "the", " ", "homogenous", " ", "transformation", " ", 
       "matrix"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0", ",", "a"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
            RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", 
            RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "*", "d"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
            RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Alpha]", "]"}], "*", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
           RowBox[{"d", "*", 
            RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"multiplyHomTrans", "[", 
    RowBox[{"T1_", ",", "T2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "r1", ",", "r2", ",", "t1", ",", "t2", ",", " ", "r1Cond", ",", " ", 
       "r2Cond"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Checking", " ", "if", " ", "the", " ", "given", " ", "Transformation", 
       " ", "Matrices", " ", "have", " ", "the", " ", "right", " ", 
       "dimension"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Dimensions", "[", "T1", "]"}], " ", "==", " ", 
            RowBox[{"{", 
             RowBox[{"4", ",", "4"}], "}"}]}], " ", "&&", " ", 
           RowBox[{
            RowBox[{"Dimensions", "[", "T2", "]"}], " ", "==", " ", 
            RowBox[{"{", 
             RowBox[{"4", ",", "4"}], "}"}]}]}], ")"}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{
         "Print", "[", 
          "\"\<Error: Please ensure the Transformation Matrices are of \
dimension 4*4\>\"", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Extracting", " ", "the", " ", "independent", " ", "entities"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"r1", " ", "=", " ", 
       RowBox[{"T1", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", 
          RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"r2", " ", "=", " ", 
       RowBox[{"T2", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", 
          RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Checking", " ", "if", " ", "homogenous", " ", "transformation", " ", 
        "matrices"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"r1Cond", " ", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "r1", "]"}], ".", "r1"}], "]"}], "]"}], 
         "\[NotEqual]", 
         RowBox[{"IdentityMatrix", "[", "3", "]"}]}], " ", "||", " ", 
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"Simplify", "[", 
           RowBox[{"Det", "[", "r1", "]"}], "]"}], "]"}], "\[NotEqual]", 
         "1"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"r2Cond", " ", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "r2", "]"}], ".", "r2"}], "]"}], "]"}], 
         "\[NotEqual]", 
         RowBox[{"IdentityMatrix", "[", "3", "]"}]}], " ", "||", " ", 
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"Simplify", "[", 
           RowBox[{"Det", "[", "r2", "]"}], "]"}], "]"}], "\[NotEqual]", 
         "1"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"r1Cond", " ", "||", " ", "r2Cond"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{
         "Print", "[", 
          "\"\<Error: Please ensure Input matrices are homogenous \
transformation matrices\>\"", "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"t1", " ", "=", " ", 
       RowBox[{"T1", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", "4"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"t2", " ", "=", " ", 
       RowBox[{"T2", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", "4"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Multiplying", " ", "the", " ", "homogenous", " ", "transformation", 
        " ", "matrices"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"r1", ".", "r2"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"t1", "+", 
              RowBox[{"r1", ".", "t2"}]}], "}"}], "]"}], ",", "2"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "}"}]}], "]"}],
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DHTable2HomTrans", "[", "dhTable_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temp", ",", "length", ",", "T"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Checking", " ", "the", " ", "dimensions", " ", "of", " ", "the", " ", 
        "given", " ", "DH"}], "-", 
       RowBox[{"parameter", " ", "Table"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Dimensions", "[", "dhTable", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "==", "4"}], ")"}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{
         "Print", "[", 
          "\"\<Error: Please ensure the DH-parameter table has 4 parameters \
exactly\>\"", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Computing", " ", "the", " ", "transformation", " ", "matrix"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"T", " ", "=", " ", 
       RowBox[{"IdentityMatrix", "[", "4", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"length", " ", "=", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", "dhTable", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", 
         RowBox[{"length", "+", "1"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"T", "=", 
         RowBox[{"multiplyHomTrans", "[", 
          RowBox[{"T", ",", 
           RowBox[{"DH2HomTrans", "[", 
            RowBox[{"dhTable", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "T", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"omegaJacobianBodyFixed", "[", 
    RowBox[{"R_", ",", "\[Theta]_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sol", ",", "\[Theta]L", ",", " ", "tR", ",", "dR", ",", "sk", ",", "i",
        ",", "t1", ",", "t2", ",", "t3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Chop", "[", 
           RowBox[{"Simplify", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", "R", "]"}], ".", "R"}], "]"}], "]"}], 
          "\[NotEqual]", 
          RowBox[{"IdentityMatrix", "[", "3", "]"}]}], " ", "||", " ", 
         RowBox[{
          RowBox[{"Chop", "[", 
           RowBox[{"Simplify", "[", 
            RowBox[{"Det", "[", "R", "]"}], "]"}], "]"}], "\[NotEqual]", 
          "1"}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{
         "Print", "[", 
          "\"\<Error: Please ensure that the given rotation matrix is \
orthogonal.\>\"", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Theta]L", " ", "=", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", "\[Theta]", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]L", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tR", " ", "=", " ", 
       RowBox[{"Transpose", "[", "R", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "\[Theta]L"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dR", "=", 
           RowBox[{"D", "[", 
            RowBox[{"R", ",", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sk", " ", "=", " ", 
           RowBox[{"tR", ".", "dR"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"t1", " ", "=", " ", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"sk", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"t2", " ", "=", " ", 
           RowBox[{
            RowBox[{"sk", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"t3", " ", "=", " ", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"sk", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{"t1", ",", "t2", ",", "t3"}], "}"}]}], ";"}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Transpose", "[", "sol", "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"linearVelocityJacobianMatrix", "[", 
    RowBox[{"p_", ",", "\[Theta]_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temp", ",", "J", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"temp", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"p", ",", 
         RowBox[{"{", "\[Theta]", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"J", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "3"}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"J", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"J", ",", 
           RowBox[{"temp", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "J", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fwdkinPUMA560", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2_", ",", "a3_", ",", "d3_", ",", "d4_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", "\[Theta]4_", 
       ",", "\[Theta]5_", ",", "\[Theta]6_"}], "}"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dhTable", ",", "transEndEffector"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dhTable", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "\[Theta]1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", "0", ",", "\[Theta]2"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a2", ",", "0", ",", "d3", ",", "\[Theta]3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a3", ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", "d4", ",", "\[Theta]4"}],
           "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Pi]", "/", "2"}], ",", "0", ",", "\[Theta]5"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", "0", ",", "\[Theta]6"}], 
          "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"transEndEffector", "=", " ", 
       RowBox[{"DHTable2HomTrans", "[", "dhTable", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"transEndEffector", ".", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "}"}], 
             "]"}]}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
         RowBox[{"transEndEffector", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "3"}], ",", 
            RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], "}"}], "]"}], ";"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8128700673133626`*^9, 3.812870118024494*^9}, {
   3.8128702207022667`*^9, 3.8128702500952463`*^9}, {3.812870878334429*^9, 
   3.812870948920476*^9}, {3.8128711253374615`*^9, 3.812871171711187*^9}, {
   3.8128713213434505`*^9, 3.8128713566346607`*^9}, {3.8128714227850943`*^9, 
   3.812871443976535*^9}, {3.812871475267292*^9, 3.812871491568818*^9}, {
   3.812871667945737*^9, 3.8128717372716885`*^9}, {3.8128717835916567`*^9, 
   3.81287179386777*^9}, 3.8128718294856825`*^9, {3.8128718605162992`*^9, 
   3.8128718783179183`*^9}, {3.8128719596276207`*^9, 3.81287200407265*^9}, {
   3.812872162245643*^9, 3.8128721741054387`*^9}, {3.812872217570749*^9, 
   3.8128722624895697`*^9}, {3.812872294520798*^9, 3.812872338008581*^9}, {
   3.8128723894573116`*^9, 3.812872397544622*^9}, {3.812872430649406*^9, 
   3.812872435736113*^9}, {3.8128725782702713`*^9, 3.8128726109041653`*^9}, {
   3.812873414760537*^9, 3.812873423664544*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(a) Computing the Orientation and Position of the End-Effector for PUMA 560 \
Robot:\
\>", "Subsection",
 CellChangeTimes->{{3.812873471568371*^9, 3.812873479224038*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "positionEndEffectorPUMA560", ",", "orientationEndEffectorPUMA560"}], 
    "}"}], "=", " ", 
   RowBox[{"fwdkinPUMA560", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["a", "2"], ",", 
       SubscriptBox["a", "3"], ",", 
       SubscriptBox["d", "3"], ",", 
       SubscriptBox["d", "4"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], ",", 
       SubscriptBox["\[Theta]", "2"], ",", 
       SubscriptBox["\[Theta]", "3"], ",", 
       SubscriptBox["\[Theta]", "4"], ",", 
       SubscriptBox["\[Theta]", "5"], ",", 
       SubscriptBox["\[Theta]", "6"]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<For PUMA 560 manipulator, the position of the end-effector is \>\"", 
    ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{"MatrixForm", "[", "positionEndEffectorPUMA560", "]"}], "]"}], 
    ",", "\"\<\\n and the orientation of the end-effector is \\n\>\"", ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{"MatrixForm", "[", "orientationEndEffectorPUMA560", "]"}], "]"}],
     ",", "\"\<.\>\""}], "]"}], ";"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For PUMA 560 manipulator, the position of the end-effector is \
\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "2"], "]"}], " ", 
          SubscriptBox["a", "2"]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["a", "3"]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["d", "3"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["d", "4"]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "2"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["a", "2"]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["a", "3"]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["d", "3"]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["d", "4"]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "2"], "]"}]}], " ", 
          SubscriptBox["a", "2"]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["a", "3"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["d", "4"]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"\\n and the orientation of the end-effector is \
\\n\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "6"], "]"}]}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "+", 
               SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "+", 
               SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "1"], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "1"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "+", 
               SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "1"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "1"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "2"], "+", 
                  SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "2"], "+", 
                  SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}]}]}], ")"}]}]}], ")"}], 
          " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "1"], "]"}]}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "5"], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "+", 
               SubscriptBox["\[Theta]", "3"]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "+", 
               SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "6"], "]"}]}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "5"], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "4"], "]"}]}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "2"], "+", 
                SubscriptBox["\[Theta]", "3"]}], "]"}]}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "+", 
               SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "5"], "]"}]}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "2"], "+", 
                SubscriptBox["\[Theta]", "3"]}], "]"}]}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "1"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "1"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "5"], "]"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "6"], "]"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "+", 
               SubscriptBox["\[Theta]", "3"]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "+", 
               SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "+", 
               SubscriptBox["\[Theta]", "3"]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "2"], "+", 
               SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "+", 
             SubscriptBox["\[Theta]", "3"]}], "]"}]}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "5"], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "5"], "]"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "For PUMA 560 manipulator, the position of the end-effector is ", 
   MatrixForm[{{Cos[
         Subscript[$CellContext`\[Theta], 1]] Cos[
         Subscript[$CellContext`\[Theta], 2]] Subscript[$CellContext`a, 2] + 
      Cos[
         Subscript[$CellContext`\[Theta], 1]] 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] - 
      Sin[
        Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`d, 3] - 
      Cos[
        Subscript[$CellContext`\[Theta], 1]] 
      Sin[Subscript[$CellContext`\[Theta], 2] + 
        Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4]}, {
     Cos[
         Subscript[$CellContext`\[Theta], 2]] Sin[
         Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`a, 2] + 
      Cos[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Sin[
         Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`a, 3] + 
      Cos[
         Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`d, 3] - 
      Sin[
        Subscript[$CellContext`\[Theta], 1]] 
      Sin[Subscript[$CellContext`\[Theta], 2] + 
        Subscript[$CellContext`\[Theta], 3]] 
      Subscript[$CellContext`d, 4]}, {-Sin[
         Subscript[$CellContext`\[Theta], 2]] Subscript[$CellContext`a, 2] - 
      Sin[Subscript[$CellContext`\[Theta], 2] + 
        Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] - 
      Cos[Subscript[$CellContext`\[Theta], 2] + 
        Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4]}}], 
   "\n and the orientation of the end-effector is \n", 
   MatrixForm[{{Sin[
         Subscript[$CellContext`\[Theta], 1]] (Cos[
           Subscript[$CellContext`\[Theta], 5]] Cos[
           Subscript[$CellContext`\[Theta], 6]] Sin[
           Subscript[$CellContext`\[Theta], 4]] + Cos[
           Subscript[$CellContext`\[Theta], 4]] Sin[
           Subscript[$CellContext`\[Theta], 6]]) + Cos[
         Subscript[$CellContext`\[Theta], 1]] (-Cos[
           Subscript[$CellContext`\[Theta], 6]] 
         Sin[Subscript[$CellContext`\[Theta], 2] + 
           Subscript[$CellContext`\[Theta], 3]] Sin[
           Subscript[$CellContext`\[Theta], 5]] + 
        Cos[Subscript[$CellContext`\[Theta], 2] + 
           Subscript[$CellContext`\[Theta], 3]] (Cos[
             Subscript[$CellContext`\[Theta], 4]] Cos[
             Subscript[$CellContext`\[Theta], 5]] Cos[
             Subscript[$CellContext`\[Theta], 6]] - Sin[
            Subscript[$CellContext`\[Theta], 4]] Sin[
            Subscript[$CellContext`\[Theta], 6]])), Cos[
         Subscript[$CellContext`\[Theta], 6]] (Cos[
           Subscript[$CellContext`\[Theta], 4]] Sin[
           Subscript[$CellContext`\[Theta], 1]] - Cos[
          Subscript[$CellContext`\[Theta], 1]] 
        Cos[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Sin[
          Subscript[$CellContext`\[Theta], 4]]) - (Cos[
          Subscript[$CellContext`\[Theta], 5]] Sin[
          Subscript[$CellContext`\[Theta], 1]] Sin[
          Subscript[$CellContext`\[Theta], 4]] + Cos[
          Subscript[$CellContext`\[Theta], 1]] (
         Cos[Subscript[$CellContext`\[Theta], 2] + 
            Subscript[$CellContext`\[Theta], 3]] Cos[
            Subscript[$CellContext`\[Theta], 4]] Cos[
            Subscript[$CellContext`\[Theta], 5]] - 
         Sin[Subscript[$CellContext`\[Theta], 2] + 
           Subscript[$CellContext`\[Theta], 3]] Sin[
           Subscript[$CellContext`\[Theta], 5]])) Sin[
        Subscript[$CellContext`\[Theta], 6]], -Sin[
         Subscript[$CellContext`\[Theta], 1]] Sin[
         Subscript[$CellContext`\[Theta], 4]] Sin[
         Subscript[$CellContext`\[Theta], 5]] - Cos[
        Subscript[$CellContext`\[Theta], 1]] (Cos[
          Subscript[$CellContext`\[Theta], 5]] 
        Sin[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] + 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Cos[
          Subscript[$CellContext`\[Theta], 4]] Sin[
          Subscript[$CellContext`\[Theta], 5]])}, {-Cos[
         Subscript[$CellContext`\[Theta], 6]] Sin[
         Subscript[$CellContext`\[Theta], 1]] 
       Sin[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Sin[
         Subscript[$CellContext`\[Theta], 5]] - Cos[
        Subscript[$CellContext`\[Theta], 1]] (Cos[
          Subscript[$CellContext`\[Theta], 5]] Cos[
          Subscript[$CellContext`\[Theta], 6]] Sin[
          Subscript[$CellContext`\[Theta], 4]] + Cos[
          Subscript[$CellContext`\[Theta], 4]] Sin[
          Subscript[$CellContext`\[Theta], 6]]) + 
      Cos[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Sin[
         Subscript[$CellContext`\[Theta], 1]] (Cos[
           Subscript[$CellContext`\[Theta], 4]] Cos[
           Subscript[$CellContext`\[Theta], 5]] Cos[
           Subscript[$CellContext`\[Theta], 6]] - Sin[
          Subscript[$CellContext`\[Theta], 4]] Sin[
          Subscript[$CellContext`\[Theta], 6]]), Cos[
         Subscript[$CellContext`\[Theta], 1]] (-Cos[
           Subscript[$CellContext`\[Theta], 4]] Cos[
           Subscript[$CellContext`\[Theta], 6]] + Cos[
           Subscript[$CellContext`\[Theta], 5]] Sin[
           Subscript[$CellContext`\[Theta], 4]] Sin[
           Subscript[$CellContext`\[Theta], 6]]) - Sin[
        Subscript[$CellContext`\[Theta], 1]] (-
        Sin[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Sin[
          Subscript[$CellContext`\[Theta], 5]] Sin[
          Subscript[$CellContext`\[Theta], 6]] + 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] (Cos[
            Subscript[$CellContext`\[Theta], 6]] Sin[
            Subscript[$CellContext`\[Theta], 4]] + Cos[
            Subscript[$CellContext`\[Theta], 4]] Cos[
            Subscript[$CellContext`\[Theta], 5]] Sin[
            Subscript[$CellContext`\[Theta], 6]])), -Cos[
         Subscript[$CellContext`\[Theta], 5]] Sin[
         Subscript[$CellContext`\[Theta], 1]] 
       Sin[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] + (-
         Cos[Subscript[$CellContext`\[Theta], 2] + 
           Subscript[$CellContext`\[Theta], 3]] Cos[
           Subscript[$CellContext`\[Theta], 4]] Sin[
           Subscript[$CellContext`\[Theta], 1]] + Cos[
           Subscript[$CellContext`\[Theta], 1]] Sin[
           Subscript[$CellContext`\[Theta], 4]]) Sin[
         Subscript[$CellContext`\[Theta], 5]]}, {-Cos[
         Subscript[$CellContext`\[Theta], 6]] (Cos[
           Subscript[$CellContext`\[Theta], 4]] Cos[
           Subscript[$CellContext`\[Theta], 5]] 
         Sin[Subscript[$CellContext`\[Theta], 2] + 
           Subscript[$CellContext`\[Theta], 3]] + 
        Cos[Subscript[$CellContext`\[Theta], 2] + 
           Subscript[$CellContext`\[Theta], 3]] Sin[
           Subscript[$CellContext`\[Theta], 5]]) + 
      Sin[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Sin[
         Subscript[$CellContext`\[Theta], 4]] Sin[
         Subscript[$CellContext`\[Theta], 6]], Cos[
         Subscript[$CellContext`\[Theta], 6]] 
       Sin[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Sin[
         Subscript[$CellContext`\[Theta], 4]] + (Cos[
           Subscript[$CellContext`\[Theta], 4]] Cos[
           Subscript[$CellContext`\[Theta], 5]] 
         Sin[Subscript[$CellContext`\[Theta], 2] + 
           Subscript[$CellContext`\[Theta], 3]] + 
        Cos[Subscript[$CellContext`\[Theta], 2] + 
           Subscript[$CellContext`\[Theta], 3]] Sin[
           Subscript[$CellContext`\[Theta], 5]]) Sin[
         Subscript[$CellContext`\[Theta], 6]], -
       Cos[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Cos[
         Subscript[$CellContext`\[Theta], 5]] + Cos[
         Subscript[$CellContext`\[Theta], 4]] 
       Sin[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Sin[
         Subscript[$CellContext`\[Theta], 5]]}}], "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.8128735114997253`*^9, 3.812873873504011*^9, 
  3.8128935264072933`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(b) Computing Linear Velocity and Body Fixed Angular Velocity Jacobians:\
\>", "Subsection",
 CellChangeTimes->{{3.8128726280170383`*^9, 3.8128726645259485`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"JvpPUMA560", " ", "=", " ", 
   RowBox[{"linearVelocityJacobianMatrix", "[", 
    RowBox[{"positionEndEffectorPUMA560", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], ",", 
       SubscriptBox["\[Theta]", "2"], ",", 
       SubscriptBox["\[Theta]", "3"], ",", 
       SubscriptBox["\[Theta]", "4"], ",", 
       SubscriptBox["\[Theta]", "5"], ",", 
       SubscriptBox["\[Theta]", "6"]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JwbPUMA560", " ", "=", " ", 
   RowBox[{"omegaJacobianBodyFixed", "[", 
    RowBox[{"orientationEndEffectorPUMA560", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], ",", 
       SubscriptBox["\[Theta]", "2"], ",", 
       SubscriptBox["\[Theta]", "3"], ",", 
       SubscriptBox["\[Theta]", "4"], ",", 
       SubscriptBox["\[Theta]", "5"], ",", 
       SubscriptBox["\[Theta]", "6"]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<The Linear Velocity Jacobian obtained for 3R Spatial is: \\n\>\"", 
    ",", " ", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"Simplify", "[", "JvpPUMA560", "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<The Body Fixed Angular Velocity Jacobian obtained for 3R Spatial is: \
\\n\>\"", ",", " ", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"Simplify", "[", "JwbPUMA560", "]"}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8128726778329296`*^9, 3.8128729119254074`*^9}, {
  3.812873570417859*^9, 3.8128736508153057`*^9}, {3.8128739068200254`*^9, 
  3.812873908057037*^9}, {3.812873958879799*^9, 3.8128739629132595`*^9}, {
  3.8128741341607103`*^9, 3.8128741539463835`*^9}, {3.812874936424266*^9, 
  3.8128749435028725`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The Linear Velocity Jacobian obtained for 3R Spatial is: \\n\"\
\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "2"], "]"}]}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["a", "2"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["a", "3"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["d", "3"]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["d", "4"]}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "2"], "]"}], " ", 
            SubscriptBox["a", "2"]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["a", "3"]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["d", "4"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["a", "3"]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["d", "4"]}]}], ")"}]}], "0", "0", "0"},
       {
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "2"], "]"}], " ", 
          SubscriptBox["a", "2"]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["a", "3"]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["d", "3"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["d", "4"]}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "2"], "]"}], " ", 
            SubscriptBox["a", "2"]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["a", "3"]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["d", "4"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["a", "3"]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["d", "4"]}]}], ")"}]}], "0", "0", "0"},
       {"0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "2"], "]"}]}], " ", 
          SubscriptBox["a", "2"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["a", "3"]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["d", "4"]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "+", 
             SubscriptBox["\[Theta]", "3"]}], "]"}]}], " ", 
          SubscriptBox["a", "3"]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["d", "4"]}]}], "0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["The Linear Velocity Jacobian obtained for 3R Spatial is: \n", 
   MatrixForm[{{-Cos[
         Subscript[$CellContext`\[Theta], 2]] Sin[
         Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`a, 2] - 
      Cos[Subscript[$CellContext`\[Theta], 2] + 
        Subscript[$CellContext`\[Theta], 3]] Sin[
        Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`a, 3] - 
      Cos[
        Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`d, 3] + 
      Sin[
         Subscript[$CellContext`\[Theta], 1]] 
       Sin[
        Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4], -
      Cos[
        Subscript[$CellContext`\[Theta], 1]] (Sin[
          Subscript[$CellContext`\[Theta], 2]] Subscript[$CellContext`a, 2] + 
       Sin[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] 
        Subscript[$CellContext`d, 4]), -Cos[
        Subscript[$CellContext`\[Theta], 1]] (
       Sin[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4]), 
      0, 0, 0}, {Cos[
         Subscript[$CellContext`\[Theta], 1]] Cos[
         Subscript[$CellContext`\[Theta], 2]] Subscript[$CellContext`a, 2] + 
      Cos[
         Subscript[$CellContext`\[Theta], 1]] 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] - 
      Sin[
        Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`d, 3] - 
      Cos[
        Subscript[$CellContext`\[Theta], 1]] 
      Sin[Subscript[$CellContext`\[Theta], 2] + 
        Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4], -
      Sin[
        Subscript[$CellContext`\[Theta], 1]] (Sin[
          Subscript[$CellContext`\[Theta], 2]] Subscript[$CellContext`a, 2] + 
       Sin[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] 
        Subscript[$CellContext`d, 4]), -Sin[
        Subscript[$CellContext`\[Theta], 1]] (
       Sin[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4]), 
      0, 0, 0}, {0, -Cos[
         Subscript[$CellContext`\[Theta], 2]] Subscript[$CellContext`a, 2] - 
      Cos[Subscript[$CellContext`\[Theta], 2] + 
        Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
      Sin[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4], -
       Cos[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
      Sin[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4], 0,
       0, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8128736602503576`*^9, 3.8128738771876755`*^9, 
  3.8128739106905327`*^9, 3.812873964182455*^9, 3.812874294463801*^9, 
  3.8128749442034335`*^9, 3.8128935304001813`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The Body Fixed Angular Velocity Jacobian obtained for 3R \
Spatial is: \\n\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "3"], "]"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "4"], "]"}]}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "5"], "]"}]}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "5"], "]"}]}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}]}], 
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "6"], "]"}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "5"], "]"}]}], 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "6"], "]"}]}], "0"},
       {
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "2"], "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "2"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               SubscriptBox["\[Theta]", "2"], "]"}]}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "4"], "]"}]}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "5"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "4"], "]"}]}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "5"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "5"], "]"}]}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "6"], "]"}]}], 
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "6"], "]"}]}], "0"},
       {
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "2"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "3"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "3"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "2"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "3"], "]"}]}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "3"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "4"], "]"}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "5"], "]"}]}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "4"], "]"}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "5"], "]"}]}], 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "5"], "]"}], "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "The Body Fixed Angular Velocity Jacobian obtained for 3R Spatial is: \n", 
   MatrixForm[{{-Cos[
         Subscript[$CellContext`\[Theta], 3]] (Cos[
           Subscript[$CellContext`\[Theta], 4]] Cos[
           Subscript[$CellContext`\[Theta], 5]] Cos[
           Subscript[$CellContext`\[Theta], 6]] Sin[
           Subscript[$CellContext`\[Theta], 2]] + Cos[
           Subscript[$CellContext`\[Theta], 2]] Cos[
           Subscript[$CellContext`\[Theta], 6]] Sin[
           Subscript[$CellContext`\[Theta], 5]] - Sin[
          Subscript[$CellContext`\[Theta], 2]] Sin[
          Subscript[$CellContext`\[Theta], 4]] Sin[
          Subscript[$CellContext`\[Theta], 6]]) + Sin[
         Subscript[$CellContext`\[Theta], 3]] (Cos[
           Subscript[$CellContext`\[Theta], 6]] Sin[
           Subscript[$CellContext`\[Theta], 2]] Sin[
           Subscript[$CellContext`\[Theta], 5]] + Cos[
           Subscript[$CellContext`\[Theta], 2]] (-Cos[
             Subscript[$CellContext`\[Theta], 4]] Cos[
             Subscript[$CellContext`\[Theta], 5]] Cos[
             Subscript[$CellContext`\[Theta], 6]] + Sin[
             Subscript[$CellContext`\[Theta], 4]] Sin[
             Subscript[$CellContext`\[Theta], 6]])), -Cos[
         Subscript[$CellContext`\[Theta], 5]] Cos[
         Subscript[$CellContext`\[Theta], 6]] Sin[
         Subscript[$CellContext`\[Theta], 4]] - Cos[
        Subscript[$CellContext`\[Theta], 4]] Sin[
        Subscript[$CellContext`\[Theta], 6]], -Cos[
         Subscript[$CellContext`\[Theta], 5]] Cos[
         Subscript[$CellContext`\[Theta], 6]] Sin[
         Subscript[$CellContext`\[Theta], 4]] - Cos[
        Subscript[$CellContext`\[Theta], 4]] Sin[
        Subscript[$CellContext`\[Theta], 6]], Cos[
        Subscript[$CellContext`\[Theta], 6]] Sin[
        Subscript[$CellContext`\[Theta], 5]], -Sin[
        Subscript[$CellContext`\[Theta], 6]], 0}, {Cos[
         Subscript[$CellContext`\[Theta], 3]] (Cos[
           Subscript[$CellContext`\[Theta], 6]] Sin[
           Subscript[$CellContext`\[Theta], 2]] Sin[
           Subscript[$CellContext`\[Theta], 4]] + (Cos[
             Subscript[$CellContext`\[Theta], 4]] Cos[
             Subscript[$CellContext`\[Theta], 5]] Sin[
             Subscript[$CellContext`\[Theta], 2]] + Cos[
             Subscript[$CellContext`\[Theta], 2]] Sin[
             Subscript[$CellContext`\[Theta], 5]]) Sin[
           Subscript[$CellContext`\[Theta], 6]]) + Sin[
         Subscript[$CellContext`\[Theta], 3]] (-Sin[
           Subscript[$CellContext`\[Theta], 2]] Sin[
           Subscript[$CellContext`\[Theta], 5]] Sin[
           Subscript[$CellContext`\[Theta], 6]] + Cos[
           Subscript[$CellContext`\[Theta], 2]] (Cos[
             Subscript[$CellContext`\[Theta], 6]] Sin[
             Subscript[$CellContext`\[Theta], 4]] + Cos[
             Subscript[$CellContext`\[Theta], 4]] Cos[
             Subscript[$CellContext`\[Theta], 5]] Sin[
             Subscript[$CellContext`\[Theta], 6]])), -Cos[
         Subscript[$CellContext`\[Theta], 4]] Cos[
         Subscript[$CellContext`\[Theta], 6]] + Cos[
         Subscript[$CellContext`\[Theta], 5]] Sin[
         Subscript[$CellContext`\[Theta], 4]] Sin[
         Subscript[$CellContext`\[Theta], 6]], -Cos[
         Subscript[$CellContext`\[Theta], 4]] Cos[
         Subscript[$CellContext`\[Theta], 6]] + Cos[
         Subscript[$CellContext`\[Theta], 5]] Sin[
         Subscript[$CellContext`\[Theta], 4]] Sin[
         Subscript[$CellContext`\[Theta], 6]], -Sin[
        Subscript[$CellContext`\[Theta], 5]] Sin[
        Subscript[$CellContext`\[Theta], 6]], -Cos[
        Subscript[$CellContext`\[Theta], 6]], 0}, {Sin[
         Subscript[$CellContext`\[Theta], 2]] (Cos[
           Subscript[$CellContext`\[Theta], 5]] Sin[
           Subscript[$CellContext`\[Theta], 3]] + Cos[
           Subscript[$CellContext`\[Theta], 3]] Cos[
           Subscript[$CellContext`\[Theta], 4]] Sin[
           Subscript[$CellContext`\[Theta], 5]]) + Cos[
         Subscript[$CellContext`\[Theta], 2]] (-Cos[
           Subscript[$CellContext`\[Theta], 3]] Cos[
           Subscript[$CellContext`\[Theta], 5]] + Cos[
           Subscript[$CellContext`\[Theta], 4]] Sin[
           Subscript[$CellContext`\[Theta], 3]] Sin[
           Subscript[$CellContext`\[Theta], 5]]), Sin[
        Subscript[$CellContext`\[Theta], 4]] Sin[
        Subscript[$CellContext`\[Theta], 5]], Sin[
        Subscript[$CellContext`\[Theta], 4]] Sin[
        Subscript[$CellContext`\[Theta], 5]], 
      Cos[
       Subscript[$CellContext`\[Theta], 5]], 0, 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8128736602503576`*^9, 3.8128738771876755`*^9, 
  3.8128739106905327`*^9, 3.812873964182455*^9, 3.812874294463801*^9, 
  3.8128749442034335`*^9, 3.8128935305021763`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(c) Composite Jacobian and Singularities:", "Subsection",
 CellChangeTimes->{{3.812874307960861*^9, 3.8128743104888763`*^9}, {
  3.8128747584370537`*^9, 3.8128747754014177`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"JcompPUMA560", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"JvpPUMA560", ",", "JwbPUMA560"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<The composite Jacobian obtained for PUMA 560 is: \\n\>\"", ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{"MatrixForm", "[", "JcompPUMA560", "]"}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8128747816310463`*^9, 3.812874918235114*^9}, {
  3.8128749486682777`*^9, 3.8128749491114516`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The composite Jacobian obtained for PUMA 560 is: \\n\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "2"], "]"}]}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["a", "2"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["a", "3"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["d", "3"]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["d", "4"]}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "2"], "]"}], " ", 
            SubscriptBox["a", "2"]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["a", "3"]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["d", "4"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["a", "3"]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["d", "4"]}]}], ")"}]}], "0", "0", "0"},
       {
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "2"], "]"}], " ", 
          SubscriptBox["a", "2"]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["a", "3"]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          SubscriptBox["d", "3"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["d", "4"]}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "2"], "]"}], " ", 
            SubscriptBox["a", "2"]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["a", "3"]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["d", "4"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["a", "3"]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "+", 
              SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
            SubscriptBox["d", "4"]}]}], ")"}]}], "0", "0", "0"},
       {"0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "2"], "]"}]}], " ", 
          SubscriptBox["a", "2"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["a", "3"]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["d", "4"]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "+", 
             SubscriptBox["\[Theta]", "3"]}], "]"}]}], " ", 
          SubscriptBox["a", "3"]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "+", 
            SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
          SubscriptBox["d", "4"]}]}], "0", "0", "0"},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "3"], "]"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "4"], "]"}]}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "5"], "]"}]}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "5"], "]"}]}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}]}], 
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "6"], "]"}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "5"], "]"}]}], 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "6"], "]"}]}], "0"},
       {
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "2"], "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "2"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               SubscriptBox["\[Theta]", "2"], "]"}]}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "6"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "2"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "4"], "]"}], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "5"], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "6"], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "4"], "]"}]}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "5"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "4"], "]"}]}], " ", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "5"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "4"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "6"], "]"}]}]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "5"], "]"}]}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "6"], "]"}]}], 
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "6"], "]"}]}], "0"},
       {
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "2"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "3"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "3"], "]"}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "2"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "3"], "]"}]}], " ", 
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "4"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "3"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "5"], "]"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "4"], "]"}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "5"], "]"}]}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "4"], "]"}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "5"], "]"}]}], 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "5"], "]"}], "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["The composite Jacobian obtained for PUMA 560 is: \n", 
   MatrixForm[{{-Cos[
         Subscript[$CellContext`\[Theta], 2]] Sin[
         Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`a, 2] - 
      Cos[Subscript[$CellContext`\[Theta], 2] + 
        Subscript[$CellContext`\[Theta], 3]] Sin[
        Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`a, 3] - 
      Cos[
        Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`d, 3] + 
      Sin[
         Subscript[$CellContext`\[Theta], 1]] 
       Sin[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4], -
      Cos[
        Subscript[$CellContext`\[Theta], 1]] (Sin[
          Subscript[$CellContext`\[Theta], 2]] Subscript[$CellContext`a, 2] + 
       Sin[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] 
        Subscript[$CellContext`d, 4]), -Cos[
        Subscript[$CellContext`\[Theta], 1]] (
       Sin[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4]), 
      0, 0, 0}, {Cos[
         Subscript[$CellContext`\[Theta], 1]] Cos[
         Subscript[$CellContext`\[Theta], 2]] Subscript[$CellContext`a, 2] + 
      Cos[
         Subscript[$CellContext`\[Theta], 1]] 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] - 
      Sin[
        Subscript[$CellContext`\[Theta], 1]] Subscript[$CellContext`d, 3] - 
      Cos[
        Subscript[$CellContext`\[Theta], 1]] 
      Sin[Subscript[$CellContext`\[Theta], 2] + 
        Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4], -
      Sin[
        Subscript[$CellContext`\[Theta], 1]] (Sin[
          Subscript[$CellContext`\[Theta], 2]] Subscript[$CellContext`a, 2] + 
       Sin[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] 
        Subscript[$CellContext`d, 4]), -Sin[
        Subscript[$CellContext`\[Theta], 1]] (
       Sin[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
       Cos[Subscript[$CellContext`\[Theta], 2] + 
          Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4]), 
      0, 0, 0}, {0, -Cos[
         Subscript[$CellContext`\[Theta], 2]] Subscript[$CellContext`a, 2] - 
      Cos[Subscript[$CellContext`\[Theta], 2] + 
        Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
      Sin[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4], -
       Cos[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + 
      Sin[Subscript[$CellContext`\[Theta], 2] + 
         Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4], 0,
       0, 0}, {-Cos[
         Subscript[$CellContext`\[Theta], 3]] (Cos[
           Subscript[$CellContext`\[Theta], 4]] Cos[
           Subscript[$CellContext`\[Theta], 5]] Cos[
           Subscript[$CellContext`\[Theta], 6]] Sin[
           Subscript[$CellContext`\[Theta], 2]] + Cos[
           Subscript[$CellContext`\[Theta], 2]] Cos[
           Subscript[$CellContext`\[Theta], 6]] Sin[
           Subscript[$CellContext`\[Theta], 5]] - Sin[
          Subscript[$CellContext`\[Theta], 2]] Sin[
          Subscript[$CellContext`\[Theta], 4]] Sin[
          Subscript[$CellContext`\[Theta], 6]]) + Sin[
         Subscript[$CellContext`\[Theta], 3]] (Cos[
           Subscript[$CellContext`\[Theta], 6]] Sin[
           Subscript[$CellContext`\[Theta], 2]] Sin[
           Subscript[$CellContext`\[Theta], 5]] + Cos[
           Subscript[$CellContext`\[Theta], 2]] (-Cos[
             Subscript[$CellContext`\[Theta], 4]] Cos[
             Subscript[$CellContext`\[Theta], 5]] Cos[
             Subscript[$CellContext`\[Theta], 6]] + Sin[
             Subscript[$CellContext`\[Theta], 4]] Sin[
             Subscript[$CellContext`\[Theta], 6]])), -Cos[
         Subscript[$CellContext`\[Theta], 5]] Cos[
         Subscript[$CellContext`\[Theta], 6]] Sin[
         Subscript[$CellContext`\[Theta], 4]] - Cos[
        Subscript[$CellContext`\[Theta], 4]] Sin[
        Subscript[$CellContext`\[Theta], 6]], -Cos[
         Subscript[$CellContext`\[Theta], 5]] Cos[
         Subscript[$CellContext`\[Theta], 6]] Sin[
         Subscript[$CellContext`\[Theta], 4]] - Cos[
        Subscript[$CellContext`\[Theta], 4]] Sin[
        Subscript[$CellContext`\[Theta], 6]], Cos[
        Subscript[$CellContext`\[Theta], 6]] Sin[
        Subscript[$CellContext`\[Theta], 5]], -Sin[
        Subscript[$CellContext`\[Theta], 6]], 0}, {Cos[
         Subscript[$CellContext`\[Theta], 3]] (Cos[
           Subscript[$CellContext`\[Theta], 6]] Sin[
           Subscript[$CellContext`\[Theta], 2]] Sin[
           Subscript[$CellContext`\[Theta], 4]] + (Cos[
             Subscript[$CellContext`\[Theta], 4]] Cos[
             Subscript[$CellContext`\[Theta], 5]] Sin[
             Subscript[$CellContext`\[Theta], 2]] + Cos[
             Subscript[$CellContext`\[Theta], 2]] Sin[
             Subscript[$CellContext`\[Theta], 5]]) Sin[
           Subscript[$CellContext`\[Theta], 6]]) + Sin[
         Subscript[$CellContext`\[Theta], 3]] (-Sin[
           Subscript[$CellContext`\[Theta], 2]] Sin[
           Subscript[$CellContext`\[Theta], 5]] Sin[
           Subscript[$CellContext`\[Theta], 6]] + Cos[
           Subscript[$CellContext`\[Theta], 2]] (Cos[
             Subscript[$CellContext`\[Theta], 6]] Sin[
             Subscript[$CellContext`\[Theta], 4]] + Cos[
             Subscript[$CellContext`\[Theta], 4]] Cos[
             Subscript[$CellContext`\[Theta], 5]] Sin[
             Subscript[$CellContext`\[Theta], 6]])), -Cos[
         Subscript[$CellContext`\[Theta], 4]] Cos[
         Subscript[$CellContext`\[Theta], 6]] + Cos[
         Subscript[$CellContext`\[Theta], 5]] Sin[
         Subscript[$CellContext`\[Theta], 4]] Sin[
         Subscript[$CellContext`\[Theta], 6]], -Cos[
         Subscript[$CellContext`\[Theta], 4]] Cos[
         Subscript[$CellContext`\[Theta], 6]] + Cos[
         Subscript[$CellContext`\[Theta], 5]] Sin[
         Subscript[$CellContext`\[Theta], 4]] Sin[
         Subscript[$CellContext`\[Theta], 6]], -Sin[
        Subscript[$CellContext`\[Theta], 5]] Sin[
        Subscript[$CellContext`\[Theta], 6]], -Cos[
        Subscript[$CellContext`\[Theta], 6]], 0}, {Sin[
         Subscript[$CellContext`\[Theta], 2]] (Cos[
           Subscript[$CellContext`\[Theta], 5]] Sin[
           Subscript[$CellContext`\[Theta], 3]] + Cos[
           Subscript[$CellContext`\[Theta], 3]] Cos[
           Subscript[$CellContext`\[Theta], 4]] Sin[
           Subscript[$CellContext`\[Theta], 5]]) + Cos[
         Subscript[$CellContext`\[Theta], 2]] (-Cos[
           Subscript[$CellContext`\[Theta], 3]] Cos[
           Subscript[$CellContext`\[Theta], 5]] + Cos[
           Subscript[$CellContext`\[Theta], 4]] Sin[
           Subscript[$CellContext`\[Theta], 3]] Sin[
           Subscript[$CellContext`\[Theta], 5]]), Sin[
        Subscript[$CellContext`\[Theta], 4]] Sin[
        Subscript[$CellContext`\[Theta], 5]], Sin[
        Subscript[$CellContext`\[Theta], 4]] Sin[
        Subscript[$CellContext`\[Theta], 5]], 
      Cos[
       Subscript[$CellContext`\[Theta], 5]], 0, 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.812874857494707*^9, 3.8128748872089615`*^9}, 
   3.8128749195181713`*^9, 3.81287495010118*^9, 3.812893534565917*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<The value of the determinant of the composite Jacobian Matrix for \
PUMA 560 is: \>\"", ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Det", "[", "JcompPUMA560", " ", "]"}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8128934819111557`*^9, 3.8128935009255657`*^9}, {
  3.8128936467985973`*^9, 3.8128936896991816`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The value of the determinant of the composite Jacobian Matrix \
for PUMA 560 is: \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "5"], "]"}]}], " ", 
    SubscriptBox["a", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "3"], "]"}], " ", 
       SubscriptBox["a", "3"]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "3"], "]"}], " ", 
       SubscriptBox["d", "4"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "2"], "]"}], " ", 
       SubscriptBox["a", "2"]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "2"], "+", 
         SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
       SubscriptBox["a", "3"]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "2"], "+", 
         SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
       SubscriptBox["d", "4"]}]}], ")"}]}]}],
  SequenceForm[
  "The value of the determinant of the composite Jacobian Matrix for PUMA 560 \
is: ", -Sin[
     Subscript[$CellContext`\[Theta], 5]] Subscript[$CellContext`a, 2] (Sin[
       Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] + Cos[
       Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4]) (Cos[
       Subscript[$CellContext`\[Theta], 2]] Subscript[$CellContext`a, 2] + 
    Cos[Subscript[$CellContext`\[Theta], 2] + 
       Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`a, 3] - 
    Sin[Subscript[$CellContext`\[Theta], 2] + 
      Subscript[$CellContext`\[Theta], 3]] Subscript[$CellContext`d, 4])],
  Editable->False]], "Print",
 CellChangeTimes->{3.812893695066353*^9}]
}, Open  ]],

Cell[TextData[{
 "We get three singularity conditions here when :\n\n\t(i) Wrist Singularity:\
\n\t\n\t\tThis occurs when Sin[ \[Theta]5 ] = 0 , i.e, \[Theta]5 = 0 or \
\[Theta]5 = \[Pi]. This is the the only singularity which affects the \
orientation of the manipulator. There is a loss of degree of freedom as the \
orientation space is restricted to the \t\t3S space where one of the angles \
is fixed. Thus only a fixed number of orientations can be achieved and there \
are there are several solution for \[Theta]4 and \[Theta]5 for the same \
orientation as they both are about the \t\t\tsame axes.\n\t\t\n\t\t",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
9cnvcz77h4pv3ms49d1w9BVt1hN3Wbq3sRhrrXK115o6G1fb6pSNlTONlfNN
lSuNFatN1ctdbfqKEs290IndXzXv/bYn/OJMdeLSRLl6rHq8O7+rI6uvv2By
pGy2v3C8P29mrNpQnLhw4Wjrzj+W3D7bV5Iz1dEy3dowU5imvHR4dPefOo98
2R9xcTYnSdNSp62vmS4s6M/KGiouXCnItaYkGKIiR0PvVD2KKa2umkmNnb91
auLWsYmyZK1+wWVdtRsWLMvj5qVJ48Kgvq96pjKtIzemtiihqb10fLBhtq9+
uLu2a7xjTDevW51bVY4rZ4dm50fm54bnhEM9pdLNr2oVevWkvq92LutBY8b9
GtWYgSHYt5LJBT0EJ3DLumltedWqX8fdvqB15eWwVSencGZ6cK0gbiL7/szy
GEF4xBBEWOkYZrHBYs4+SS3nXp8BNoifhp/JGYL2WLx2ndumJYdb1u9fb7x0
rDA7uZfAxIzE1xbD9hwm34hUh3ZylCrP0sCgslSkdaWE19TnDLnXCZh1iFKP
0EYPCpjLTqpnbe01qoTI3uvHqw58Vrbvs66T3y9cO6mKurmUmWCsLbcM9tqX
VR6DzqXX2vVap0Hr1Wt9hlWP0eAbGbInPFUe2NNz5qQiP9080+c2L9rNqjXD
7LJ2QqufWjcqLPop49qMbXnUnROnOHmg4fa5vu5mo3rRZNCbZyaMGU+V+z7r
PfrVaNT5xbIkQ0+Nc6Tb2tm6VFM7XVapKKtai09wnDu3vPdA15FTpffjq4vL
p58+mLpzdvLe6dm86OXpFqN6aGWmVzXUujjUOj/WqRxum+tvnhpomZrqUxqU
FqvBZTM6bOtWl9VFeAnCR2AeDNZ4kQ/cg5M+kvRRpI9eGFtLfVBz/3rO3IiW
Jtm30rqyAfY5IYh8kFl+NpBjPoDJAQ3mx0x5MaOPr3bP9bkxFytnDos6OSbr
5NRr1cmfs3F/7p/f7ecNvf8UtbKwOtI+M9KmXJnxNpdrBRq/dDy/uniCJlgx
Z/LXY3KxeQSKhwQwEhywDO+0UjV5o9GX83MeNy4O61gSVf8GYjK+v6Cu8FLg
dRFL8+a+NkXG06HwS6MXD4+E7GoI2VN16XhtxI2m5NjOmrKxiSGdUeMhvHQg
ua0ZqIpS44nDw1cvT3V3ORxWwMESXCRH4yxBsTgLhNUDZwTtw6qnC1Jnrp5s
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
vFxHjeHy0bZDO/M7W1ROB775RJzI5KKtaXxgqSx1trVojXaL9wZVOeBogb0Y
CmAeal2LDXespcf03j5f+CS8pr121mIQC9egsBzY/Y0VtPeRNkNZ8mR7mWpN
7UEXRtEwROaFVp2fgmQHYxmwqrTGR5QVJLbpVQ7pNks3g5Xix6BhnED12FGj
VBB4Z3/iQKV5GeGQlfNAqwp6AWxUSqE2HNRPV+INYhvhOR7P5RlHedpsQlj/
XL8Lc20LJvd71liWNa7q+9o6CtOy0mITKguLlbPzAsMHvvfdAylMPaXCefl0
/9/9l+Tb17qmJ81i7b7XzOQUzWMUj9OSSidOfwaW/l7BYu+23jxbU1Wk4JBf
UXp+nMTkf03maYBauZH+xMlFb/1NI9xmriJDe+yb+mN7chXjRtSsLeAkm66d
WZg2tpWt91dhzjWBtHipogrDYS5g1nqnegwFCZM3TtSG7E5+fLdyakiLuWnx
LIjG4YrJUDBAsSp7MvNBV3+92mcVHco0y8JYnV96L6X7Q+BUe81YxMXsqux+
r1UMOmLEpQiF3xMomwODtX4ZlvQymJ1hcMCxG0EIWwHNRf7SOAF1c1/4Sqi0
S8kjsMgw9Y5Oqd8entHJWW513l2Xo0oOH57pcfqc24rJIWiK9rm9Jr1ROT03
MTAsEDtJkIHvffdA8iw9O2EN2d/0t//740tn2sdHzLKB4jXWkGd5iuIxkifl
+BipkQ2B0S3Fs5cP5yQ9bNWonOi1IMBIwr8gQPqvhEztUks3sL7CpkUv7Pu4
8ubpSqPWDfsEvRDAuoYPt1jLU1TlOWOzU0arCTevEWODhvS4tqhrhVdDUi8d
yYy+UdNYrtCq7IKKLhCbrI2L5mXgcVET/WtPbjdkP+maHdIBsXr/T+8yfvKi
4A3xuLD4qNJ7l3K6G6YALTkLpFZKsOUGxbPQfsUQjE5lqcnvz4vv7ahcnuw3
KyZMU6NrE8P60QHtQPdSd9tie/Nca+NcbcV4ZcFQbcFoe+V8V62yo0r4utjf
pB5qXepvVg22qIfalCMdi8Pt880VA5X5Te113cvzS7zYtBq2Og0y+W8Fz7Gu
GJS+1uLV7AfTs33ubcTkmy1/LMXiXsxps+ObOxW+k2InTHBmdtIacrDhP/8f
Mcd/aGmpW7WZPT7h4QEvKuj6Wp4gw1MkjxOQz0Umh3TNUIxZ604M7bhzpqy5
agrHRDXV7557UZ7LFnAB5A8kC8OGgs4gY69YNRYsjHsjL4x9/6fK1Ad9bgfx
Y9Z3gZ58QDnuKEkeu3EmJ/RySUxU5+OIvhtn6498k3Y9JDf2TlVl3sDEkMZi
9NKk7JWViyGIVgi7BWutVt45U1mRPq5TOjaHxP/i2ws/BrDAbHTdPJOSGFGr
GFlFV4fBOENBV0aR77BbBepnhzmpoVbllcPpZ3YVhJ/sCT/ffe1U7eUTVReP
lZ8/Wnpif/7hXZmHv8s8/UPxiX35p/bkXjlYEn2h5fGVzojTTbdDam4eqRSO
i/sKz+zKOf1d+tk9KRf2Jx//7v6Z/VFJ0QVTA3NyYw4U9v9uTqnfHuTtKhIl
yeO54GnIW0qPHJ3tc/nekHVliw4n/TbQh/OCCftOih3NM4x62nnr7MB7f596
8mBdeb5CNavXr66Y11d9HhcDi5zwr/wJsjz9/7P31u9tZdu24B/TX//Ut7/u
9773br+Lp97BYkwllUqqwgwOx0kcZtuJHVPsmGJmZmYZZEm20GJmhq3NW71R
lh3bqVQqJ5V7NM4sH8WWtjaONddcc44JxyAohtJrbzjtk2NhPygY010/VFv0
aFAqMCWER7CEzhGvzyZP6DoR78TDkjkVTcYQOgiAohA22m67uHf8yHfdo51a
KIoSW67wklvy2YGFMXV+Rue546UnD1ScOlB/8Vj7w6sDndUC0YzeYfEjEMru
wvoKG2ofbKZgfdni7XMtE11KvxNgQ0YU3nZ9EAQg+ZIu5cDjxuIxi8ZLn4Eo
JbHOMjlH5jhBiaTVSHb99dneT16m7hu6cKDr8K6Koz9Vndhbm3Kw4ezh5vNH
W8iDun919OG18cy08ef3eLW5S/V50tLHgtxbM1nXJp5cGbt1svPywYbLB2tT
D1Wd+bnoh4+vpezLqHvRZ1ixs2rhrMj6P+Qj9eGBfcRZh5x+IjVib1Ph0rPr
o9Jp/3th8tjWaVDJLKn1QIgoal6GKh8a9n/SePdsd1+LUC3X65RqpUhp0VlC
wXCCBO5vBtJpo1tb4kwpENPnwmEONL3gnf0xt71y2mbyEglpE4nVJzi3LLOJ
EfFoRmI3Yo7JSWZjVu6QkBOteKI49m3/jZOjRnWYUqAlXpd5ScSiEUS74uxo
4RUX9L58MdLfKVNJQ3CYDmKwIwjxCofjTKGQQuzMfjjw+GarVGBEQLqGiP22
t1Aqo4/L5w4MdU2e2HtlpGs65I3Qh8rMPuhyapQOsFDRFdyijVTnLX/z70WH
v6t78XihoXyxtmKquXa+u3V5uE81N2ld5vukwqBuBTWqcYuGcBqIgD3ms8Zs
Wty0ghoUsE4GShc8i1MWEc8mmLH0t4nupxVXl/QoxEYMZlaScW7ik3zGPgxw
S53cM0cQarGr/vlizo1hFT8IhvD3wuRJvAlgJIA6BLGx58D1HT0tBbMmFdW7
E8eIgDGqEulNeksUir52K28Ogk0joW6MCCVCjkM6hTPndvfNEwX8CQkQjlIC
jTEm6W19W7TXKZFsbjgjmotgCGSTw5kXFs7uHKjMXaKcdDqajP8CRiV3HUGj
UTCAIEACAzM9O+hlFzYIRHChIWqX3Xa4r0155mj5i/xek9HOZgOyjw/y6zM9
6OOymuw1RY2pp68tC4TkpCM+KWDFbBg9UqozFLay5M26wfvLfy88s7dpccpA
9Uz/NT4NGxEiR/lwJMLni4wmM3lGYux6VLz0LokPA+uZHCN0Un93lbIuX2yW
QjDwrtbLkvjtgBAA6lxGe7PdT09MCQZNER/NRUQMA3C1TKtWaQLBwDv43rif
TDAdfKIhcGZImrLn6bNbdVq5GcOYhmhUNzS6kdlq50q6ZfEriXBvYFS4AYVR
zWL44ZnRm8cHBlpU9BbJr0M3kz5Zv/cUh2GMYRhTJsTF8xnnn67UYTrcUV1u
YEK6GCrMXEo5VD3YI/V6wmvHsrdg8hjlfWuk+uy7LwqelOo1Bi5bhz1THJOz
GgJCnu3GqcGP/in7xqlupcT5qvTB1s/s2l8SDJlHo1EYQZh0zYQPJx/5Dwbr
mByHCJXI112lbnmxohVGo6Ekk//uQSAug3usXvb05GTR1VmtyIvDXHAajbmd
HqfDGYm8k26e3M0TY+jZbvI0lg38/OXllvJRp9VH0P3o6Z7CCN2nEksU+SA2
0HL6hcaWusBRbGHAe/v40NOr48IpqukMTg8Zb3SbMt2XmNubqT+Nh77pxDyU
VrWi6vedVrir3n73wuLd1H6lzAOyJZ8EN8F4KyZHo5hkTvXo6vO+1nG308cO
JMy+MA4y00uUvKI4MTNkOL+v48//b+6dc31qmTu+yEtsgo2vHSXahWE4jFM5
6kx7ezQhTzEuvJDEh4F1TI6BhILvaStTNBfJ1YJINBld+d2DwBDxnCInreno
J4Ult6bNcn8Miy8zxmAIBkEQQX510crm38t510zyBukmL82tZN4sOfzDlcUp
eTgYpdkHYeooaYNoA2mDafmzXxVdYcICBA6GsYE6W9qh/qIHM1qJN8Ye85v5
kQRXAbrGD6U3gVP6hDDN5FRB6OKsM+Om6Mze8ZfPhT43RKusc2VKFJmuqRV9
U5DTqPkh2aMrpcvz6kgoyq7zJjI5SueTxHAEwAdalcd3Nn3yPwtune1Wil3x
0tI3ZnIMRTEAxYNELEI1IaUaWCMEm7nKHlwSHwpe9cnlC67mYknDc4lFBsBA
ksl/78AxVDgjTb9UsffP6SX3xkxyHyWqx1ZScVTwDi4fq3IVYx/4qBfuqhlN
Pfow49Zzu8VNckSMpTmMkxYE6XB6OBYL0suj6K+NlNMafhgRcMI1OcrLezsq
s+cc+gjH8Ju6kr8o2rA6XlDNrWkmp2pzgDDaVCU+/lPHyZ+7J4dNjCIuJ01A
cD1wUWJLvLoz3MgRc5tDw82ix1dqDCsuGEToU4uwAwXOSUrTmp9hL9peLTu8
reHzfym6crxJKrRi6CZb3vJ76dc4hpNMHiBiYZwgLUoOWyyT40km/8CwPk6O
EisCd0uJtKlQGjQjOLLpLZHE7weAHxGOGp5c6Kh6Om5WekgGYlIu3qkUIs3O
OMoElvGYkm/JuVmddjKDP7UMQ8gryUXxpUNm2Q7ZLNODm04Qr7Zn4KLk1KGB
EXxlKXArpe/8z9WtZQtBJ0RvkKRThA59c4UINOLxk9cf1RrPnwnqEyhCqKWR
B2lDh36oeXpv3OeB6agLxNWzs9UPm9dPvp7JDSvuxhe8u+dqrJogCmFMi21G
aYxRfCeZHIUR8h9hH9pVpzyxs+3r/yhO2VsqmteiMLrxlrf+XoLZLkLlOlKJ
65QQMaOHw+5WMrryQWG9Tw4TYp6tMnvh5ZN5uxJEo0km/wBAOqgmlacmazLv
TpNcqIVBiEho5PCOwDA5wrimYGyyVZqVWvvicb3PHsA5WTMqQoASOBzDoBgY
IkJeLODCQPLvINfLiK67x0nnF6WTABPJn5rgb7rm5rJH22pUuz8vTDvWPNWp
hoPMJzfQBlylLS4kvtVRrYvhUNnrMa8drSpUHt7ZdPNC98yYjvaB419ExNbN
fN6QyZkvU4ocldnT6altXguAU9MZkE4mx2kmx+kuejE6SZK61uI539O0xW0f
le/5NmNuSozA0IZb/gVMzpA5xoXH8VcGo19wHyTx+8D6ODlEiKYsZZmzJY9n
LTIQSeaufAgg+dSs9NXnTZdktiklOhiCaN3BeDvmd3LhaN8ag0lHDkcQH9Zd
vFB0o3OgbhaDGX1Xkh7QoM8nXpS01feXF3QWpHdl3el9cmPoRfpi4wvBQCN/
onN+ooM/1bXI613i9Yp4fUuLo3LJjJZ07/XLLovMZ5X79UtO+ZxRxtOrBVar
3GeSODUS+4rMPTnueHJHtPNvFTeODfZUaPTLQMCJgkEEgWAMR3GmDcnaicEv
uofXMDn1fyE/PDtiP7l74MSuofpyucvBNCnHERiJAgAQCcDkKEKsEeTcfLuJ
/06IyBOxpRlr6WNe6ZPxsI/pdR6ljVmFWPNeFMYl84HcW0s//LnyyM4sPo9k
8jWdNV7H5OtWj1mN4YTM/QSGT+aufDjYwCeftVY9W6h4uuBQQih9jySZ/HcN
IhbygMIJbXF6d2vFsFlvQ6kmZBgdhXiHTI5SIQCUZHIMRiySYMmdgdL7fUuT
GnqPGGE9xOdyTQ3PPEjLOb7n3p5vHvzwt4yv/+Pp3s/r04505N/qqMnurM/t
b8gbbHsxxlhPBW+0QTTdJl3s18gnbZo5j3jUNNUmHm0UTrdLF3uV4/WLzS9m
KgqE+ZmKG6f4J77vyzi/2PBMM1hjmOzQzvbLBVOy5QWpRChXiFVqmc6gMlv1
DofJ47L4gm4ADMJoFKX6TG16VjjapN+BYoROEyjMmv/i38seXRGK5oIoSmUt
+ryQTOycGleODImmp8WqFa/dCgYDGAjgkRDq94ABHxIOYkAIj0ZwFNksTMGy
MxBCxtp1eddn20ol0RCCwTgKkmcVoi4gQimggAHCa0WMmoBYqJ0YFFfmL145
Orr9b9VnjpSKFlfI0WtNGIrl4VUfOzFAxcnIc80ccXxNARanbss0007mk39A
SGByesKIEfJFW0MhvzaP79XDGPT6LSTxfkF6cCalu7t2Out2xeyo0O8N0N4U
PU1+l0xOF2GSvAaTnvB4o/7uiabypwN6pS3GJkFTGrDRSFir0NWWtT299/L+
lcrrKVUpP5ddP9ldnD7VVbMw1SucG5KTxh9VLo4pyZ/CcbV4xiCe1q4smEwy
j1sHWRQ+2bxhaVq9PKUWjipGGmbKHg09Ojd9/fDitYNTD07zGp8Z+l9aO4oU
lenTJY+6K7M7K3Naq3JaGgq7Wkv7+2onRlrmxtv5E+2LolG1dtFsU1jceqvP
5gk4fUFPIOwLhf3hiD8MBAEwHIWjEAajrPRuDPf6kZER0+nDrd/8ubC9VuN1
4DCM2WyRgX59bhb/+qWRC6e7U8935z0VNVZrpsessmWvROifGNKPDeinRsxz
U3bBrFMt91qMAZcj7PNGQ0E4HIJDQYh8EQogAR/s98JKsb/mmfTxiWnyKGya
oHnFrxO7DXKnTec0Siy6RevysGOsydr8UvrkbvPZ/QX7vir+4ZOG7z5vvHix
VbRsglF2hZtLP6eLQgk6hZ8Jm9ALp4xgAq0nz6QPAXgMoJY4X00IZcezpD75
hwSOyTltfwyXLJgqc8ZLM4dtKwASTV7K3ztwMKZesrRVjpblNtoMdnLWH38g
uZrzd3QRqdEfR2C/MVp+R/Agpbe7ke/3+5mbiSr0xulGBjG2BRAaIYIuyK4L
+KwgEsa3Sr4m4gXy67+QdKe9amSyNvDsrPTSroaXj6ZUPC9gIcJm1CwJqAX2
lVmzoE810bg0Vi8Yqp7vr5ztLB6vzeopvFNfcr+t7lln6/Om9qKaztLGgerO
iaYhXvvkXBdvoWdeNCxU8OQmicVvjmCUHjBVZSQQBdIfL23/svHK6X6Z0I4h
uMUSLitb3vZ1xXefd+zZPrNvx8J3nw589qemv/3vkn276h7cmCx4Ij91sHPb
ZyXffvpi9/cVR/bWpp5te3i7vzhvpqNeMjmknxkzTQzqJgbN4/2OvlZLZ6Op
ukCTcXbx5u6RnEsjjQULebf7Mq60PklryEh9cXnv3Qs7Hp39pvjyjx33Lw9f
PvVy39cZO/6Sv+Oz1l27RlNvTQhlHghNVCiLMzlK19ei9PIA3VyVFnDBcAgj
ogyTk8b1AE3ig8daJodIJl+e05Y86c2/32aQ+mEgOb363YOIOU1+/ujKWBc/
7AdwDI3rTb1jJqe+m3RlJdO624daytNn5QIHiqF04U+M6z0Bx1ilTWqnMCoB
A8OQ1zV/i63GAwg2YZ0VBaLy1gPEXLf9fsrQsR1ZUz1SvwPAEYI0BMSgKAqR
3kcIivijYdJ8QMgLBJxhl9lvVrv0CodWZlLwZYsjvPGOwaHmvsGmvs6qjrrC
+pdZlRXZFVXZTZWZg80Fy7P9XuEcPDIAZz7S7f5++Lu/teTcUYomI0oJ0lhn
2P5V8z//U9G3H/cd27dw+sj8/l0DX31c+9c/lG//su3CSUHGXdvRfbOf/7np
o38p/ehfCv/477n/63/c+2//15V/+X9u/PVf0r/+c863f8357KOMb/+au/e7
6uM/dZ09OH795OLF3YOnvqu+dar6+eP2rHuNOY9airPbi57W5N8vLbpfV5c9
NN4iN6gCFoN3acZYni04sWd4+7ahcxfHFxbdUZCdUbO9t4mEXssYnhgGp0Ip
GIGzHcy3vDdeE/ZP4neHBCanMn7JQXtxSlHwsCnvfqNF6UfAJJN/AHCaA6JJ
zfyoHAojzJz678XkMa/D31/HO/5lflux0GGIMOkqOBsqp9NbqLRAhGtvQ2xu
NPsQrIBsjGManEneYBVOqEHBqQdbSxU3U3pyHnZYdG4EglcbE3OrnKuhAtpF
JbkLhXEIREEACgfCPqfHYbbZDBaL3mxQGVQStWxRsTwvWRyXTbQqRhr088OB
gQ4o855j386F7z/vu5Iy01fv7muwl+Qqzxyf/OP/V//Hf27b8cXI6SMzN67O
3ro+fWhv176d/ZeOi3LuOEufRG6dUZ7dxzu+e/DETz0pB7rPHGo/d6Q59XTr
rctdD6/3Zz0YfvpgIOvhYMGTqeoiSWOFtqpA8+TaTOaV/oGWJbFAK1nSySUG
lcKokuuUUo1GZjCpHF57CIUpSSswjEz0Wa6l8L74tPPQ4b6JcWs4xCp/rRHz
x2Oc/CTXuBNfTS9kQcke4EgUCvn8HpvTY3N47E6vw+l3uqP+EA6jyTTEDwhc
2i7L5AgI80aWc+7VFj5usmsCKJRk8t89iJjD6FscU84OS8EgTDAxjb8Xk9uM
7pqcvsOfPRtukAddCNeVgeNiemWN7nGJ0L0YsM2NqhbHqRpDlM0Zj7d6oyqd
aGErcmswPjekf3Jj/F7q8PykHgQQugaTyfRAOe3C9RZn+A18TaYsHsEREAUC
sNsEWFQRkxoc6AqcPS74/svBcycmBzothhVwtMv68PrCD9/0fvqHnu2fTB/a
Pf34vrC1Rd3TbXhwV3ju2MyDi8vN+c6Zdqy3yttdYeutMQ416sfaDTODFv6k
TbRgE4vscrFLq/Tp1V6t0q1Tea2GiN0CiWZdjWVLTWVClwXAKDnHxMEsLsxO
8jJI933DhTPue6n8rz/vOH68f3rSEgmjsTU5Omv1eFdbMNODIjUtoppKR4Jg
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
GAISgllnSY4wL31WKQ5HI0kmf//YismJmENl1wt0Lq2LCasE3B6bWuvUGaga
vXd9yYiYXu3OSR9KO9MlXnCgMME4wzSTw2/UoXg9kzNpKyCqEWiLbrzMPl8y
WDMTckdp7XEmKXHjLXjtbv2S2rSshUMQFUthmomyTTFAahUSZ5LVqVCL3w3M
Txiep48e31V0+ejLuRFtJICwyTOxmEnnfHijaPe3Fwc758Ao1aYTQeGlZcfl
s6Pf/KX3q7/UPHkwoVR42BPxq5g8CoBd1UNZ14tHe2ZIB/uNzn0SSSRgPZND
AMnkrvL85cKnAqkgAiQ7Mv8OsAGTc4YiiFVutkosEWeE8UKNKvX8yNjSNA+J
RN/5JSNiVlOgqnju9N7mkS5D0MtxEefxvsGWEu4xxudGINSuc5Y8KL+x915L
TqdH56c9aRCNRfFXq2yYJd4YIV6QtBa29Rb3hCxU6yKC03+hM2dIJgcIKimS
ct/DVAsJ/bO7o6d+rr14pG6wXeF1RLg9pxQCQz6ovnz42pnCkW4BzeR4IBwd
GFbv2l7/zV87Pv/Ti/T7/Sqlk/7y1y40vsrk1BQ4FAjnPyh7drNsYWLpl5+r
JJJ4BeuZHIzgcxPW4meC0lyxchmORmJJJn/vWM/kMXZVE8fxgM8nm5WYxEY0
hDK/18oVU/2Dgmke1cB3y/TF2G+RjOT1AP0dsq//lPfswbRS6uW2i702Qk+8
Au7I2MHKZfW2Vw7t+duR/KsvVmZVdCIOjhJRhGLyjd1X0gEf6pjIOF9Ucqsx
ZA7TOSc4sZozg1Jy3JTLH4Oi6Pyo+dGVgfMHOh5fmxpq14d8TI4KE+GHqWMA
Y2O94sxbTY0VY0CYUuq3OoCaOvEnfyz5j/9e+p///DjzUZfZ7KO/+bVBrFeZ
HCVw1OvwXj1x98XjWoVQ+yZnPYkk1uEVnzyKT43os+6P5z6eU0kgEEgy+fvH
ZkyOYZjFaJzun1YsrEAhNocBjESCHk+E0gn/BZ7iWzM5EEaFc87v/lJ06Iea
/g4FjsV3+bWZhhswefyFyxzqq587u/fhvTO5onEZGKAjRVRoBUGpFMfNxgis
rXYkdV9h1vm2iA2hxzI4XtrD5NviCOG1RKZ6VtKvdlw61Jj/cJY/4Q4HYZxa
26fa6LCSU/QRLC/oC5/0ZNyuc9uC5ChiskQrKpVffdzy2Ucd339eUfZiyuMO
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
HK1TjtTKR+rkk83KuU7tXJd2rEEyULXQVzUzWLdA/pLXZh6vN49Umyfr7fxO
F69DN9Oun2pxTDR4hmrMPeXy1iJ+bfZEyYPBnGt9GWf7c6/xSh/LGl/oh1uN
4nmX0xKGomCMCp6jK0vuupLJodZ5l8lJD4Rhyu2hlnqZOA6O05n8r728lAZj
IJKXWfDsfp5gUkT/GkdjCJZk8iTeCpzI9WqcHAt7YcGYreDO3FgLeTNH6Rk6
/VZW72LdJDeJ3wLs+afETrn2ijibJE0Qfje6MO1//lR8cEfTwe8G0o5p7p8P
pJ32Ht+n2PfT/MFDHfcejvT0aVXaqECIVFaY067O7/u5Y9s3VWdSxoqyFC+f
LuWkDd493Xj7VHXqwcIzu7NO/pB+fMfjkz9kpPyUe2p3/rGducd+yDmyPevQ
908P0z/3ffP49E/5d0613D3Wkbq77uz3L6/vb759uP36vqZLu6ov7Ky8caA5
5/Jkya25opsjz641FT9sK33c+zJjoiKDX54ueJnOby7QdhbbO4psjbmqykxR
6cO5vBvjWVfGCm8J2547WvNcDVmmhmx1e5GiIVdQlyWufCQvvSMuvDnz+GL1
k0sNZXemmzNVjemK8tvCoqvzzy/PFl6Zf3FtoeAS79nZ8cxTAxmn+rLODGSe
7k0/2ZV9rr8obbzk5mR+6lDupZ5HJ2tvHSpPP9Wef2niacp4znle+e2lxify
4pvjpXd4FQ9k1Y91tU9WqjIEpQ/Hi+/3lz3ur8ud6q2UzvfZVviAXYeDAfoa
sEngIEFgYARTSa0WnRODmNpSgE4iYjtfc2H511Vg0fW5Gpnu9sX7+Q+LtFJD
jLrkGEwOFkRSnDyJt0E8nzwWd7MBPyKfczYVipdGg0FPvKFYnMnjkcmtJT2S
eBPQoikE1Y09CscIiMkHpTJVEAIkRru9aWel2z+b3f219Npp+N5l4s4l+FqK
98yhlX07pn7Y3vTTvtrzqb2FL+Qtrc6cbEnq+bEje7p++q595+cdx7YPHPum
/cCnVUe/rjy1veLw13n7Ps/c/2XGsW05Vw5U3jxTf/dac/q9rvyno+VFM41V
gta6pbb6pY5G8Wi/dqpfO92lnO6Q83pXlsZNmkWfRQLY5aBNDlqkUZcy4tMG
/Tq/TxOMWmHMheNu0lCCvGc8CO6BMQ+MumDICkUMYFgHBTVRvyrsU4dgG4i5
ENgOR4wg+SfABIf10aA2HNKFI6YoYEKiRgLQx0Iawi1H7cuQeRE0LUJmAWxY
AGRjXkG/ebZHw+tRLwwYZnu1k+0r0x2quV7dfJ9+vke/NGKbaFG1vZjvKJnv
qRD2VQl5XSr5tEMx45rtUgmHLdIpr2IurBVGrQrEpYV9ZijihlAAi22U0x3P
h/ltrjIRA6PQUMvIhQNXKnJq/I4QvSaNgSSTJ33yJN4K65iccrPBELbCd1U/
Eww3mtw2MJ5BkPCeJJP/1sCZ1DuqeTqdn80osRIIhElmnDfOjO/8snfP9pkL
JzRXUswph9Qn9slO7Jcc3yfcv3P6x+19275r+WFHy4ljI2mpi+dPT547Pnnp
5NyFowsHt4+f2NWWeW2wp0a2PO1S8j2qRZdK6NAsOQxSl1XlcxgDTlvA5Qx5
3GGfFwj4o8EAyFgkBEdCEBACgSAIhCAwAsNRBAERFKKMfkFJlTCGIxjdsp42
KikGo6Wu6KxDhMBhxqjqGdLoVETKcATHEUpmlvwTa2t/g0I4CmJIlDScNDiK
QxEsGkaAEExaNEz9jAQhgDT6N6SBYTQSgIJeIOgDQr5oyB8ldx4CUNLIt5Gf
Jb1rCKA2hUAEClOp3TiKUEFvxs1eG+uOJzj+Nlm4RCwcCJflvHyQ+nikawwD
McpLpzLyk9GVJN4Sa5mclqRDAEIr8lVnCxoLJWZtgBFQTTL5uwVTsEJXxDDp
31SOMojpVIGce7PHdg8d/HHq7LHlaxcUF08JL5wSXDwtunhq6exR0ckDi3t3
zvy4bWLvjzMpx0UpxxZOH56+ekb4KE2dfl13+djSnYvD3fVCm84fDeEwQCBR
AgUJDKKolS7+xxO65KwzeDX3g1U7wVeLK6lPbZHy/ZvYhmWnXDBjC1urKfCK
oVx5EUywWZpRuv6U9JAjsbXdiIhX8DYXGQZhvVJ/+9KdqsJqtUxNzwJwuoAL
Tq54JvF22IDJ4QjJ5IGGAjHJ5DqlB0HQ+PuSTP6uwM6HKIVAnPLQqEpHuw1o
qlX89E3b4V28iyflaRcUaZeFN67OF+arKkrN+dnGG5cU549Lju0VH90jP39c
fy/NcStVc+uy7PGNlex76owbsgep0sZymUrqwGA0tnr5sIRljkTVknU0Dq8p
6H+1FoetqNzCsLewzTdLl9VvTvNb6DcyYjHkGYYTDGIMo6uo1q1a/mZMTk9s
g77g9NDMiX0ne9v6vC4vc/6Zb39N3ksSSbwGG0RXogFMtehvLVb0VusNah8E
Icz76DB5ksnfDYh4/QpKP9oYghLLy+7zZ4b/+K9Nx/ZKb1w0Xr8ku3Z5Nvup
mDcTkCzjPR2RezfU549LUw6tnD+mv3nJnvXAm5dhL8jU56fLM2/P3bo48OLp
skzoi4ax+EjBymsRnIogsRnj4VtweDx2/G6MqZ3f1Fdn5FG23LfNN03rxaBr
jC13ZSJar65Z/jYOOe0l2YyO+tLmEwdOT45OAxFGsAWlJwXQG/U8TSKJV7AR
kwfRFb6n8bmkr9ZgNYRQNDELMcnk7wTsZaD4iSqxJ89tBMBHx2w7tnf+6aO+
Ewc1Ny9bb1ySp16YLCpckUgiK3KspcFz7hT/xH7hyf1LZ48sXT4tvHFRcC+N
9+zRbPbDkYc3WjJuN8+PGYI+KCHbKB4kSaiAJF7ZjYRiyq10V+Lb2dC2DoC8
xjBatBbcxGBavHczfS2MWK3o3LCyiKHujVVo3t0NjUVxpUCXe7/keXaZRqmj
U8KIhEcpWRmUxNtgoxXPIKpcpJm8ZpXJ4+9PMvm7QFyRj26sQGkm+AJYV6/5
y286/vS3waOHVFfOGlLPSNIuzTc3ugSLyECv78Ed0a5t3Yd2808fWjh5cOjI
nsbDeyrOnax88qC9vnJ8alSiV7siIRhDWb1Wzo3l9EbiHWwS3PL1aoevcX2J
NWHzdbYaonlTg9gpw2bxla3nEVsawagWrBqeaK9txvk28FnDY638Oxdy5yeX
g/4w5+JzA2sSSbwVNvbJVYvelmLFcJOVZHIETYzgJZn8nQCPwRiB4KzkCHVi
KSYfsH3748BHn/dt3zF36Gfh8X1zKccmnuepqysNGY8Eh/b2fP9F5/G90tQU
0Z2rMxn3x1/kTbfWL/AmFBql1esJIjBC54hglGgONUygdFE5bQRGyxHG2JnA
Fky+hT45+9lXlxQxLvz+K4zV7GWVSLby9vFNbctvJ9ggfPwnk3CDMEWaW3Xl
eDuoRZbKzN60EzkGpQOBUDw+HyKSlRlJvD0SA4s4FyenfPLmIvlgndWkDjJx
8tgatk8y+RsjMVjLvVz9G0ZAGCVySKcw0L6hx0309Hp+3j/1h49bv/xyaN/O
2aM/8/b92Hfy0OC5U6PHDvTt2dF5cNf45ZP6zHuqmnLl+JBxReqxmYOhAIgi
8Zk7oyLL8BWEU4t6IP0CYacAa+MQ61f3VgnzVW/8tTKKv95z5jzVzWYEXDe8
LWxTMmfnIZwxsSOUS2VBfusoB3uhERCf6BQ9SCnLuPbSYw/hKDveEKuBr9/0
a5P4h0M8YEo3FqPn22AIUS66G/KW2wr16qVgNIJyDybzfmb1n6lNTjL5LwXn
vDJuLsaePY7zuERqSk0JBrCgG1SLwfYa7/ljoq8+bv9p2/DF46K0s5JjP49+
97emnV90Hdw5fObQTNrZpfQb1qZqq4jv8bihhOU65nohMdbPTCQrRvcb5VI9
1mAdZa4lmvVJIO/y6m/xvTgrv7ypxfNtNvTYiXWjaMKgg/1mB8UNjNyTFXNb
gKrcvtRDWR01o0AQYnaQHkmZaUGSyZN4a3CrSwQ96ab67IKIXuppzpdUP9JI
p8MRP87RAvNgoyTZoNTPJI+/ATA2QYISCafat7MBBM4rpHq7UVJmKIxbVcHx
NnVjnqr8vjkv1XJjr/h+ynJxpqGh1FOa5bidor512vzwoin9muLRtYWXuXqZ
yA+E2eQHnGtMnMTfH9wQEV9Npp8sqlcpIZmzZN2qf3CtyGayU2udXLciuqs1
xjVnTSKJXwvq5mMy0+hpOO2coBBqUnibC8SF14X8YVfQgyaZ/O2BczlvjOA7
F38maHaPUtWdKBZwAqIpXU3BUMGD1uaSuZku93BN9Ol549Oryvpi22h3dKAF
qMh15dzVP04TPXsw11qzIlsMBn0IEyjh5BSSeD8g4jNc1s3HaN0FiCTqiS5Z
9p2m8oLOaAhMSKHE6YxQlG32kkQSvxrMHJDuxM4t92AEhnkt4FSrteSOeKrL
5LICSSZ/e9ApEyjtiCcELTBaCY+AMBg1q/xDLbLChwNlTwf6m2dXloweK2iW
o3U5hidXpUXp+sYSV3mO9tFVflrK8JO7Y71tUrM+FAnCGIozIe4kk79fMB36
GNEzxieimJwco0GisXjq0dXa5tpRHMPZvHWWySFOmOF9730SHzQIzi3nEnGZ
gHnEi0lGQ2X3xcPNaqs+QL8hyeRvBbpxD4wzEx82WE6fdZScBGE2TXS4WVv0
cPrFozHegNKqc0NAlHTqwBA602vIvMq/nbKUfkV+9zzvwqGetJSuhgq+QeOi
emfGAJwqvMfjGYbv+0D/cUE/QUwWJcY5SDCBo6AXL3jQc+diVV/nPP1Ghslj
nPpoksmTeGsQXFpXXNGCZnLAj8snQyV3Bb11cqPaRyc5o0kmfxsQbDUfW9jC
MDkGEhE3alZGxttsVVmS6hyRaNwOhzD6olCRdRTGlCLjk7SJywcm758TPLk+
/zB17GUOX8J3YAijku3FcZLMMYbCk0z+/sAkA0CMyD/N1VS2DI4SLh388GLb
vUsNU6My+p3xhVea7Vnaf897n8SHjVUmJ7gEOWr1HwjgiulQ6b3FzkqxTu6m
O5skmfwtgXF9x2gyJyhJwKADXhpx1WYtVWSIBup1ekkoFk8UopdIYQBdmtI9
vdGTe3dyrMOmEEb4Yy4Jz+s2g1QYNhaJERFKbZDNGUz65O8NbAoSlRoUpdY+
cDZbBoUJFT9860Rn+pVeEc+Y+AE6IkZePTrRIHndkngbJFQlrGVyTDblz7ky
3lS8oJE7aApPMvlbggmQYoxMWdSPqIT23lphycPRptylpXG72xyFQTqDBUEQ
AIt6ca8BX5mPvHw6W5w+xBtWRvxUU+NoEI14MDjMlLZQfcPonJffTnk1iV8F
gk2CpwMsCYuYMIjP9bku7G5/eLZPNGlmxnM0jEX9kN8RsKjMSoHaaw4g0aTu
ShJvgXgu7SqTU4G7aBBb4QVyro61lPG1K85knPy3AM4kCaJRwmXA5gesTYWL
FU/GeyoEWoE76IJI541q6BjGHNqAVeV3agGrAprvczy60FPxdFYy64BCMZLA
I24Y8mM4SLBzc7YWM8nk7xnck0TEKwWoaw1jAQfYWWa4tGs48+z0bIfJqQqY
ls0rPK1oRDbfJ5jvWxANix0KLxxMMnkSb4FVJmejK3SZGwqFMYMwXHxnuukF
f2XJjsFMXScTS0dp2VUMS6pFrMcrxZurv2QecQKNxHxGbLrTWZ21XJ21ONKk
MMrdWJSqTEchLOKDPQZQJfAapF6PGfBaIfm8K/9+f+7Nsfp84VCzYqxDPtwk
Fk0YrapgxIdiUZSp0CKIWFxS5f0c+m+PTatH4wl8G5fyv7/95cqPCDoshvld
gEXjJ4fg7LTZ1J8nSu9Il/tdJoFbPauVT6iWhuRLwxLFjMIstoSMABpOlgYl
8RaI564QGFf0R6VTkHM9hyLSkMWve7YomrBCQabaDokXDDJz+6RXnoh4kQ/B
npl40TqVbohE8aANtkoj0rFAc4GsLkc422P2mRGc/B+EYggWCYAOY1Av9xlX
wn4HCEcxHCVCXmC8T/TsZn/awdbUPQ2pe6su/vzy2bWBjhLpQp9VwXMaJT6H
0e/3hIBIFIFRFMExFMdRglPHIlb37tfYaw6Yoy8CQzHWMHIHMBRB4wZDCBQl
/0NQBKP2DaOTJTmL17mutfip28DoMiqqFzL6iiGcENavO94NBoxVI8g9xxAU
gxG6QRJl5Gs4CoJhAImCcDgKBoCoj7Qo4EVcBkAt8vBHrX0N2nN7W2+dnBio
NbvUsN8Y8Rr9QUs4bAOirigSorr7vdKqKIkkfgWYGDgd3OPoCIMwvxEYLJM0
ZykF/d6oh6EmgKBKQTHuKUvqrqwBXbOHYqyUAUqsFptTGlbOFWi63tjwWNCa
KxD0GUwSd8QHYggOeKNOvSfkAQL+iMvlJQ3HMWZzDIGEI6HlWX3Xy6XCm2Np
++pPfFNydnvt2e+bTn3deOqr+ht7ugrv9fY0Ti7Nyyx6t8sc9NojITcU9WNw
GEOjGM2fGA2aRRlbBZFgazg24ZerH2Tomn0NUdtHABQMQ35XwOf0BzzBoDdM
vnBZ3U6ry+Pweuxei86mUehtBrvX4Qt4QiFvOBqCoDBMGhxBqC5vKGsEKz3O
WVz7Za2ICnlu0RgKx5BXDYohdM1k3GNfo6u1Wbl+4iVkZzaUX41Ta5EoaygE
RwPhkN0TNrtAZwD2hGFvOGRx2eQa7aLYodBaJSrNvFQ+JVHyVPpFxwrPpZwP
rsxDE53+C4eay/MWVTLfZjdOgopdEkn8amzA5KSjGLKCwy9ldRkSXoctaGdI
O0qwTVWSTL4BiNWM4ijXEZKkJnKija+II60vlvOvDhRe7xusXParAdiPogAa
8QI2jcOgMPvdIRhCUdKbRbE42RCsjCsOAnDIC7qMYa3QK5myLwyY+mulL5+M
3z/XeH5PyaHvHuz5/PLBb69cPph57diz6yfy7p17kXm1KvdOw4tHrS9z2hpK
OrvqBoc7pyb756f65mf6+fMjS8IpmWhaLp5VSufU0jmVmLcimpJLZpUrAr1a
ZFQs6sQ88k8ryzOyhZHFie6p8e6psc6Jgebh/qbhiZ7p6f65gYbhnoqBvoqh
gerhjuLurtK+/sqhvorBpoL2yozalxkV7cUtgzXdDQU1pY+LOkqaeys7O0qb
W4rqh2p7JlqGJ1tHptvHF/tnxeMC8ZhAMi5c4UkMQpVJpDFJNEa5yqhU2fWG
sC+ARkECQZmaKi7Pamtbc19uPM1YnS3RC9EQDofBqJd0lT0Bg9WjMQX1VsDk
jBjt5IuAzmKXkkQtUk7zdXMip1Qd0lqCGrNtWamZE2n5YqdCR5K5UaLUiZUW
ldlPutwOKBrAPDZguld992LNRK/c7wJjsVjC+LRerezvfsMm8V8MGzA56YQA
Tnj4pbzw+kxXudyqDieZ/BeA8R4hrhsCBkOEw4LMj/tf5mnzb0015c4J+rRW
qQ+0IRFHNOwMh12hoCsY9oVhkJa0jW+IExrktKvp8BdKOsA4GMJCXthlCRlU
TonAMDex0tc48/JZS/bNkoyrzx9ezEk7/vDigVvn9l4/vfvKsR8unPnp2pXD
9+6cfvLg/LOHF3Lunnl653TmnZQn985l3T+X/fhSXkZqQfrlfPKvt06mZ155
XppeX5vbUZ7ZWHi/ujSjtiyz5sXjl/n3SgoflZdmVpc+qanIrm8p6e6pGW4t
6Wop7Ogq7R2uGx9tmJhun1voFZA22TozVDvaV9U32T4qGOTxuibGW4eEQ3OC
wdnJtpHhht6p9hF+/wz5T34/b753eq57crp9dKptZKZzbKF3mtc5Ptk2NNTY
3VffNtLawx+dEU3Oy2ZFmuUVi8poWtHrpVq9RG+SW2xqh01tJ3/aSdM4bCq7
U+vyWfxB8qx6QgFXIOQJRYMARFJ0EAz7IkAAAPxAxB0KO4IRF/UzZPMHrbSZ
fAGjx6tzOFb0VonSIdeGjHbI7gXtXsDqBqyegN7qUupdaoPfaAMcXsQXgn0h
wOUPOjxhjw8MhEmL+IPhQDAaBhAQxaj1a8JhdrZV9eTcK5UvapjsFKYUF2Nj
TGu5PIkk3gobMDnplYNudKxq5dmlkfpcvlbsTjL5LwC2KsdHYJEgopL5+9tM
RU9UT29panOkoiFzyAAhXgx2IxFXJOINQ6EoCqOv6uCt9dhijD5tfIBIXNzD
sRgQAK06h1y4sjgl5I3MDncOd9Z1NJY3VBVWFmcXlWVXVOY01OS11OQ2V2aR
XnpV/p2ynFulubdL826XPb9fUfSwivyZc6sk80r+83sV9QWdXS+Hm1/01uV1
tJT0dlQOdNUOdNcN9jeNjXXOTPbO8YYWhZMS6bxSPCeTzMkUiys6qcG8YrHr
nG6jx2PyOvQum8ZuVprtOqvH7GQsYPf5LG67zmJS6i1qo5MkRqOdfINZadDL
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
CWXzhDM3vm3P+he7NzTt3zlxKHgq1LcnLFB/6sTk4wR3URWs1oHUfNfRQy3b
1mduWZm8a2uhouQ3Tg0kP7Tkv3AnP5h6flc3qJsgSk7q9jkgOjBkfo5PTqFQ
KJRfhhodJ9WbRMmRluutKLl1iil+ro/ckhzl23Eycu7EXmPg1nZ/75bIsJ5z
FybvPjTejhs7f7UnNKjEe23K1jUpu7YW7AusunJMn/bYVpUtFSZZshP7Rrun
BTdLWpFDHkEWk6lAVMkpFArlfYPVyfZ4qZIj2W0W2ounDvtlHgjsPH/Urpi/
V/uWNdVbN1UH+jftDm3eEVi2w7/A1yvNa82LLStf7Fifsds7//xhXdoTc02e
UJFlLs0Ymuw3iS6WTBgCnBpX4aiSUygUyvtnXsllstaprjSqBng402s/E54b
vrPh5MGZc8et/t5tq74pXPdDifeWmu3bajZvLvLyyvXzydiyOmHlVw83fJvo
tz79VFRj0kNDeaY199VgaUbP9JAJKD65KGCRkRG3RMnf3QuRQqFQKL+M10oO
PUquJQhCzDlAdY4hel9jkF9txO72qLAe/22Ngb7Nobt0YSEdgQENuwIrw3YV
Bvikeq995bchM8gr92hY9c2YlrjrTY9vlrXXjDstLJYAEnjIOcmACarkFAqF
8iHwKLmaSU4yAGU1nUWUsQglNDMqXL/Wtmnzi5U/xAfvqozc0xwZ1npgr+7g
vo694c1REXV79xTt3pkZsDVzl3f+Lq/cPb450WE512OK0hIaZkYdEkd6ISpK
Dli7utxJlZxCoVA+AFo90BIlh2RussyQNoicXFY5dfJsyQ7/xF3BGbt25Qb6
5wUHlYSFVIaFVESGlYUFZwf7pQf5ZO3amu+3PsN37bN9gcmPb1Z1txh4N8CA
ZKkjUQSsA0muJSueVMkpFArlfeEJjGv/aXqqKDmnKLnilis32FywrWvuVWrH
5WsFoaHxGzc8WLsmYfOmjG3bc/39s/x9Xwb6JAd5ZwduzvNe8cr7h7hTUVnl
uQOCW+1JTgrzAYYiFFyKYZK+IpAxnapyUyWnUCiUDwxenF0iSfyMcTwtrXBX
YNx3Xz/79ruiNVurNm7P9N6cEOiVvMenOGRLuc93SSFez17cr58etmuLplhy
aznkMuKRxCKJxxDIWmsumrxCoVAoHwvNS1d8aQAYh8OVkTZ8IKp18+b6Tb41
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
nrLVq16GhqS1NM+63ZL6Poh8czLiZRHItA8/5XfJvGcFAbKYYPx9o9fasm++
ylq1Ou/7lRl//VtC8I6Ce5e6SrON/V12gUFY87MAknkoCxhTJV8E8fjUou9f
YeTrWkaql/V+Va2WljXxA5jgScl+l7++oKqq/Rpv/x2HD/V7xu8+uih/glAG
CwYWGcQk55Y8h/Y05JnIkVSRdZeAhgxcQfHM5bPtgT65R6OKK4uGrXPMIg+G
pJt/6r2MQnk7yn4v8sg4zdeWzV07M7FtY/2Kr4t+WFGwck3+X/6S6LUq90ho
053zvUlP+ntazVYTL/HqGqkIMSciT2NyquQERH7p4NcZOUaid4v5G7L4Y5Pf
qXs/w2P/dSZpze3Vj744CrRIydEySr7cx1FdbrT4M7+x8do7f7u965CqCDZU
nHFZOcVkMWZkmZWhGwlOwJN1TsTyaGpKqiiwXTis9/7u1cnI1IL0RsP4jMAJ
kCSe0yg55fcLlPCcUagtn7l+tj3m0Fjwjt61P9Ss+K5405bq777LXv9NftDG
6kO7Gk7tq46/3dpYNjE3xSARK/IDORZKkqbkbw2Vf+pP9rFRtALI0q8zpJUW
LgoE/zhu/NsC2u+IOC/zt59rS8JE86uEmqDiZXx21buW1AX3Hxv0uMtL5Xp+
e3FUSvnmiJu92BQPG0kICggI5HLBkOJ6cICzM85pm33E7hxhmDHBPiiYeriZ
QdZuArZZcXqc727m8p67jviXen9z6WDQjeyXpaYJi7KPf8y9+s/8O6L8OqAk
9+jMD2+2R/hXXI+xH9s367NJt+qHSr+dbT4+NVtWlG37vjRwQ2mId97enam3
zpQ0V4zyTkACMhIPJFFTcq3S863rnh9/h1z+bfyiN/mL7ozUk/oFcV44tZ/f
8NwokXCr9KZPrmqXRwxf9+VbMPyWVbyfa8vr8M8FoR/fG6sRbRKqUGVZETsJ
qod54q4rJygIvU7dVu+L0cJqJibuMVadZM0JJxvQc5WI84IB1ZZsK/8jFTzK
TidAiZUktygxEtlgJcElchbBPcM5J1nbOOuY4FyTvFOxCYGdBrYx+0h7T1tJ
dWNWXWde70DJTF+RuavQ3FVuHWxmhrtcA122vg77QKvYXGQ+Ghzn/e2RY6H3
dTVjokBOQxYna73fvfqNp9VGtyz4SO/rVSh/YDg3LMkdPBhSsG11wZXjjhMH
rDt9ejesbfAPaA8IaAjZ3hzu0xru07DbqyxsW86R3Znp8TrjCEMeqbhfZFcj
FwvdV36+7n04foly/8Sb/IWf6A0fdeHqktvR2xbs0NsFfMHgO3xXCWDlxF+c
fyDEi2PvHnvrAz22KEKyzBf6M/+8ZI0WCMpZG8KCGoYBi1JYlI8qIs4hcQ7A
uxBrl1wWnrGLnAvwbqhcumy8fYaxT7oc407nhNM95XaSbYdjwskYGLfBbR1x
zvRax3Wzw63TQ82G/oaJ7uqRjooBHbHBlqKe+pzO+qzO1oK+jpIhXfGQcqmv
GBtuMM10uE091vGu4b4WXU9N11DDmKHdOqfnbIOicwowc5BzIIElabYij3kW
dtaN3ztTcHx3UvqTbtYpqREZ4QPt1Z/2J0P5A+C0SVlJvbu9s9f9PfdQ6Pih
8JmgHYNbt7TtDGgJ3dN0Yt/QhYOGs1ET0cE9R4JaI7cVXDhQVpwyYJ8RkeSp
hFPcBqrk8w94Q89+dPs70vJeP+fbHefFj1ycMaK4wapbu7g96+vxN288cCGi
vrT3H1afUpKRQPIzECdDhkwUgUS3PC0DiUmy5EaCAwgOiXdILjPrnGVdcwJj
kdxm0TnLz004jWM207h9dtIxMWAa1RsneucM/dapfstkn2V6yDY1aBnqMujq
BnS1/frGyf6WOX2DsSa/N+t5XV5SY0V2V0PxYH3xQGlmR0lKe2VyR3VSZ/mL
turkzpqUrtqU7oaMXl3+aHfxZEfxeHPBQF1Od212V1vpsGINeb112d2txYNd
VWPd1aM9dWNDLVNT+rmZXstE19yYzjSlN1tHGfe0xJlF1sa4bA6nxclYWd4m
ik4IGAy1hiuQBGfmVxYQ4xBKM/pO7smJDs2cHHFKovAxffKP+ZOh/AGwmtmU
xK6gTbnrviza49sbtXssJHB4x/auHf4NEXubrpycjj3H3D3FXNw3dzbCcDSw
41hQze0T9dVZ4zaDBEWysxEll35HSi7/BjF/Szx3uXvj+cgAMdX/fZ30h0VF
H6BmWMILt3vyPkgCCFZtUTKI1m9VNUnxWs28concSLQD3iYJdknZkByQs5IA
gmLMHMfMspxF5K1AM84iCTYo2qCy4TRy9mm3Y4ZVNhwznN3A2iYZ66TbZmAc
05zTyDOzosskWacE0xAz2W0faTdPdjsMevdUl3Os3TbZ5Zjpc8+NcLOjzLh+
rq/J0Fs/3Vs/06dc1hn0NVP6GkNP3UxP7UxH5WRdbm/Rq5aS5LaabL2yXZzU
WpbaUZXZW53dX57RU5LaVZ6ur8zqLU3rynrakP+ytSF/pKNspqVwsvCF7vnN
0qS7FXkJLZXpvbU5g2XKndO6arJ6anN6K9I7qzP1dTm9DfkDLcUjnZVTfXWz
/Y2m3sap7vpRfcP4WPfcRI9ltMs00mmcHrTOTjjMBpfdxLitvOCSRBfg7CJj
FZRLwCKkKrFyKjlf44OXHlixep7CY5lV/w1Ify1d3cy5fcVeKx401xrdLnFx
Ff/73at/tG+RczcIgUR+WeA9vhDlj8W8t4bw5LDjya32HWtyN31TFrxdF7l7
KHz32K6A/oCA+sio2osnR++ed9yJYS4ddJ7fZ710wHQ+auBsZPPtEy26Sqfb
CtXcOySJxKHRvMclQrfoqvqyy4Zm1XeE3yikW+pUympysMfBhKREiTTxEqBy
wk58Komsain+FWCxxGBR8SHdSGK1q0gxwHn+pNzOOaHohqxDcltFRtFJNxRc
kHcBwQ0EBgqMuqE+g+DGAoPJ83DKyyEtCKDc323jbHMui8mhmHXW6ZzliHga
GMuk0zzumBuxm4ZsRkVehmzWCRfRTxPrUO4wyTimONVYZds2wVjHXdYxt23U
bRt2W4fclgGnYoYO83iz0dRln+22jzYaB+sMw/UzY02zk62W/prJ/uqJoVpD
f9Vkb8XYUO30cL1puE4x42jD7HizeaxxbrBmurtsvLNkWF820Vtu6Ck1dBaO
t2QPtWQPtuUNdxSN95QZBqtme8qNrfmTNalDpc96CuI7alKHm3OmGrMnq5OH
atNG6jLGmnInG7JG8+Pbkm5VZz9qLUzoKkrsLn6mr0werE4drEobqEjpLXze
8eJmWdz53Je3yvOfthU+02XHNRY+15Wk6ItT9PkvO7ITW3MS25TtquzByqz+
hsKx/kbLhI4cL5TjQlvpUEfFaF+DYbzTYhxwGftdxhGXacptmnbNTNoVMxlc
ZiNjnePtFtFtV/7JIGOXGJvIOSTlXwQKMjER/4xcb2Xng5AsWJCSH02rF4s5
Iu3hWCi7sNbAHOOBDsvtmKpN397MSe2zzHHyL1qLfJ2io6X6oDdP0xbt4m8c
I5STA44FxhnnyPC0ec4uCLQiifLj1TI1XQ6T02nIiM35jlOhrav+lrF+Vf6O
gKqQiN6ICENkyHhEUENkSM6+fZWHD+uOHh46enDySNT4mWjDrQtzdy7PXDjR
m3h/aqKfBTzJCpBcEhQABJ7zU9XIChWUVFM2AAISlDhJYkQgKNuK+ENRAAsm
CVDxmpRTXdYiKq6UxEPlDkCRZQErJ/vEWHIpOZBghcCNIIsEm6QIoKHHbBl1
OgyMc5p1zXCuac42xJt7eGMXZ2hnJ9vYuR5y1dTFmro5e79k6ZVMXfxkKzNU
65hqc/ZXzekKZ7pLTVOtrvEm51iLa6KdMXSyU53MhI4Zb2PHWtnxNm6ygzf2
iOYBbkbvGm21DzbaxtudnRVTNdl9pckdpcm66sye5vzRptyRqpSe/PjmrId1
uU8aC562FCa0Fj9rr0jqVqw2o78+a7Aiubshe7gpZ6Qha6g2vb86tbfsZWfp
s46yZ51lz7pKEnQFcS35cc3FCbrq5L6mzNHip7qk62XPLhW8uFqceqsi50Ed
2b5SlHGnKv1O1YurRWm3K9LvVqbdLk+7U1HwuDEntlbZSLlVlnGvKvdRXcHj
luL4juL4zryHLa+uVry8XJZ8rTLjdl1ubEvRk47s2MbUO1UptyuyYmvz45vq
MwY6Cic7iqYas4aU7aJn7YqrnBPflBpbkxpbXZ7S3ZA70lI4oSud7q+19NXP
9jTM9DQaepqmGov7WsoGB1pNxgHWNMSZhti5cXbOwMxNuxUdNk7ajVMOq4lj
HUjiZMUgTyI5WFgaQn8/jufySTyeNWXsCVLhxQ9SziolDEQsQu0cCSPDsCPl
UX2I95UXDwuNU+afeNXXCUHIc4wAysGBk5FdxlaMuDdTKj0FYcqbUc4WRK2L
gPZlsJw8MsDnJE8+ulnZUNlrnXO8l6+G8lnjyfnS9lmSTgDU7p084BSPcTrx
Uo/P11n/+f/GrV6TvdG3wDe4NWjXUMjOwdDtNbt9kwODs4L2lIWENUeE90bs
6Q3b3XZ4f9e5U4PnTg0ciaxLitW3l82O6rhRHaOvM/S3Gif77OYJXjlndxql
6X52uM0x2Gof1jm76maq8/qUk+uqrN6W0vHG4pGStM7sZ40ZT+syntZnP2sq
Se2uyxttyB8vTtLnPG0teNlRldXfWmroq7cNNLp66x39jU7lsqV4prXUqK9R
TuqnGvP70h5WPLmS9eJ2YfqjityEuuJXLRWpHRWvOsufd5QlqpbQUfWyW7O6
lH5d3kR96nDJk86su43pt+qVy8w7jWk367PvNlc97yt+3Jkb154X31GY2K1Y
bnxH1qO2jIct2XHtylXFCy1L6s592ph6vzLlfoWykfmoNulO2Yubxcpl9pP6
klcdiuUnNGfG1WY8qlFuf36jKOV+ZU58Q97Tptz4xoLElryE5uR75coDC561
Fr/UFb1oL3jWkhlXl/2kIT+xRbml9FVH4fM25c6lSR3NBSPdlTPNBaOVaZ3l
qW3VWbr6vO76XL2yXZfTpSsfbi8bqsvR1+V21eXqanPaG/I7OyoGO6uGuqqH
1Vjx9HinWXF0J7ushh7bdK9ttH12vGPO0GM1Dthnh51zY+6ZAauhd3amf848
ZrdNudyzPG+WeIvEzAluE2czuKwGl23G7TAxrjmOtQqcTVJMcADRRc5oRAaI
HBB5wLOiYiKvHnwVNZTIpXL41gyoRsJvaGns/72p9/thoQIIKUqOlSMNMo46
0uOqd206/vR20vSEcZnHzh8niEPtSdrRgmlkbYKTsYu0KlqYAb04/Z0oOU/W
JMgDPV+JcRpmp5oidhbv8Y0vzmqlSk6RX/9cPMEL0tgQiaTXimi3TppyHuv3
eGX87V/u/+1vz/6+Imnt1kqfbTo/L53/pgq/jWnbtmVs8yvy21kXFNARHNDh
610V6Fu+L6zh+MH2IJ+cgwEFF6IqH55rT4sdjr/adPtU8e3TRbEXyuOuVMVd
rr53pvL2yYq7p6vunam5cCD3yK6Xx0KSrxwujD1Xd/1YUczeZ0d23z8QeOtg
0J3jYY9unspMjm3Ifdb14m7t7Zjse+dyn9+uzn+hr82drM83NBZMt5XNtZSY
SlIGKzKGGwqH2ypGm0sHSzPa8l7VFyY3lmW01ebrW8tHOmsmWkv7m4v0LUX6
tpLe9tK+jvKBnpqxoWbDeLtprH12oGG6q2K0o3y4t368r36yp2aiq3JcXz0x
1GhSLrtqJvQNU33N04rpGwxtVaMt5UNtlSNddVMDLaaBtune5vGuhuHuxpGB
9snelnF902hPy+igbnJMb5rqt0wP2qYHrYYBs2JDnVMDuonhrumxHtOIfmai
b9YwaJkaMA93Gka6lKtzUwPKVctkv3msx6hcNQxajSN205jdOGqbHrKYRu1W
5UTDxNumWfOkc27KbplR3FqndcZpnrQrlw4z6zAz1mmXsm0xOixGu9XkcJjd
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
zFw/l/PJf+1rreoP+4VNFuNsKdfpfrKMZywxx7qKF0f9N05XHf8sJ/dynXc6
iBGxY3zn4bQUIMvANk7zTT8GsI4BgISEUk0k3a0rJ4+1vPdu7qnkrq720PRo
pL1m+HZKYfOjlqX5RVmWWQs6JgThWFgeC3fjDa7kjjQTOwPe1/bs9KHULz/8
pr91SggrtpJzHWbG85uVnD+lS9gzEynP7kj6a9aNUxXPe5bYjL/Yy5yyzNgv
TOSl7y2AkgNAAkKZaxYhHrdSUT770Qflb/8m5+tDHbk3hqruDfQ3DK+7181o
3DqjY/XkcX6a28ucMSU3DCmiVJe2HNt16dLX+cuTfl3BvFKc1afwfLhOWVhO
uZkvsSL5gFtoKRk+ty//5pmHfc0TQkg2rDKVzdX1G59AIlXYvxxQcgBIQMxT
VTLFXNPIxISQkjLyq3/M+7df39+3o7rs9tOwO8rmljmvc5pk4v0k36LkfCtd
897c9PITe6/VFPYIAZVwIeeWxKr54PXzjpKzgSI4GpCePp5NS6q8dri0p3Ys
5I0arJolgo2I0/RK4vsz+PsBJQeAxMIpvhNYER3G615S9VD46H963n6r9ON3
iu+m9ahh5iMSCzetXkemdvYDW8Hp696PF7F7Mw1bySk2BjpGL5/KOZd0c+rp
KtIwLy0nyNB1KuvUDNA1YpljsXAbC1FhqGcq51Lt8R13WgpHgm6Bz+GUsOFD
NOQ0vdrXtNe9rz8/oOQAkFg4ldZmwKnoAloa0yvyotkpkbP7nx/8pPLKsZq5
wbAqIye1YuXFMU9HWL0wEiEaIZaHa3yd8vwKxbtviYEE4+HdJyf2p6ZdyA94
RVOVMVvmJYqBZTaEU1co0im3M+Qrn6PDc5mpxV/tvHApOT/gMp83WMROzOhd
xCyAx29SLgUAgETH6n5kw4UpXpmO1uXPXz8+2PkgPNYeKcroOrwjO/mLor7W
2ShLEceW9QifR6wYhmgG84SoTAHjT8ktKzCDqkQ1Iov05vlHx/ak3s+vZHLN
d5wrOZvEKRhUZt34PMjGNOyT87Krjx9Ju3rpTm/PkKpoxqb1zfjbTQAAtju2
IwnSl6aXH1cNlmf3NBRPrC+qUghPDLqyL9V88s6FUwdu1pS2zo0vSRHFrrcm
zpBPohOMuJLHYZ6BsLJAoutRMtMXvnKi5NLJvPbH/dZzLIdCzQsSVfhDY/Ur
BtKI3yVUFbUdO3Tt8sW87s7hcCTKejkNSDYAABC/mMJkyrBvNVBVXFeSW9Pd
/Ny9GMC6amqbGBGHe+ZvnKs6vistJSmzNKd6uHsysBrGMuHTP7nLlEqJhk0t
j0sl5+WFGEt+1FE1m3aqrOROw9Lcqv2MlVfityTY4DZayAiuSt3VUylJuSmn
bzfWdwcDUfuNNsl43O0lAADbHoqJJEhPu4ezUvOqHzT5vZY/OUubmEqtymhp
Klh1ty3tZF766fyyW3XdtYMr497IqqD6NT2AdD/SRcSUPB7X/pjsYo0EXHJF
Tu/ty9XdzSOKqLFn+HonTy1RJuS84FwKac/blzKTqy8cLWiq6fN6AtZ7GFYX
56YycgAAgLhCU9TVheVHZTX1j1rmZ5e5cBFelCjwTDhTaNmnT/e62h4MlGXV
Zp8vKL9ZPVA/vDTo9k8FQ/NhOahgHcdn6sHceCWC5kcCuVca72c2jj+bt5co
uZJTnWAZYYk5PRKdLI55S260Hv4ws/ru4Lo7arXv89wTcaZCwSInAADxSNDl
HWnrGewaWPes265QTve6HbYamCKqh1HYJS4MubuqBwrTy+5dL36Q86jLDFwn
11VRozhOk8hEp8FVua9p8eqJkvs366dHF51VWwZSkOSXwq4wiRL3+FpV7uNL
h/IyTlYujARUkRuPE2p5qmwouQFKDgBA3DHe2d9f1+Jze3VN36jCNpyKQ2uS
BiHsD5UqUS3gDk0NzQ52DPU9fjrePymsi2wcXrwuB5qXo3WX0FAycvFoYdOD
vjWX3zY75LtnbrkuIsWvhheEmryWrDMFRRm1k09dckRnqXO6YY21MUgEYnIA
AOKP7sr68bZeTVZ4DgHxaUHc0M8efBNbGiR2HR6mqqRFAlG/NxBaD2MFbw7I
403Jzc13LwYKMx5fSrr/rH1GjsjWzFW+ysnWaJFCwm6pq3I482RhQVrlWO+M
LmMnH873ljkcahvWWKDkAADEH321Lb4ZFzPFYpGqSo0ooWFCJR6LxpxeebKF
PciLUanjUhKfSk4wnR1bTf2m4lpy+cywG2u85oZi8/LDhk0jHPAKvc3jaScK
bn1b2t88qkQsd3FLzC1LlpiSE1ByAADik6XJGTbEzZ4vrVPDDEkFTGXexhjT
rdiS33fY/cWbejuwjVQjeLBlOXlnafaFxoWJFV5daUo4JbxqMhpUelrGT+zJ
OPLZldaHAyGvwNdBFYOqTqUKF3NrBBwoOAAA8Yosy5tV2VkQfANUiyVDgm65
sWDywPslj/JH1t0B1gCEMZvqoxpIpM97FzLOl+768GxtcfeaK8hmTGON6hHW
wU/w1huNN+ADAQDgjYXEaUT902HXo5WZUEl6/57/LmirnA/7BGYyYCq5xpr4
F8e9D/Jbrp66W3izdnXJr6t8ZAZGBlIMrFMSvykjAACAbQOT34UxX8HV7sMf
lI20+6UIz3WbsbZoiGu4rfp5QUZ9ZWHr4vQq1vEWFwK+vAtKDgAAEA/MjngL
r3af/aJ+cUTRJDbySBNRcFEe71gru9VdW9S/OOFlr6N8fAZ2BkzDHE4AAIA4
gRozI6ulmT03T3euTqu6gnVVW3dFnzYvld7sKcvue97r1iVrRRcRVSWSRmVs
twFBGA4AABAf6BoWI2qU+QnYJeLY1GwZmd8Uo6qmIidxEpuvDBoOAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvCr+D3zmXfA=
     "], {{0, 385}, {494, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{260., Automatic},
   ImageSizeRaw->{494, 385},
   PlotRange->{{0, 494}, {0, 385}}]], "Input"],
 "\n\t\t\n\t(ii) Shoulder Singularity:\n\t\n\t\tThis occurs when ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     SubscriptBox["\[Theta]", "2"], "]"}], " ", 
    SubscriptBox["a", "2"]}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "+", 
      SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
    SubscriptBox["a", "3"]}], "-", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "+", 
      SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
    SubscriptBox["d", "4"]}]}]],
  CellChangeTimes->{3.812893695066353*^9}],
 " = 0 , i.e, the projection on the XY plane \[OpenCurlyQuote]r\
\[CloseCurlyQuote] goes to zero. There is a of degree of freedom here in the \
position space as a change in the value of \[Theta]1 \t\tleads to no change \
in the position of the end-effector. \n\t\t\n\t\t",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvQWYVVeaLtwzd+Y+93lm5p++t3tu35mWJNNJd0cIUULHBZIACQRCggX3
4A6BYMHdoQjuTkHhDkVhZVBCubse27Z0/2utfbTqVHFIimDrfd6QqqP77Drr
3d/3rU+e6jWsXb9//NWvfjXqf7F/2vUc98HIkT0nfPlr9stXQ0cN7D+0b58W
Q0f37d93ZNNe/4PdGPsPv/rVQPYf/9l8LEFME5kmFiTUJMSkRNzqT+p+IA0g
pvwZ4j72LBra+9E6SDwvFuLr3O173en9/d+WWiCEYkIRxTopza7YuW7PgmmL
J4+a1v+bb8O3R5QXVCANA5XdbTKK51Pq/hh+J44GnsYA0lonOgRSWt9nCPp5
fsKfg7rvpR56H2yoxsUT51fNXzF74sy1C1dHn78OqkBOYsmmFXt7fj3og9db
ME4dNzvm6k2K+aEixM6j9VHZeSLYRIxEfIXMAOJQP1e9rOv03O058L/b9yV1
fwSLfKGwt4MwtFP9yCFAOtwrwH2aAk8lEVrB/+jYhIyI/2CpR0Mu94bEXUpH
jU/hERBKoQk1VJxTnJWcnRx3+9ql62X55VCDbGlYq8OjEPx7RdzSQX3vR/xO
7l0s+TqE5R5JR5CLRY0Xcy9LaMDkuOQZE6b37tCzb6fe33YbOHbA5FF9J/fp
MKTnV/0mDJnIeOlEpL3CjgB02e0QAkKJ9zQg09JaSjxKe3fSEeQDBBy6pXN1
PjaEU0T9V4Hnj2v9n3ikT6if+OaLWx9PkADd95zOGtLBVgSFjFwxKADEYDSw
YRCA2FX5Z0iH/x+6vvUbqk1T89XvVjpqvw3GyNBUihEGAOqGoWouhwtDwkiw
+2JqWWrsq4/E9Yh4PpT7/eq0Ou5IGox3K0EhnyL/xUJr/kYt+WNSiom90n78
wLFNKzasXbRm/pR5w3uNnzT0h0XTlu7esCs26jpjVUkp0hWg2Vz2Mox1S2GF
tNa4TlGPWWZ9AUM8Ov+jIl4St24H++Q/4XQFkQ4iLp1AEFoXzbs41Y8cakiH
73rp+6pTvoAIwBRw3aCGjjVGDTHqgMCffPKo+yIaknT8FPX4SdJR420QAi5n
FcGGyYwP70niZipCCIuzR5F7UXDpEOrhO3k/Tzp+Hu/2FAVZLKbf8sTUuraI
T5SbkpN49VbMhRvH9x6bM2Hh2vnrTu47kZWYZgKDE+sY2HSlVHWVUKoJ95YE
kw7rMOndS0eAaFjEHt0O/WPepXSwMwCYxyYIxK+PtXSwPyIUqwLWJx3ELR0m
gJQZGzoj0w0d3wfpuAsZaQjpwBiqqs0jHZBS5rojdgBMN5hyEKEbIUnHL6wb
DS8dyGN48H+Ks4sybqYlRyddPhG5fvGWfRv2XzkZWZCebUKdEysEVAOtVFdL
CVE80kHqlg7rthCPLoh0kF9OOnRBKR1sMRCVIINSRuT9g1oXCd+aZbY5N9KI
iHJYvh4yIeBGCHSHSEP+0v7MrzwAgF3vQ/psDSEd4iutmSY/Q4QaEGmq5mCm
CPPfMWUiQrDbha9DOsyA6MFdH/a9lI6af7Vai8XywgIDm+LDccWkFIovjUKJ
g6BqHbtUClSTuDhhuQmLTVJKaSVAlZjqwtTHuJZ96zlM/la1DwQHp3+s0k3k
YRDp+GlnrObZoEIA2QdRBMUnYp4YuofSUd8lssYxu3/m1zTC/zD8NCNs8Ci/
cOK8lq915usNxdOg7+P+SrCPjanlFjKrgWhMPkxGCtx/WgKovVRJicuIi7x1
9cyNUwfOptxIVyoVprVYI7oNMGKA2anTCbQDxWAH/EuJ708PffzUNwyIwlEi
Yhz1LLtH6irkWTW1Ppzvy2StZ+/mnLW4vZYskxhEfVekes5SkNN2D/TyZ56M
gCVGuXRgQzca7A1C/G7TwPPv+5V9OyHGBkYGQroBFEIs66iGdNB6dSNQOthn
JMQAkP1rSQffdcTUYBdwHfOLqkXDrC6x3bqecGh3xKr5YZOGTx3Vb9zg7sN7
tus7Zej0ozuPF2UUswsIUjAjUJnHAlUIXdjQ+IXpUVoxEhIhgV1IQrWBQ0AN
6RAJAiTAYa+p2H7un1j3BGPCfWmIoAGBypSkxq6Tx4wKVTesY/BKh1c92C1M
OqATVhVVMSbHJh/YfnDWpNmDeg4d0G3w4J7Dh/YaOaTHyAGdB3/2dpuRPUcf
3X3cVmIzxfXEUKDiMlTmPzALFRvosd2jknhcYS0rhnv34oinxRCvgJj+1gP0
EPk0hABmdCBmegjXArn3wP31wG39BZWOmgeABfyOh9Na6Ox2l82VfTv7fMQ5
xnlT5nX/qnvbT78c2HPw2uUbLhy/HHc5IeFays3LyYO6Dv+yWYfJw6ZFnohS
bSojcEFDg8xuAYTYmY6QBtNeCYmHAmw1QQi9i+tevH7g76Yvk85fN7y36Kar
zFFVWOEqs5sGDogoBcTqaW2hCPb2PIdH1wzrWUCHmqKzf61fqyvt546fXzht
/rhBYxgH9fx2/LDxG1ZvSopJMRTA/CQrFAaq4a2o2+MHff/Vp50nDPn+2tlo
xuoym8kjX0QzACD4F4t1SEg8JqhTOmCd0uFk0lFQ4fSXDvLTpQMESAcQ0gG8
0nH22Nn5U+aOGTiKcVCPgeOHj98UtiUlPg1qyH1IwIQ2lHQ1dcLgye0/6TRu
0MSrZ24w+ksHJHVsiklISNw9LFeFmTQiDQABAFwuV0F+fmL0zfgrMTcuXY86
c/nC8QuM546eP3vk3NmIc2cOnz0dfubQjkP7t+wL337w9KETybGJrkqHiXxu
Dt9+sX6tZ7X6xUQIIpj7PnzvEDO/gnlDbKkjUlVedf70xSVzl3w3bNyc72cx
bl6ziSlJSmJqdbmNsMfw1B5KNBO7SFWhbVvY7v6dB3Vp3W3u5AWMCdFJhgoQ
RC6nYoVQJCQeK7AFrut6gzsslh/EXpkpBvuZiUZ1dXVeXt7ZM2fmTZs5dczE
8UPGDO8zdOA3AxgHdBk4uNuQkX1Gjxs44bvBE0f0GTmkx5B+nft2btNx2tjJ
N85fcVU5fNIBeFZ4fRZHzb1YsRHOvQ93MBbqsLy4/MKpi/NnLpgxafqGlT+e
O3aGMSslU7WrTDQMDUC+w0OZdPBkKIObQ+m3MpfPXvV1y86t3m/NuHPDnpK8
UiZKmqJRqRwSjx+YaLAF3oA7LBaYIjHR8L4y042SkpLU1NT9+/b179qzc5v2
7T5p3eq9Fh83bc7Y4u2WX33Soc/X/Uf1HTtx6ORhvUZ8+82gts3b/fG3f3ir
8d83rVhfmFXg24hhuoF4RVGdO9o1tn0xT97gm7DINBRDdagl+SXnT5yf/8M8
5p7s377XVlrpq0DCFOrIXu1SnQaG7uQfZGDLc4m5HD9pxLQ3XniTcfLoqTFR
sQQQd7xXioeExM+Ad7+mdnYH+1XTtIK8fHtxma2wvDynOD8lNyM+QzAzL6mw
MttulGPkxMVppZlxOSf3nh7YdeDU0VPiImN0u+YLevB8MURQzew7v3cKNDkg
FYkh3HLISEiLvnj9yJ6IqWOnTBkzeef6Hak3U5ACrJoeaoh0Eoh9skNMXQUl
hZWYPQCZtjLn8YNnu7brwTig27cHtx9UqxSeyK5iKy1XQuLxgbXYG/bViLtF
gdttYeaH9RbcFDEMw+5ALg2pACrAcBqcDgM4IHZhKvKyrp29Hr7t8OaVW2d8
N/PckbMVxRVA0Q2XigzASBFP1aeU1JlKV1s6mOsBcElO8dqlYd8NnzD621FD
eg8+tONgbmqO7tSoL5DCX5VgggA7ZkhERTkRdohweUyo4vSkzOXz1jD26tR3
xoQZ8VfiRKSXhhKylZCQqAc1arWstAqfBcJWJzCIYfBiMquiiF2xNUJ0ytYg
0nBOSn7Y4nWTRk6dM3n+3i37C7OKgAoIxEw0CIKMvHJCNJcJRTp4aRakQAGF
2YU/Lg0b2L1/h8+/Zrqxc8OOvLQ8w26wNyWIHRFgZKKBEWa6YWh6XGxcZkZW
UUFRRVkl0BHUMTNdkE4rimw3LsUzfjdiUr8u/TauWG/qhKuHX83LL5soLiHx
2IAiYuhEB/xiLaQDKhip3CMALnDtXOz3Y6b36Nh34qipF09dVqpVYl3TPTlg
VLSYCVU6IM/N0JxaYkwi0412n7Zt3ezzMYNGJ0cnQRWaOo9gMLlQXQoj+wEy
e0M3NFULP3AwKjIq4WZiZnq24tQ1F8SQQI04yrWSnErGBT8s6tS60w/jp5nM
WwEmJVRKh4TEvQQzO/hlnhrMGiB8D5QtSSEdhgsU55Yc23dq2oRZQ/uNnD11
/rWL0arD41D8VOkggNgr7FfOX+nTpVeXtp2+addl2vipWUmZSENcOiCXDk1R
Gb0mh9Ph3L512+mTZ65fvZGSnKq5gK4ipmBMOpyVRkWhjTFsyY+9O/aePGpS
ZV4ZUiDvxSelQ0Li3oHneOhMPUxMsYFVu8bIfoAqSU/KXblwbb9ug5YvWL17
6/5TR8+V5JdhhD2tj3yZ5zRISYv/WwTEOnTFSI5PXjR7UZtP20wdNyVs8erj
B48xSbE2TXidLGH+Ewd3WCBi5kduds7okaOWLl62bcv2c2cuICC0CjN/igAF
W9sxCTEJC35Y8G2PAWGLVpVnFSMdSumQkLiH4NJhIN6tjhFZVgezKzJTc9av
3tqtQ+8R346JPHulKLe0oqQKsvVIeGEvgghjzBO5CIIY8KfVCpP6vUWAdAAN
piamLV+4YmCvgfu27b0ReSM9KZ29o+7QmWQxTcCEkWBrV4hQXVVvJyR0aP/V
6OEjZv8wc++u3e5ukuyRzLsx3Fn0qlOLiYr+cWnY3Mkzrpy+aKusltIhIXFP
wZap5lJ1RSeIWHZEbmbezs17Rg0e17/H4MN7j5UWliMDY0/KBHMimHQQa1dF
9Isg7na6dcBPOnjprQ4rSisjz0VuWrsp/vrNotziqtIqgqiz0omYdhHT05qX
Cwh7EyZruZmZfbp3HzN8xIzJU3dv38GbuwBsRWcxc7M0yMh+dVQ5kuMSj+07
dOXMxeqKSikdEhL3FsQ0FB1qQHNpuZn5jNs37ho/fOLIgWPWLltXll8BVUgM
5kUQbCVaGGydBu2HcWf10DUDGBABVF1RnXzrdmlhmbPapbl0pj2aU8MQE+pL
GMFYFNViYquonD9jxsKZs5cvWBhx4CBzj7h0QK5YBFNDh4zM+mG/GqpekleY
m5qhOl1SOiQk7iHYJR5wm59pQnZqzta1OxiH9B42rM+IjSs3p95MQxrCKkZO
CJ0QuABQDMKTOf1K9T09ikLpWwcBYhaLsFaopuq6ajAxYaaIr8KF+sr9vZ3I
dEU7dShi39Ztuzdtjjxzlrs0RNTCIOLNOWeyw8whApFIXkGUyDCphMS9BKXI
hahBKwsrT+4/NaTnMMaR/Ubv33ywqsDGVQUGb+LhjmoCTxtAQs2aahK8CSaE
0DAMz8/IMNgNyHMs3FvxVu7yJxOe34V0kJ18+9KJkycOHIy9HGUCaM1gYZpj
GMD7yhqfLOAQKR2BW7NSOiQkGhxMOpxMOgiTjhP7Tg7uMZSRSceBLeG2InuA
btQtHRQ2mHSgGtLBpYRJB8xJvh158hSXjqgrftIBAqVDdUrpkJD4ZcB8BJ05
DzTpetLKOav6dRzAuHTGithLcYYdMGsE2gyjUtUrFLXcaS+priwoL8srKcsr
ZVLjKHMyGnbIU09xPdIRsHKten8i6uIRIgBiCPkgAOtxyAyQDu6V6BApWlV+
4bWz508eCI9jVocOTAOZIulUVTVvfizzhYChE4IwMqxmv1I6JCTuFSi3HNQy
9eCm8P4dB3T4tDPjxiVbbkbezEnKTo1NSYy8ee14ZGTEuQvhp0/siTi8df/B
rXuP7Dp08ej5hGuJjKWZ5UY14IkZIbQ1dvcM4eOGkIhVENHQmCDRYsOSDoOa
OiKM2GruoQHs0qDDFXMx8sS+A7GXLlNVMw1ueCButBiWdIgqHf7yEOoI6VI6
JCTuLSi/zBekFCz7YVnLt1o2e70Z47SR035csHb17JULJs1dNHnejDFTpo6Y
OHn4hElDx34/bPz0sZMX/TB/W9iWcxHnGDNuZjhLXXy0RZ3S4XNboJhSxpa5
SBSF2C8bxJIO5gnpmLp0zIjEEFViIKoDAlBc1NWTBw/FRF6GThdlPo5nKJ83
U5XXxhHELBHeMJ/+nDBpnSkqEhISPhAzOy1j09p13Tp2frVRY8bXXnzpzdea
fPj2uy2bfdyxXfs502esW7Vm+8bNZ44eT01Iqiwu1exO4FItIlWUzjVgdx2/
VWvlojMZUF1KUkLi1agrt+JvVpRVuJuP1sNQ3ymo0GG/Hov3ciiOhMRDDWIa
qp5xO/X4oQgmIIy7tmw7tHf/qSPHLp05d/NGTHZqekFWTklegb28Ulc0BBDh
TQU9xCLQ0VBF7oEKgJmRIqRDU9TU2ykxN6KTE5OrK20NJB1+pyAEk0lCQsIH
tugh4hlZLqW8qDg/K5uxpLCoqqzCXmVTHE6gGaIvB883Ny2tYH4GEvni98Ku
ryEdIumdSYeh6dmZWczwyMrIdDlcFNMGlY6GfC0JiccClPJ2PSJYiZlE6AYj
rfuazhuCAchIEb4nK6wO6QC6kZ+bl5aSmpeTp7o095hJudwlJO4TeOqlbogy
FEIgZOqBLSUR7bmI+MGPBAP+GC4dv4jVQZigeaSjML8gIy29IK9AU3QpHRIS
9xdMOlRVrd2AHSHEbnc6nbquW9siVioXu5E3bG/orst+BxREOkxeBAcryyuK
C4sqyysRwH7zX6R0SEjcHyBeClKz24YoO+NBSuwtkXVXyfpand6TxVrDPxLH
wX/ARHG67NU2xaXc2eSQ0iEhcY8hohfITewmr1gVk2WJp4EPCdYEzP8B90g6
LBWz/uVp55oOAbyzbvyco5EqJCERAtjK4CWnyE1LOhAl2F20amU5uJvr1Nq2
tOSlQfcv61YDasVe7rgt617vP3XxS+mQkAgNxK+mLSgRz8509z2vg9YEp4ZA
KLIQqnT81MQMKR0SEiGgDk8k1DUqps4yJ6eBJl2G9pZ3KR0yy0tCouFRh3QE
CW7UKx0NtOcipUNC4iHBz3cOrP2XX+5oiOjjIQSAD6UFiNGXX0pMxLssE9Nd
SGsIT8s398H61bNrJKtrJSR+In6+dDTkqgvt/bDVgp2YhmaUFJUyZmVk52Tn
VVVUs7sQIEQ0bMcYeqVDDL6DAOiMCAH2syjM9894u+cfTkJC4l4hNKvDXYJH
TIfNcSs+gXH71p1r16w/GnGiqKAUQYwRsvTBY2BgywJxuRyMmqZACLxGiL81
Ir0bCYmHEiEbOlwYEFFdKrM3GOfMmv9J85YfN2uxZNHyqgo792IgVxDRPYz3
JcN+0RjrltrqIaVDQuJhRcjSAXRmRCAMsaEbjDE34mZMn93ik8+af/TpuDHf
RV66kp9XVF5WJVJPqKpqTqdLUTQo+hkSUqN5aW3pwLJfh4TEw4QQYx2I8KEt
wmexbnHYnfGxt5jP0rVLjw/eazag/5CJ301btHD5hfNRDrtqiN7pug40lZPH
UYUeUN5cjHrDHXU0/JHSISHxwCME3aBWrKNWyw5mhyTcTJ44YfLLjV975eWm
bzR594s2HVauWFdSXM20whIcxWUwQt5WWbybWzq8myxSOiQkHk6EGCa12poG
3g4BSk/NXLp4RasWrd9s+n6T199t2aLd9Gnz4mJvV5TbDA1AgC2rg0uHNVqu
PukgUjokJB4a/ISNYf/YKcTVlY6zpy906tDr5cZvv/TiW6++/G7vnkN3bAtP
vZ3nckKCTas+BxhY15CV+ual30HIMKmExB3w8xarj7/w0RiaoSk6MAIKaZkU
YIiddmfizcwrkYkH950dPXL6px+3/6R5u2869588ac7mjXsYoyJjS4qq+AaL
J3E2UDrMQPWQ0iEhEQQPnXTwVqU8sQtYeaQiyQtYjY65dIg6PUOlqpOWlzhv
XL21YtnmLh0HvPLSe3/9yytN3/iIcdiQ8YfDT5UUV1JvcwEipUNC4u7wAOkG
eymRvuVZzNhH7mkQQZ7epTqdCOomhRgbuu5iRBiIXkQmApQg5rmYELJ/qWEY
uTnFmzbu/Kp919//v6f/+R/+N+MLf3mzX/cxuzYfLciq1OyQiMR1ihFBKiWa
GKOLxVwX2pBDIiQkJO4ZRI9U4Jlxy37QGZl3QrFhIqYImHcm0g3dacfQRU0X
MZ3QdAgq2IRcAMTgST6Tlk+6xjrSENULCnO2bdnWqV23p37XmPHJ3zR5/r+a
f918+M7Vp29FppfllzmqqhRbBVKLCSwzqYOP0eV1fZzS6JCQeBhA/XZFoRgj
afAfKLX2S4FiVOSXOyucfD6LCTFVdWJjNKiLmRiY+S1CcriGcEsFYzEBm5o4
Lzt//46jk0bOZ+zedswnTXp/+HL3r5oP6ddx9Mblm47tjYi5FEUNm0mdpskM
Dx5BxYCTNtSIGQkJiXuIAOmgbulAAdKRF1Q6nJDqdUmHKaTj4M5j349awNij
3VguHS91a//R4L4dRm5YtvHonsPRFy8L6XC5pQNL6ZCQeLhA/fqTAe6/sNVL
TN0BlUq9IL3k4rErRVmVhgIpJcyB0bEiqEJi8Fl0QngQQZAycTEQYf4Oj124
HK7s1LwbF24yRuy4Gjb36Lh+K1q/079ds97LZq3ZvyX8ytkrJjRMqkPDhYBO
EDE0xMhzzyQkJB5wuKOu1v8woZBgKGZTmsVZlZk3C88dvj59zJILR2/mpVcq
dogQewQSdfaAyQjv34Ex1A2INEg1RFVMVNOyW4gIf/DYiamUmllxrl2rL3/9
8fAeX4zasmr/uYgrCddTuFwRbKguaGiEvY6BGImMlEpIPPgI2LahYqQDJoiv
+oRrmecPx4bN3/1p028mDlm2fe2Z65fS83MrqqocjKpq8GkyTDoQUO12BBVq
aoxCLAwe7rSkA3DqVUZOQsWBDVHDu89aOXPXzciMkkxbdZHCH8BeALqr9Rt6
+0hCQuKeITCfQgycc0tH9IXkIzsjF0zZ0OiPzX7zT41ffqZ1p7ajpk9es2P7
ccb4uDS7TXGvdf5cYHp1g0dZsVs6DM7E6+kbl+79fuj8WeOW3zh721Guurd0
sNfmwZ44LZTqISHxEEAsfCtdXEgHn2fJ0zmwmRKXc+XUrZ1rj3T5bNiHr3Zp
8nzb55/++G9Pf/DqK58wdus6ZPnS9VcuxVaXOQnvw8EcDUAJ9KVnYFN36kWZ
xYz7thwYNXDs8L4jj+8/ZStxYIO/Pvd8dCgSOTCAqqY7AFYYecBVQkLiAQf1
zXcRxfCIMPuB8kSNwozStNjsyydi18zfcXjn2bVL9g8bOPuTj7q+9OJHjE1e
/6TlJ52+7Tt+2fwNh3edTk/KKS+qtle6vOaDrdQZfyVp14Z9jDMnzhoxYOiS
2XMLMzOxoYuyFszUBhtASAezdABAGiY65lFWucUiIfHAg/piDJRvsUJKRYYY
JhX5lfkpRUnX0k4diNLtRlZyxc5Np4cMnPbh+18xNn7xg7898/fXGzf/6vO+
k0csvHgiJjO5qCS3yp1ZZpiF6WVHd5/9YfwcxpH9R44fNnL35g3QVUWJLh7B
7A1IobBweFEuJiKtjMrKWQmJhwI1pMNk0mGwpU0QLC+oyE8tvB2dfuHodcMO
CjNtJw5fmzMzrE+vMYwtW3Rp8uonrzX+uMX7nQd3n7Rj/ZFzx27ERKXYy1Si
UuwysxKK96w/On7IFMbRA8fMnjL9ZMRBqFYT5LLewqSA8r0a75A5LGweRKV0
SEg8+LCKWD3iIRJBdUpVTbWXFRUXZufnpuVk3MoEDiT8GAoBdTgI46mT10YM
nf5qo0/+77++8ORv32jyXNv3Xu3S/ctJh7bFKsXAkW+eO5A8ccjyz97rwvj9
iB+uXbxKiUGJU3UWY+QQMVWDUqSrOm/oATETDgMgRrk5KyHx4IMGzKPEgGg6
ciKiEqJDwCtkDdXQ7TozEDSXbuiA8IxSzuKS6rSUvKgLN1ct2PPB652e+2Pr
Z37XuvGTHVu9Pe77IbumDNk7vOuPY/qs3bjkNGPC5QxbsQ0omkl1gh1MmtgP
zHPhaRyA8NpbwsfuGgZlJPWGOuQMFwmJBwGYEiCSwDhF5SskGiaGqro0l8rk
AqjA2kWFACK2zk2EBQ0ADAO5bDAruTx8+7lpo3YO77Gxe5slbz479L1G45u/
MqX1WzOHd998aHMaY0mGiygEaZAAgyLNxLqJDcqECmF3b2PKQ6eGzsmzReoe
8yR1Q0LiQQCvmyUIcEcEQhMiPjMB2Oy2G9djLp6NunAqMvpKXElBOd9O5X4E
IlQD2MWIeQELgjrRbQg4zNQY240zpbt/jOvcYuEbzwxv+szo9174rkPzhTNG
H2Y8G55YmFHNy+0NREVxvokR0wimG9DAotE6sSr3EY+b8mJ+C1IoJCQeTIgm
HWwZIw+xU1UTElOmfD+rb8+h3TsNGDV40u5N4fnpRapDwwhioqpGBSMiTmoC
DJHu0JmdopQb9iItIapg5tjD3Vov7fjx4k/fmPLmc0PfbTyIcXC3RRtXHo+9
km6rsGsujQmFlYRGEfODDMVpGCoiiHoCLqJnupQOCYkHGCIdDHnIfYWyiqp9
+442fa3Zr//1T//8D7/9P//y1Fsvtpgxcen1S7cc1S5mpBjAwYgwkw5dRE6p
XqVcOZV+eHv87nXXVs87uXf9rWM781bPvdSt3ZxGT33J+Nc/fvziMx91/KLf
3m1H4q4lOKtdNVqhi60VT8chucMiIfHAo7Z0lArpeOPVj/79X/74T7/6zf/+
lyf/3ujTGd8tuXbppr3K6S8dzHnxScfJ9EPbmHRcXcOkY0PC8V35q+dGdvdK
xx+av/DnDzu06btnW0Tc1QSHlA4JiYccVntRi6KlILU7lEsXY9q37vWfv3n2
n3/1u3/5pz/+6bcvtXiny5LZ65PjM5ivgTFg1HUnBBp7BtZRQUrO/Klh/btO
GtF/ztJZe66eyc9KdMZHlezeEDV5dBhj1/aj3nnt89cbvf/lZ13GDJu0ffPe
E0fOXrkUXV5UTQARuzuUAGiIqS3sDYIfqnReJCQeIPiGG4hIKAUA5WWXLJy5
9t3Xv3jqd6/9168b/9s/Pv3Evzf54sM+axbtTLmZ66zWGVWnCg1gKEZeWv6O
1du+adfnvaafdf6y/+a1B4tynFClhssszVcTYrIZw/ecnjJh7ueffP3sf7/y
yvNvf/5Jx07t+gzuO27j6t2xVxLL8quAAgnAhkthxAjVcaBSOiQkHkRQa0g9
oUCDMZG3xw6Y/eVH/d9r/NVv/vHFp/7tnef/8+MvPhg4f+qmq+dSGEvzbLod
FmWU7t9w+OsPO3Vp27NX12+nTpwTfSWBPZ33POV7udCaLatrRlZ67u7tB/t0
Hfrhm23++sQbf/yPxk//vsk7r7Qe8+3MQzvOZiUVajaDGiYjhpihhlBYgVOp
HhISDxB8QxOwlQZGIK3Idf64YO93Axd+03LkH/7nG2893aXJUx0a/f7zt17o
2L/LNMbD26/evlZ67kDs6B5T33jyg5mTFu3ZefjiuWuaaCZmmhBCh65XYGxn
pFQ3KQYaLsq2he+8OLT3D+1bDGr+Ztc//+6dF/70YceWQ1bM2nnrUhaqMhlV
h8aAAm0P3kkEY6keEhIPCvxqWJh2QKAbmmZiEyn4XHj0tuVHZ44M++iFboO+
XLBo/OEJ/Ta0aDroL79rztj2g8H9v57cs83Ytm/2GtZhyuVT8SUFtupyBQOs
uOwQ2gipIqSCUIs2BFU+yUXFtlJn4rXiq6fzwrdGj+y79I2/tv/z7977+/Pt
BnScvHLWbsaE2BS73c7UA4ughzc9TEqHhMQDBW8NC1uWCCMEERFV80VpFenR
+Wf3RX3Xb+askSuuHE2+eSl357rjw/pNZvyqdZ+3Xv/0768069Xp2/Cdx0sL
y5mjwbNDCYJAwVihpmqa7F8+goFSntmOxcgWZtvoLqLYaFmBcvXS7bBluwf1
/b7lR12bvtTyleebMw7qPWHz6n3xV1Khg1Lo7jOGdawrOo+gUnfndg8Bb6lq
le5b9PQL8SvM8dJ9j6/CLvh4G28DIyQy9CUkJGrCf92I+lVeQoL5cjShDRnl
ICM2c83ssCVTlmbFZVOXWZRdsm93OOO3A4e+/MrrL7708qgxoxOSElXN6enx
VSepCQg1qLs7GLMgsKJoaam5O7aF9+s98tm/Nv3Vr37N+PyT7w76ZvKxnZdB
hckcHV4np5rIiZRqRWzgWu3IFA9V0cUduYtxqI9+0uGVE+se4m4JEnw4lleE
kLs5gISERC3UkA4iCu8t6UB2DCphVnz2j/PWLZi4MD06gziZqVB5+sR5xqlT
Z37eum2Llq1mzp6VnpGh68qdpYMCTHRizXoT0qFpfFTc4fDT48fMeP/d1v/1
n88yvvTMR92/GLlh8f6M2MLKQhuwI6qY2Ik1uyakDZhUqIlbOjSPdFB/3QhB
Omgw3bDglQ4xnkpCQqIWxERZ6nFYhDVPTGKtGLY6nWZxSvGOlTu/Hzw57nw8
sEMCqK4gxqys/HPnLx05eiz+1k0AoV9nUeiZ6uJPfjshBoAKwjrlToc79Qsj
syCv8sK56HVrd0+fsoTxoze+euGP773buE2fr0dvXXWwIKUM2UzsEi/DZM0w
CLKaoGpWN1RmzIheAYjX0lFfIbCfJNRUj9CG29IQHiMh8ZhCNBUMkA6v1cFX
p2qWZ5eHbwzv82XviG0RlXmVpujawWgYwGZ3VlZVOxUXof5zoOqi1+owPIvX
asJuAgM5bEpRQVXa7RLGTasODeg84c0XWz3xm8bvvPzZnEnLd6wNPxdxVasm
1vQG7lPxgluvUgHLs6AUQqIDrAGsI6ZxJq1lU5A6jtMSm0ChaPD5vhISjxTc
xe0+twVToPMRK5Z0VOdXndx9vH2zdttXbyvKKMK6u0SfKwyTELHnwVwPPvPa
DMpA9RAWQsA6pZ6UVmgaGmXMzyg7F3Ft7qTVLd/t9MJTb3/UtF2bZt36fzNm
+7rDqbfyVIfheba7pypvG0CsTuwa4YNgFERckJfY1F721KMenjaIgeFWM2gM
REJCIggsc4N6r9FMOgwNUWsTQzedJY7IIxc/e7vFpuUbCzMKsOGRDm76E8xH
tTHpQJRiv6IU76ojtQQEBl7lAx9rEZhKpZEal7trQ/i3PSZ82PTL15//+K2X
P2v3Sa8F09edOnw5N73YULD3NXh7ZKgj6CLYKcZQKpQ6MbGbwdsjW+/km83t
8X1033QH/0OS0iEhERw+T8VSD0woMDD1XJm1au3mpfjP3m25eeWm4pwiXyNT
bnKwRYtoQCVb7cVG6nUTPIfgpx7MpxHBVAoUGB2ZPGvSym97TuzU5tuX/9rs
7ZfbdGozaNXCHbduZJYXVTKqTp1AggHQFTsyHJS4TKpwAaFWcCSo3eB1r7yG
h6UeHsNDWh0SEndGTeng2R2IeJc7UmBuYlaX1h13rd9eklfMF5Z4HNMNgCAj
Da4Ytd+ltnrUMjwEdUXVnSrSoPWMnNTyW9fzjuy7PLDHpJf+8tHv/vW55558
+5t2g5bOWc8YF5WiVFsuDOXhXaSbUDOhaiJVbOMi75ioWvDuoUBPoggILmgS
EhJB8NOlw4AAIHAvpENzKl7pyE0rT7iRd3R/1Lce6Xj2ibe6tPVJh6tK90gH
+tnSAaV0SEiEBq4WxD0GhVh7tQHSocKitPzxg8ecDj9ZXVrFZ8wiwokxxJAx
ZOmo7bZgXzjCTzow1KGuAFUxVJUi6qzWqkpdGcmFe7ecGjFgeqsPur7yt2av
PdesfctejLMnLzt1+GJ+RglWeftD0XcE8UaJEJoU+r2RRwWCpH55szj891mk
xyIhUT8o9QxAEZNQhCZAREX3PwoIVEBJZuHqBcvjr8SqdoXPh+PZ6lhMT8GY
iiRwWteVPeCN6jA8qO9+SzqwgqAdAaehOrlIQd4+1XDBkjzb5TOxW8IOjh0y
q03zbm++9Cnje2981qfLsI0rdqXF5TnLdawQ79hbM2DTx2poSOvWA/9Yrf/2
kExEl5AICjHdniBOyhsNQ8TLZ7nxwbMwEHTq5TlFB7ftyUxOA5ohHs10A4ts
EGqZHExsRLXsHd7Ic3GvQVJDPQxQDVGVyEgzeEDFQEhHGIgtFWA6K0B2ctnh
XeeG9fue8e+vfPzcU01avtth7uRVkcduFqdXOYt1tRzwhFMrvy2A7r4ClASk
kvodO/98IsHMmzEiE9ElJILCZ7dTj+eC+XYrpszsB8g0EHAoMZFXinPygaZj
jPnMJV0DCBC+yurYWAl+cQ+qHrWdHWY3uIR0aKZ/EojH6SG6qVah0hwn44Ht
p7q3H/TEbxr95n/9d7vmfbesOH4x4vatyHyjTPgrbl+Em0+UD4JgnwsxaWT6
6D1CgikwiNXXkPDPDTExGMUATSkdEhJ1IUA6hHoQr3RwAoScamp8QnVpOQbM
eSDWxopI+iYNJB01nm5lXHi3PPxcG696AIo0wliSW3V034Ux305/u3GrRk98
0OqdXp1ajfi2y7TVc/YlXs9RqnS39rj9D6aLSFTvss+gM9PJm43ms0Dc1hR3
rxDSAFDv+V9AQuJhhXvZUL8ETd6ny2p1DBFWjeKcPNXh5NVnViaYyAV3b7a4
s8nqelV/VQgaLK0tHdhPLmrQ43oQd7EK0kl5UfX1izdXL9jW5Yshb7/U7pVn
Wrz6l5bvvNx+3OD5R/ZcKsys4BNu3S9ACYTI0HjXIWwIDRFDXxBxf/iAY2Yf
FyEsrQ4JiWDwW9rehc0zNH3SgYkOqkrKmLdiSYR/PFEoTh3zpeuUjhrqUVs6
aux91HoKxZ4oi/tmV5UWE5k2bdzS95t8/eyf3n/yP5r8+n/+5YMmHedN2ZRw
NYuqPiniU+tUF9IVSiEvxWHqgfl2ERX2FvXbXZH7KxIS9SE06bCXV0Ld8N/e
vLN0mLWlw6ylA0GLWINKBwlwXizDw3KYsKnajdtxuWsW7+z8xZAPm3Zo8nyr
P/yfV958se34wYtOHbxamlOl2nRGDAjzuaCmIl01iUc6rJ0i6jfJQUqHhMQd
UYd08NFrWHT9EuqBNYOKyIBZSzrcNwWs9+Cv70FtTbirOElgab/H/KDIhC7z
4snYXZtOLJ69sXWzHn/899dffKJZh1aDl8zacuNCKqOtzCVmvlCsiymVAXU3
4j2oTz2kdEhI1Idg0oGFLUGtrmFiSItbN6g7OaNmjTr/H/azIupHyNJxB/Vw
WyBEeByWetgq1NJCR1pywaG9Z6eMXPFl84Gv/fXTJs+16NpuGOO2HyPy0kpN
Zj1BSnTKM0Z4HQ6CUEfYsLJTvO/MPjEhwaM4EhISdUqHaVJvfrp/o887SEc9
id/+b1lPuVwohxsQ+hB+B7Z2RRDkO62qC5QUViffyN7147GhPae890q7Rk9+
wNju4wFzJ6+/cOxmSa6KNG+0Q6gH0og7cd1dR+z93BISEkFQt3SI3wOkg9KA
VMs6pCNE9ajHIajpD9X9AJ41L3qOIW/TQgt8+LVuluXaLhyNmfNd2Ofv9mFs
8mz791/tOaTHwn2br2clVziroKGYUOcvgzEgVKfunmOIin1cIsVDQqIu1C8d
gfR/QC3pqOFH/JwVhzy5WIGvE0xpRB5szZaGVHQME/83ocPMulWxa+1ZxgGd
573xt56Nn+rcoeWUFXOPXbuQk5FUXZDt0FXA+xVRjZgK4X2SuYYQahAT0jv7
XxISjyXqUAZa+zGB2oICjBPTM+MA+jXzuXv1cL+RaE/m7r0TkKbuPdjAWQnY
shOsBHLK94QMAyoUQ25BWA05RB/TpCjH9BHhrzzd69/+x1tP/bbl8L4Llsza
tW3diZTEXMjbqxrUPf1BEbQsEFnDIiERDA+hdNQasxK6dDjd0vGPbz352xbD
+oQiHejnnmEJiccAd9yRrOHE+G79WcHPGvDfrAnyOoFHSGu9Na/kxcyLoYg3
CAAAA2Al1VeXgMjTKbOnbGjxQa8//+e7bzRq+2HTLl99NnT+D1sSY4pUu24i
hAxDsSmMUONtWGtHb6hpegv/sIiJIKthgbvveui1uhISEg8mMKWQYANjnRIg
BrgQ1aWlJGZsDNvTr9u4Nxq1/ssf3n/xzy0+faffrInbToZfz75d7CjXlCqD
EaoQ6QYyRONB3oqdWFvWXB2IeyQDN3QIJ6JWmhqmgRvHIs9MSoeExMMF704y
ogQKYrbygY7KipxJsbmzvl/b75vvu7Qd9e5rnZs8367zF6NWzt9963qmZjcY
sUEMl6Y6HCYFxCp4EYMcsKgL5B0KahbYWBmutXoZeQ0PCQmJhwLuy72YdI0A
I9ANoIvGZsIlykurToouPn04btzQRS/890e/+/9eePvV1rO/X5FwPZ3RUaFg
DSMVEKgDXSXEW25DEIEQM1+IZ5Ngk3jplxwfSCpzyyQkHh5YNSnE196HlwTz
dswUA94CGTBtcMCqEjX+au6iWZu+bNnn9UbN33m9Vc/Ogxi3/rgnOzWPQncT
NYJ4HS3B7s1fxGdFqZBoos7HopUHUiMO481ek5u8EhIPCXgbHxOLkQ/eXRl+
/cfUbS4A3jUIaaZqQ5m38/dtPz58wKR332j53J9fZ+zcrs+6VdvSk3KsJFOR
ekYQgJrqpNSgVEN8VpRCTCAIvXnrtXJhpHRISDxU4HX0FHJPBdXY0LXMAazz
vunsX2txZ6UUrVm6tVWzr3/36/9mbNL4gzFDp148dZ1ovsAn813stkoxbE4n
VMFUFcOyDbEpTGrphmWBeGoKJSQkHgoI6UCQIIj9gxCe2hxudTDdIIZbOgpz
yndvjejVZfDfnnqVkUlH7y5Dd2wMryy0I5VY7dWRAV0OO7Wkw2S3hiIdVEqH
hMRDB6uHj0XupDD/Bborbf0tEMs0qCpznD5yeUi/8YxNX2r2/379lzdfabFj
XURZroI0z+YJH5XpnRxnJcxDkZZW21sJlgMjISHxYENM0g5cslb0wee8UN/m
qVAPDDBvV3gpgXHhzLDWH3/z2nPNOrQcsH7p3oyEYmc51mzEUg9oGAgYlHg7
nwboBqm5byulQ0LioYGY71B/MxC/NFQhIBRRqGJXtcZ4+2bO5rD9vTqOfPnP
H3/96cB1y/afPHgtJjIVuniCGFAR1JkFQyxSv9aLQaVDuisSjye8l2/qwf09
ntBQs8C3lgvhv3kqLAfe99jbMNksyCrbt/VE1zaj3nyhTftP+/f8etS0sctu
Xc3SbQipBOlik1c0KaSeN5HS8cCC+uF+H8tjBN6qVIB44L3rQf1DUE8tXpAB
c7WsDm/euM95sdZ8daly+kB8p1ZDXnjy/T/95tU3G7eeMWFVEh/TYGBdRFmB
SHJH1hwoq0cQwaKNCKZUSseDgBpfXf9vr8T9gsjUfDDL0qlf6Wsd0uFJN/Wp
h3/JiRAQpJnluUb4jov9u37X6v1uH77x1WvPfjJ64OxbV7KY54J1qtoQIwbW
V5MX7UKsA2QwQgyldDwIkNLxAEJKh5SOBx9SOu4jvCef9+4T8L/lfh9dUFjS
EZBxUceOKQ3is3hIoKnbcW5a8da1h+ZP/XFEv2lNXvj0k7c7LZ+75da1TFcl
QDphpNDk456QIUZUGoiRGJjPqiTs7EA+YvPBdOseC0jpuI+wTj5CCHhgqccD
/IegQZO16si0oH7BUvdQO/djmJYIy4WpR+KNjGP7Lwzp832zN9u3b9ln9ver
os7eUu2AEamiuB9ZWafsCVZ2On8mpgRghB/Qs/RYQErHL4waEWmvdBgC/oHT
+32kQUGFtxIkWauOJC0SoB7e7VpMmSYQKLJJoemoVK5fTPzhuyUf/b3dh02/
+G7E7BsXkxhLcqqBC4uILDPDRGdUd5dUMbuXP//BtM0eC0jp+MVQ/6musb31
oO6wmJ6ug0Hyw+uQjtrF8vwsMFtCV3XM69tE9MPAGUlFU8Yu+OCNNn9v/HGX
dv0ZD+8+U1Fo5yYKpk67i1fNeKIoQr6QbI98HyGl4xeDN4hhgVka2dnZFRUV
7AezlnQ8sKBuxyOUnPBguuHZo+WtxnibIPe+LfvRUGBybNayORs+fb/Df/z6
GcZenUce3n2hvMDFLBOsE6gRoBGoixFRBFB3k1WJ+wMpHb8MaugGg8vlCg8P
v3HjRnl5uTdMav1wvw+2PtRTTlJrxyWoaFCP2QA8+SHcAlGdGoVUd4DoyORp
45a+8rdmjG+//MWo/rNPh8c6ynhZLdEpZo/SiKFCBIHwX6TDct8gpeMXgP++
iRd2u33VqlXHjx/Py8uDEFonHyFkhTvu9yHXidCko257wx0pJaKpujt2AYFu
q7IT3p/DLMys2B529IsPezO+/OeP2zUbsGn5sdIsjDXTasOONaI6DWhAT6mL
xP2BlI5fAEGlw2azLV68OCIigkkH4n313NLB8JBLRz1+ijfBI0A6EDScdpfl
gpTl2Y7sihzSfSrjmy980eqdXoun70iJqTIchFrSoRNdgQggKR33F1I6fhl4
pQN5UFlZOXr06M2bN2dlZXkfxm6HADyoSR0cdesGDdI+NMBP8X80sXZ4fYkf
hJe/MWVATtNWiLJvuhh7fvld4ydbfv7ewJVzw8uyNax6xMZ6PdES+X6fj8cX
UjruFYJFD92bsqKfp8vpWhe2dua06edPnaEIWw+GgHnxyAqYIvJAey4/F7Wj
rWIjlwkI1ihg7oudRJ7IGDNgTdPnu73ZqNvKOYeyEiv0ahM4rSCrQomdUCeh
WsBUTZ+Quc+1sEygn+hI/ET4G8/W5Y/U7sAg8TNRz8aD53ZVUffu3DX1u0nH
D0UQAK0bEYC856ew7B916fA/OdSXNkY803GB6SiDJw/cGt5nxbsv9Wzz0ZD5
UzduW3vk1KGrtjLm3RgEKgQrfKYt82E4ofhOE4z8htjxXWDDpxu0hvFT5+aQ
RG1Y0mHpBhSQ0tHwCEE6NFWLOHjoh8lTjoUfRpph3cgTJDGh7o59j/RfpaZ0
IN/q9iawQ7Ms33Uq/Ob4wSvfavx1s6adW73XY2C3Scf2XSrOqTYcOkWAEAMC
hZFJBFMPzKw2HkH15J4Rwr7lvJEZrVs3HuWz3JDwSgf0QEpHwyME6TA0/dyp
03N+mHn04CFDUd1XSaYbopCFT0W6D8f9CyKIdHjK+a1ZkexMQEIBsZdrkadu
D+g65fXnPn/mP9959a+tun05Zu/Gi7kpVUBlNjMEhsrIB0JRiLEhfuaFc55T
Gjh4U0rHT4W0On4JhCAdwADXo64smjPvyIFwzeHypEKIsSZisMkj/iehNX5B
YvNVF3T3JtUVF1B1piVQxTev5U8fu7bX15Navdfv9//25sd/H7R5+dW8NJV6
BYFnqwMEFQhdvEMyRb7wLLmTekjcCd6IqH+oX0pHw0NKxx0hpeOhgpSOXwgh
SAc0wM2Y2OULFx8/FKE5Ff+n8Jq4R146AkA9+yBMNzQvMVKgoSDDQDqpLFEu
nbx9aMf15bMPtHp3yJsv9O7WZt7GlSfTbue5HJCRR0kRAIaQDqpTytNNmc/D
vugUe4ZPUuKjKQfX3h1qpyfJDdmGRyjSAeDtxKSw5StPHTlmuNTHWzpMj+EB
hHqopqkIqgS7EFAJwNigrkpiKyHptyo2rTjZpfWMps/2a/vJyCXzN8dczWC0
VSqY6QQ0MNb5IDmiE6JhrCGoipnaiO/7ehmw5/KYnemfCm/Ft2V+PCxVVw8Z
QpAOBFFGSuqGNWvPnzwNNd3rsFh/ocdFOgJOFPVU6BtCPVRKmf3A7DHe6dhw
ISKSyKhuOkrA3o3RX336/fNPtf7wra4LZm1jjLueoTiACIpyzwVjFWMFYxfG
TvYilLJXU4UxI3wiapjUm+lRq8G7xJ0gReNeITTpyEpL37Juw+VzF6i7nNx0
D4A2H/kdFk8AIviGKbFiHQA4EXKxlc5cD03RmB5Ym7YEmM5SM3z7jc5fTGz0
dOsWHwxgnD9j583reVDlsxuAzuwPjRCVK4/ppKaNkzrEr37SQWFAOpmExH1H
yNKxdcOmKxcumci7kyg2Z628jkfZkqZ+rcN8QuIXzLSsL0Q9zgXzsKlnSCV7
KjbMqlL1VET88P7LGj39BeMHTfvMmbIrJb4SaybSud1mEkywgVA1Nas80sGU
BXASLAbXEc+m8KN7piUeLoQgHRjh4vyC/Tt3Xz5/UffEOkT/Cv4cXtKBEXlk
xYMGSe8MUvhCPe2R/ZIzRJBTROtIeZHr9KFb44eGMTb7+8BP3h72w7idKbE2
4CLuDBE+CorpiAsjB8EagdBQACOBhN+LMAIGV5IQEtStlAa5pyBxbxGCdLBv
fmVpWcT+g5FnzzurbDWewr6gAMFHN4IdonRY9N6HPS3WsTWPhTkleSn2/Vti
GNt9PO5vv/+yXbPJ5yMKDRt2x0Gt4ZNER8CFoYEM4qoCjEjn0kEgBipzaoxQ
pIP9LYCoTKwtHTJgKNFgCE06qssrjh06zBwWZ3Ut6TCFdNBHWDpwyNJh1pIO
JHwZhHVSnOk8sT+JsXeH2a/9tXubDybtWZ9QlOnUbBgqfNgcH1upq/aqyqry
qspSZ0meg1F3It5uHRKo8/oXM4QKXCYOEEJ/6fBXDCkdEg2DEKSDGd2a0xV5
7kL89WjF5vDfYbEe9UiXv9URJq0rcYvDKx1QtFbWqalRDJlE5KYojFvXXOr1
1YKPXhvd+bNFG5beSLjqKEqnlfkUOEhpnu3y2biIvRcj9lw9fSiRsTDDCV1u
+wXqToLRXX8A0Y/6AW+uIvHwIQTp4IYHwrdvJWTeTtUdLhMTU2QueUYpWDUY
jyqCBEaDnLGat3j6mppQTFXgeV/sHPK8D5UUZrj2bozp89WKF//U5+1Gw7u3
nT+kx6phvVaM6LewW/sJrT7o3+7TEf26zB09IIxx4/Jz8VFFzgrCt2PUu5MO
b2KDlU5pesIg3nEYDXaSJB5DhCYdjEW5+aX5hUBRsQEYqehRKrL0HvWLmS8E
6nVGaheq+T1ciItFIbKIcPND53keIlMUqWZ+qmP/xtgebZe/9sy3Lz7Rs9ET
PRo90a3RE52b/K1XsybD+3RYPmnovlF9tzCOH7R53dJTCTfyTD7QRafkLloG
0UBYNz4UHd4kHgKELB32yipXlQ1rBtR0RmtzljwW0mGdnFohUG/fMJ+SuEOl
fm4NUw8iksuZ4eEkyGBkBghWzOJM5dC2hB7tlr7x18HP/lePRn/q89bzo3p/
uX7K0OM7ViYd3Z6zctYNxmE9140euHL35tMum8ocj9BPtn8ph1U96t12kcFS
iQZAyNIBFA2pOgXIa3WYVkZDsKc+UqgpHb5Qhh+RZ2YT8R/iQKinJIUnnDsQ
cDJiHRD2m2ZW5emLpx9v33zWe43HtHxz+pBv9u5ZXXlih37rPEy9ahzbWcU4
ccjOXh2mzZq8JuN2PgKhmhyWblgl58w30QQMw/C2lpVbtxI/FyFKB59EhLnp
jflAM05rLkkdT32kQIPRvfPitT0g9RGJkXPc2ECiLJZv7lKRmC50BuoqMph6
mJWF6oJpe5o3Hf7Cn75p+uyQbp9v2LK4dO3sgi1LSg9tsoVvLmScOyl8UI+Z
k0bPuxYZA3QQ0vF6Kr9qi4OlJzLWIdEAkNJxR0jpkJCojZAdFr4asDC+vTss
Hp8ZU4+OPJoIWr3iCWa4Yx1I7MNaA7KBCI0yecXIox58Ibv7B2KCAIUGc1vK
86tXztv98ZuDnvtD+xf+8E3Tv4wd2+vMpAGXF01M2Lo0a1dYCuOymUenjF6x
eFbYzeu3DEULsWCIyYLT6SwvLy8pKSktLa2oqHA4HMxnsVLFpMMi0QAIXTp8
+5OW925aOyzsnkc9EZ0Ekw7vGbN+Qp4UDpWaGjENzAmQiSz1wIhvz1qnjmJA
kUoMxVZWdXD7qW7tJr3/Sp/Xnun+p3/p/O6zP/T8bNfsUdfWL0j6cUEU47KZ
BxfN2Lhjw77c9DyoGqFIhzV1KzY2du/evRs2bFi3bl1YWNiuXbtOnz6dmJjI
9MSKmkrpkPi5CFE6aM0MKLdVzKQDPfLSUSuVtOZJw1waqMj+YtJBdUINTAEz
NTDlngP3XgDWXRpjSX5uYU5qZWmuaq++HZ+xdvH+aWPWDumx4J1G3z73u+4d
my+aMfLo6jnnF03bx7hs9o4tYfsun72qVCsUkhoWUNDj1TQ9LS1j1crV/fsN
7PBVxzat2773zvstP/2sT69+c2bOOxx+NDMtm1GxypEkJCRqILiRcHfP4Jdm
Qmr27PKk0lK/wmGECYDY/SrI9FWmeLZfXNWO1PgExhXzF00bP3H7uo2FmTnY
QNClGTZnWW7B2SPHxw4Z3u2rjh3btBvQvdf86TMZT4ZH5KdlAodiAmbIIGbl
YY+PhP32g31Hh03FocVFJ40YNG7KuJnzpi+dOn52/27D2n3c+a3GzRo91bRZ
0y+mj13EmJaYYeK6DarQKSHxeKOOleFdlthHv+QN931E5LlYIR+rhZjhblxK
FERcqCgrPzrq6rWLkYx7tm7ft31n7JVrhlPhtXHMZINEd6rFufkFuflpick3
b8QkRMflpGYw2soqgKpTK0AtgkqWaNRYu/6Vu9jA1WWOi6euXLsQFxuVdOt6
amZCflZyzsYVO3q2H/TFR998P3wO4+34VAIRtSLexBPFInXPcZDSISFRC3Wv
DCqKg7Fo4my1NyIBz6LuiQrMLSF8gfsyPpCKbMVVCVfir5+JOnX4+PHDR2Ku
XmeMvnotPTnFVlEpOnV4vD9EgMZDGQhAQ9V0RYM6YOTCwgwaiAjEVtAleLMw
9/J3j6VDKlMPu73c5axU1GodKxTY8JZVu4f0GDv+2+nHdl1gLM0vp/5a4ctB
kdIhIREq7igddWVSedO/MCI8ZQv69myByyhMyzu+J2Ln2q1b1248tP/Ardg4
xuz0DEdVdejOAtMNpBsYQJPQ4EuWBkiH1dvQP2eNGlQrRyvn/Dikx5gl08My
YgsZFZse4gFI6ZCQqAv1rgxR6Ud9HXIDnujxFPhUCUCsyIbh1BWbUlFQFhcZ
vW315g1L125ft+XUseOpybcZC3PzFIfTkg5a60JPhVC5m7BZO1kIM91gAmLW
FSP1TJLyJrpSw232ABfU7HpVcXVKdMaMcfOG9x6/fvH2/NvljJoTSOmQkLgr
3O3i8I+TBrniU7E3673EqyTjZmr0hWtHdoVPGDymW9sukwaPO7B9b2Z6hupS
GLFn5DdTBqAbxBttsKwXiNiNjOwHRlpDWDwyEVDMS4nP3fBGQwyzsqCqML0o
OTplz4Z9Pb7s07xpi4lDpsVfSuRxmHqbBsl9W4nHGQ1yRSV+2xnYP8hQ425P
IQtwgevnriyZsfC7oeNG9Bna48uu00ZOunj4bElOoaqqpBYQF4eANSxmAFBK
ghepUT8LI0BArPitv3oAsyizMC0+7fzR8+MGj3/+iRdf+UuTsQMnXj8Xa43Y
JshXHFcjs1QmjEk8zmgo6UC1pcP/PuCmq8KZGn87fMf+8YPGDPymX79OvccO
HLVl5ca4izFVBZVQA1b6HBUjFBDP6cSWSPjeizKnBEL3IHDiz8C9YOJPr1hw
ijspphgSdmy2MltJbmlidNKPyzZ0/7p3i3dbd27Tfdns1Tm38xkVh+o/6shf
K6R0SDzOqN0FsJ4p0HeUDv8Gxr47DGqqhNFZbo+9HL120eoBXfq2a96Gqce8
72dvW7OlID0fK9hwGIZmYOpJEBEzvq0hFH66wSfaGBBAXt2KrQdYFJs67re1
bIsa5B3VTYy9DZgwgYAZM6ahQtVhVJXaU26lnYw4M3/64u5f92UMW7yJMTU5
HQB3UUwNrZDSIfE4AwfjT1CPgDyKQN2gCiZOyJh8I8HSjY6tvpo4dPzRPREx
l6IzEtJ5qb1BHOUOl13xCgIxae13saQDcXsjyL1+B0NFZnsAMf8XI64eVpCV
MNuFvQqvldEpYvomBsqlJWYunbe6/WddPnmvNeO+PQfKysqYUAU5dcFK5yQk
HhMElY47qkdNUP8cUg/F2DeqEuKAqNpgPLz94HdDxo3qP2LH2m1KuYuXs7Al
bRDDCZRqDRmYUq+74XM9ahgeVHR59Rkbfg/2PgX6PKSAfkOiyI56pIMif+nQ
+Uxs4KIEmEnxqVPGzfrDb//MOH3qjBs3blRXV9f+0NLqkHicIaVDSoeExE/A
XUmHBW9zLW8fYGu5Uk9vMD6RXuN5X0TFFbll8ZExx3ZHMIYtWLV24epje49k
JmUgF7RS0NmDMSBQF1N5a6VkiB8ClqdwiKxtFV+fMRr4AP88Lw2x14aAEG8o
Bgvd4LqDeFk/c1WwwRRMDJET8yfTkrLmTF3y9O9fYBw+ZOSFc+ddTieTG9Wl
IAA9EVlTbAoTHsxFyHvQzJdCkHtUd1JbCYmHG3eUDndPd7/rq790uDuvIkKB
r4SNAsqUwVZSnRaXcu7wmR1rt65ZsJJxe9iWa2eiqgorfO0GxZtR6umK1EBL
DPN6Fz7Zhb020w0DIQ0Au8NZXFLKWFFRpaq6qIvh0kEA5cMnxcRaqKDSvPKz
Ry5+N3xq46ebMI4bOf7K5Sig8+x3l8MJRdNIJg4uuyMrPSPpVkJOZpaj2sYk
hasKJu7MNCkdEneJ2mkGD3iD3DuaHNampNu6oNR9zfVLwcI8AxxSQ1TSi3I2
rKLqkuprp6M2Llu3cs4yphjnj51lTI2/bS+ppjqxPAf3yAWReMGMDkhreSY/
lcwaAgBD6A6nMtrtjqSk20cijjKePH4q5kZMQU6Bo8Kh2lVNULEptjJbTlLe
4e1Hp4+Z1a1tr1bvfsG4KWxjXnaOVcaChTiw1zc0PT87J+JgeNjKVccjjhTl
5asOJyNPg7daPN3Zx5OQCEBQ6XBPYnkgUb9u1AAfkqIb7MpLPKmephjJTXSI
7Vw9qMquzaQ6v/JCxNm5k2bNHD9tz4YdmUnpNSMOwIRAxCnE2zHR0NhFmzSY
dDD/xNCxriFdgxjy/I2CvMLDBw9PGD2e8ZsOXTq0/XriqO/OHz0bHxV368rN
W1Hx0eevH997fNmM5T3a9WrzQbv+HQeGzVnLmJ6QigxPLrpHMJl0FOTkHjsc
sT5s7aljx4vzC3SXwuh/WqR0SNwtaqjHQ2F11BPZCLzVk8PJ5IKZ5YKUt2Ol
WEFFqflXTkae3Hfs4Nb9YQtWbVi69vrZqNLcYsNluEOW3E+hBDD9gVAkf1HR
kZE5DYwNaHW480JEQMOK30IDFuUXXTx9nnHp/MWD+gxo92mbj5q+3+Gz9t98
0anrF52/adO5y+ede7bt1u/rvjPHzDqx52RlQSWjoRjul4LIKx3s4wNVKy0s
ys3MYv9qTDT4HO3AAlvL/PDeKCFxJzzIQlEbdeWAuVH7Dh5n5C1FKUSCmC1+
Z5Uj7mL0rrXbmGIwD2XT8nVnwk9y96TMhnWEDWw5BXwPRQymxtjjSnjjljSw
wcfPI2a2BkCIqROi7F8EEGEOkQ6qyqsYb99KPnP01NYfNy2ZtWDV/OUr5y5b
MWfpijnL1sxftfvHXecOnEm6kliRV+GuYeH5ZATzcn5PLNTd/5Aw6yuIDSbu
8j7MV3cjIXEnPFzScQf7Ooh0iK7vVuN3q7UOMcsKSsM375sxduqsCdPnTpq5
cfm6lNhkpEArFgp1aK+wMQINeLuGBn/fBpIOYEBdNYAOmKtiaICRV/p7do2R
BqpKKrJupyfduHnralz0hWvXzkZdP3sl9kJ0bkK2WuSkTuzWDYOX7PFgDrOv
LH24U78OIiKldZ9QCYk68SBHNmqjPt2odbdIhiDUTzqgZjiq7UmxCesWrv5h
7NQVs5esXxIWvm1fbko20hAFfBcDGchlczJCA3k7AHnHWtV834aQDmZyGDpg
b4fZERqIKQm2+gUJYgM5Km2FOflZyekZCam3YxKTbtxKupGQGnu7OL1IL1ep
Qrho6IJI1NIw+6qGLSGlQ6JB4R2Y/rC04q/v211LN5CqQ0UjBnIPRkC0OCf/
3NETs7+f9sVHn80YNzX6/NXijILqokpr4xWokDkpQd+gVhZ38LZeP/9D1aOE
Qgr8AsT+o+qYdLgEkcfWCiYUVsOQgF8Db5HSIREimGgYhqHrutWK/8E3P+r8
dgdYGtiyNEQfP2JCotqc2bfTGMN37Jk6ZsKQ3gMW/zA/9uJ1W2k1VCHWEYVU
c+rIQJaHErhYeZBVSEdgMw3aYNLB3pW5RlBMrbYyRwLrZ/1kigZmwNaWkfr/
gLTWr363YJ4sxiwfHOJcGInHFuwyCgBQVVVRFF3gwR+VXr9uuC+42DOLHhHd
oeSmZZ4/fmrDijWMK+YuXDlv0f6tu9JupjgrHFjH3vHUlm7QWta9tfsRRDdo
g830Ftu/3jwvRnf5m7eElviHL2vbITWqiOvAHcvfvPvyD/h3QOI+Q0TXoW6U
FPA9O83pYrTylq0BJZ5+Er/U4Yjvbf0xW+pXLF+jDsTdmcegVENUhdCh24sq
cpPSo89HHdl5YNPKH8MWLmc8sHV3zKWrZXnFfBRkzWn21mEEjGfxUyp/u9+P
DQESWLTirlsJpOe4Ak/H3TgasnJW4s6o67tU64KFVD0u6trxA4dKc/IZ2TXa
24efoF/0m2ZZy7VjtjUUwhDz2KDYbrWuytTq26kTaDOUQntpcl5+XHr29eT4
U1ePbTm4dcm6LUvXHdkeHh8Zy1iaVQychhnqbHkJiccMIUsHcKpH9x2cM2X6
sf3hjPkZWVAz3Gb/L7u/H+IesWV1AOaJMK3QeQ0psXoA2vWS23nRp66smbHk
h2ETF06YuXPFpsjwM7ejbhXdznMW2agTi01M6n4JCQmJ2pDSIaVDQuInIGTp
gC5118Ytg3v3W7t0BWNaQjKXDivDsKHD7Hf0yO8oHex+USDOa9owT2AQQ6MN
qlQ6MxPST+07FjZ3+fr5qzYtCtsbtu3asYtFt3NtRZVqlQu6gDWvnj0Ya5jv
wEpISNRG6LEORd+85sduX3VcMnseY1piMi+3FIGOhjU57iaeJx5PqTtO6320
iNwiw6pOp1AF9nIbY35abtzlmJMHju38cdv6xWGXjp1LuBqXFpdcnltCeJMN
6q6Xt/ZGIMUG5rmaEhIStVHfpT1AOrCqb1+3cUD3XpvD1jEWZOdZJoe7G0xD
H1GIewJcNkSWY81ZSOzYAAWK4aiwF6TnxUfFMJ44cHT3xh37t+yOPHE+/WaK
alMC6l6t/U50l8olIfHYIjTp0OzOvVu2Tx474fzJ04yVZRUUEQLR/ZUOgjHX
jdp9JITZUJiRG3ni3P4tu3au28J4aMe+C8fOpMYnadUuCokvV4pnSxBR4Brk
MCQkJO4OgSvRVlZ5aPfeVQuXpNxKZHTZnaL1NmIrt2EzS8kdi+Xdj3OXefpn
R0MDGKqmuZSKktKLx87sWrd147KwvRu3XzsbyViUXeCyOQ1FJwZmBomoPyVW
9z+zjiQNmd0gIXHXCJQOR2V15JlzEfsOVBSVMAJNF1nXPPG6YZM6QpIO784O
cQ+UJqIzXn52TmZKKlO2y+curJy7KGzhskPb99y8El1VUsEINUCg6JLHy74w
5pnUok1YvfMLJCQk7oiAxRIoHa5qe+zV65fOnFNtDkZsAFNsYLDF17DHcGfp
oH7S4fmZHQ+zNJLib0ZHXWW6cWDXnuljvwtbuPTSsVNluYXedFCmG1DXLSeL
d/8Vo09qdyaX0iEhcVeoRzo0pysp7uaNy1d0p8JIAHSPGru/0mHthiBiKFpR
Xn501LWLp8+ejDi2Y+PmVfMW7d+8Pf7ytaricq90MOMEiQ42VIxgY/4Kcjfc
qkM6pMciIXEn1Hmp9ahHVVlFcV6Bt3G/kA4adHxYQx1Gnd4K9RWEUsh3UsqL
yuKuxezZtmv96h+XL1w6e9rMnKRUtbyaaKBm+Yl4LZGcTutvXkrugTBKSDx6
qE86xDxkbDBrH1iDkb2hBmsiagMehm4AAJH3SPgWCiKiZoVaB2NNbPUKSHVF
dczV6K0btqxYvHzf/8/ee8dHdW35nn/O5zM98+bN9Oue1923P909fbv73neT
fa/tG+xrsAFjMJicwWRMzlFEEUQGAULknHMOIgokMkKAQEJZQjlVPmHHM3vv
U+FUqSQkkAWC/fssy0WpkqrO+dZaa6+91v7DF06dS7h642VWHk+HAt5c1Lpn
zfxrammWHvJGSK9DSqoWvfpb3jdK3QoN7xoHrfeWcv+Adb+sZ6joA8ELQRFf
uzH8497NoEKkN4nb5cnMyGJ26+at08dO7du5d8fm7ccPHUu+/ygrLbM4vxAD
FHZ3OQ2sx/r30NfIjYbr0CMl9R6qTgGCCYpq6PBCoM7oMBFROzqwuXAjph8y
AzrQmSOiQyI66TFulJWW37t7/8C+g8zWrl4XE73u0L5Dt2/ezs7IclTaVZcK
FN0yYTr477A0vLGiIzw3yKv64UhJfaiq08pCICcZbLR+6DBx8cqb8XkEOjQb
jLPLHpficrjYT3al4lFslVWJNxNjYzYsWhDFbNWK1ceOHHuW8tzjVkS609eC
HIdCozo3agxVrJ21JDoaS02rabYUDfdNGz4tWQNfwuRGapA5k/GVhwfSEfAw
TABsdgr1ncgMHc8fP2NRycaYjRvWb9y3Zz+zu7fvVZRVmC+C8BbfBAGMzUrR
cH9dnVIcEh1vQzRYb/vlSL1CEh0SHe+IJDqalsKeXKHZwQZCR00Bi3k99olA
TABhRkVnv6qyquL84szUzPgrN44eOLpv5/5Tx04n3rz9+NFTZsVFJZqqU54D
MYDOoWEWahjhqspJOAu8+JpuLdUo8jeNlPRoEqp+rvjzBDWeU6+LjtCn9h0e
IeigmPfYwTp2V7myUjMvnrp4eM/hXVt2r14WvXvbHgaQjLSsijKby6EwQ5Bv
+TfRwSc2iqJ4xideHV/rC6fVX3lY1sjjt1Fk7Tcr0dEkVJM/H3pyNSg6wh4e
/jUXpEHVqZQXlD2+/Wjv5t2L50bNnjJ74awFG9duvHPzblW5TbgWhte83cCp
WU1uvhhMqA5IvQ+9V8NF6qcStbRYl/RoEmp8dPgdDGvwQsV8KFWooqD02b0n
5w6fXrcketm8JUd2HYo7ceFhwn3dqVNEPQ5F8+j+FyCcDarrWNUQRF56MLcF
1N5/SMLhHVPIYn0IQ972q5MKo0ZGBzsMAjkNHzoAADabLT8/P1Xo0K4DG5av
2xGz9fyRM5mPX1QVV7iqXIpdIR6MFCQ6dxHAWOHRmQGdgSiw+T6Q/6xjuFIz
PSRXGlMSHU1PltPDW6th+AaXeCsggGEoYkYp8fKF+Keb+NKI5jCWoDkg1U46
au5To1jn08vM1n88p6GQl5mFN+IS92zZF714LbM1y9fs2b775tX4gtyXukfD
APEKUogpi1Oguc2f73eFADHDOBCYSFeiSUuGKk1MQacZNqyLmt4BpYwbdu+M
0lB0mKVVYkcqr8PyJh4CCAp5FsznlhGF//ROIQIGsuPnd18c2Hxk3qSFI/qM
ZrZ88YozZ85kZGRACM1Ahl0wB68YhiEjYimpd0JBZzipGR2uauggvtmlfH8Z
5q4EQt726L72F/5T2xcR8eafmkE0SnQC3MBWYn+ZVphw4fae2APLZq+aPW4e
sy0btl6/fp3FL+aeXBbaSHRISb1zotYisJD8hR8dVYbh5JGLtQcf/y37lce8
XkdAgarOohEfN8wCMAjZiY8J8nXE4BOdDdWhuyvU/BeFZw9dWD5v1cIZi2OW
bDi+63TihbvMUp+mlZeXAwDMF+idjOzrRUbD6W29eVJSH66qo8N/jXcmumYY
DoEO3QjaXg8EN5g3oorlUIJpoFOfYZgpj4DXQQU0MMRFecUXT13ev/3Qxugt
08bOmDFu5pbobYlxd4qzSj02hZmm6P6iUx9/Al6HRIeU1Duh6imJQPrTvAQF
IjwiYLF6HVj4JJoYQuBbh+Gj46mmA+5pkIADo3i0kqKy5KQnJ46c3BSzZeGc
qFlT50ZGLIheuvbC8bjU5BdVxTboQZxGQHgmYiEGCVlXZMyFXRmwSEm9M6IB
/8OPDu8ZSQQi9MAKiy+R4b2d4AlvEcxcA75NnugaYBfYKa4qemlJGbOH95OP
HTm5ann05HFTZkyeuXrZmo3rNh/YfTDp7qPKEhtSEc+BAOpNu9IAOqygsBaE
SHRISb0D8sMCBa3ABhCBAi4HCfmt995QhyzQ0FWIIM+aMnpUlFU9ffz85PEz
zFavXDtx/JTRI8bNn71gz469SfeSs9NzSwvL+NIM4glWvmILqBVZ1YFg8qQ6
NyQ6pKTekmhg/pn3Wz9k2cVcSSEB36R6F+DgHWV5OS+ZmzFzxpzePfsxGzLo
R3b54P4jZSUVfFur716UUF1FqgdAHQc6C7/y5Up0SEm9E5LokJKSqq+oBQ5A
/PT3APdHMaqvoFT8NlAuamnzKeYa6IpekFt4O+HOvl0HFkYuHj960rhRE5it
X7vhyuVrOVm5qqLxJuoAAQ2woEZVdZ7PECPYMMKKR2UGIQxpORgCB4kOKal3
QKLKM4AO4HUwvNAwSzvcYnHWJQACLD1ysPgnQ4rqtNkrSirSn6Uf3HN49rS5
0ydFLFmwbOeWXWdOnGGW8uRZVaUdQWw2M4cMHTpk6NA0nWcwRGk5REhRVGYS
HVJSTUHUhwjoW0lhBin1k8SsCnMR4qTUQ4im64AZ0Hm5l65rdlt5QUHmtbir
Jw6e2r5hx8TRkwb0HhgVuST+8k17hcPS4wvpKsRiLEIQFtiTIeaGQERw3fee
SG5ISb1d8RbnFPjQoYnYhP1kcYRKKfItv7KTHamqR9c0jwvkZNqZ5WV5Sgpg
dkblmVPXZ89a1Om7bl/9uUWnNl1mT51z8VTcy+xCXQH+vbjskSg2rHPkfc8e
SHv42yXLvWtSry3pkTai/IkO6Cvx0oTXIQo2uLdAK8vBi9Ti0ycSdmw5H73s
xKRRW5mNHrz1x36bBvVa06fL/B6dpkcv3XJo1+EzR88+upNsK7MDFVLL7CQv
N3wfIw019kti2T0nP26p15RERyOKWsYLMGLohOrCUTA0xfA4jZIC9Vrci0lj
17RpMarZH4d9+cnYT34xjtlnv5zx2S9nt/hs4Y99t29Ylfjkfk5Jfml5UYXb
4SGitEOUnRMW1/DQBvCWoTWgw+wIKNEh1QCS6GhEBaGDEB0Tb+Goy25UlRmZ
ac692299/kn/v/2bL/77/9bsH/5bp5/9X/2Z/fzvx//yH6c3//3SiHEXEuI8
jjLqXdr1JTcYK4CGVQ9gpqsIwZoaaxCJDqmGkkRHI8q/xsoBwtGBdbO0o6IU
vMxRk++XrF914ff/q+ff/bfm//h/t/mPf+z3X/84ktlv/2XG7/99btu/rlk6
58aj26q7qjo6WLBDdBUyg+xRLVMUpNch9RNJoqPxZD2N+bxXCIDOLxHj8cOC
KxfSdm+90bdr1N/+TbN//Z/fN/t0fJdvV3RqGcOsw1cbO3y1YezgY1fPlmhO
7OUG8nYnpMTbdpia4+Rpjc8ZkiOVaVKpN5FER+Mp+Bw2d7gTQp12eHBP/NIF
B8YOj/7kV/07tp69cuGl88dyzh7OWTonkdmQnrs7tlo2dtimm1fTdE03c6qh
9aUWKNX8nKEmJfXakuhoPAWft2K7KkSI5GZXLJi9vW/3Od80G/2z/9F+5IBt
Ny7kVeTjzCeeXbEZzEb+sK9T60VTxm58kpwJoZ13HRXeAxWz6cM1J63L80t0
SL2RJDoaVYHzlhKCMGYxC3r0IHtY/6jP/zD41z/v/Xd/02Fgtx1nD+akPtAS
L1atWZjC7IdOu79rFjVt3Pas9FKEHJQ3HTZM8zX0queTS3RIvbEkOhpRQTEG
YQSgUNfhjatPu3wX8Z//3P3f/r7HP/4fA1p+Gj1jVMLKOWlzxycN7HyWWctP
Njb7aNmk4Qdz0hUEdd5Mg4iJBtzCEEB+jlKNIImORhTy7VvhRnhdB9A0EHfu
Uduvpv3z/9P1X/6238//bspvfrboi1+t/9N/rvnNPy371f9cxewXf7fyD/+2
euzAMzmpBgruWhqWG2brnrfw90l9SJLoaERJdEi9P/pA0BEa5vv3slczgggW
c5ktZyb1jUuqKVnA/0HM+az+zoGWG/guYiOwsCqeBrH4Az97lD936sa+nWd2
+XZKs49Gtfx0Wos/zPj2j3O6fL1sYMctzFr8fuZH/zq4d7v5j2+VQA8Wr6W2
z+s9/hylpBpTYbkRmKhGDAKJ7tEUpwcDzKeegeroQOHp4X14IhqKA0qAd498
GHRQGigl5TUZ3DMAiCBqL/fcvJR0Yv+VfVvOrorcvXzWnsgJ25bMOLBl+aUj
W+4xmzBoxZe/69655bCE8ym6HVL8/qNeSupdUC3o4KchoopLyc/MzXye7nG6
gwbB+h8gHDp8N/EzCPvqtEJzl+HQgTACEABzeqtig45S3V6sl+dpec8d6Q8r
cx67i9NRWRZhtm31mS6thnVqOfDC4USlTKdQokNKqjFUCzqQhqACivIKz504
c/zg0ZKC4qCefv4HMDfFW9ARjJA6oYM9G7UELAiquubBCPK6TmvvH+hr3eGz
IzvPdWzR78vft9m+9kBlngfrEh1SUo2hWtChulS3zZXy6OnSBYvnRcxJT0kz
LBvYAw9AfUkM/xXh0WGJVkJfAMW89Q7yVYDzAAdhjc93ZMEL0JGmIVWDCkQq
JiplxCCaoTu4Hdh2ok2zTh//4s/Rizc4y9y8IkyiQ0rqp1ct6PA4PI4K+92E
O6OGjujXo8/D2/d5oqM6OowgdAQ/IPXvaPPtKvGOk/WLD2sziFmI4a8DxQSK
nbPc2+BzYbFGkE4QYIDh/TfYqwAUuAiz04fPd/mux8e//DRqzjJnpYsSiQ4p
qcZQrehw28ttidcT+vfq9/237W7HJ2Id1R8dKHhDWpCHYojVFB80vPfivcA4
OrSgyMSMWCgyd6lQSBELaDw47vSl3p37/uFXn0VGLHRWOiU6pKQaR7WgQ3Fy
r+NWfOIPPft+16rNresJ9UcHCUIHJSHoYP/nfUIpDkEHi1+Y10GoholCKQtR
NMqbhgExop4PsaeQYJXb9bj4Ab0GffqbP86ZGmkvd8gVFimpxlEt6OBrsg7P
nZu3e3ft2fwvX8ZfulZPdASvm7BIg2CREqVeE9KAKibQU+sSDd8rT4AGXR61
AiAHpm5mhA+c5e4HxYAiZCZRniU/mzp+2heffjlx5JSy/EoMiUSHlFQjqNYV
Fgg8+sM7Dwb0/oGh43rcVXZNHdHhmwKLg1wOQtkjZKZnZ6bnZGfmlRSX8dtT
0Z6Lii0nNLBQwzMeFOjQLRKjptfBf1KqY772A8zblRSUrlwc3fqr78YOm1Sc
U4mARIeUVGOoFnRg3o8cJt9/NGzAkK8+b3bt4hWognDowGHRQUPRQaEOi/NL
tm3asSl269aN28+fuehxK+IUN6fHe58aYspiGLEqw4IWHVFADMiMMn+DGy8X
gwCaz+SodMVGb/n26w7D+o3JTS0BGpbokJJqBIWiw0cPnqcQtaMvUtJmTJr2
2UefXDh1Dih6CDrEeY+sbfss0QqxoIO7HFBDRfnFK6JW9+89qNN3XadPikh7
lg4h8gUwAXSwsMNcmIEUIwObHf8YzPhjsudDGPrGPqousCV297dfdRrYc2TO
8zKoSa9DSqoxVB0dgV+IL/6C3Jcxq9b+5r9+dfroSd2jWdEhunmycxtCALjT
YHlAIrhBA4kOPk2FAkNxKXu27P/qL61+9vf/yqKMsyfPaYomxqpZ0qS+Bd3q
xn9FeJ4D+UbDYd3YuflAm6+7DOo5uiDDhsFbeRelpD44vRIdpYUl+3fu/a5V
m+txV60Bi9kF2DvWxNID2Op1BHbCMF8B8AURxanu3360dbP2//5Pv/j2q3YH
dh9S3Ip/T1pd6MF5ZEWHxtBxsM3X3Qb2HPPyhR3pb+dtlJL60CTRISUl9Rqq
BR0Y8KWMkoLiE4eODeo7gKHDY3dT5E0y8NHwmJgnPIaYr5OEPnAQOniJOKAe
u7I9Zs/3Lbt+/F+f9fi+z8VTlzQeBFGxzoL9JoYaUD8urFVl1dGxa/PBtl93
HdhjTN7zSqTJ/IaUVGOoFnQQiLGObGVVt+MTly9amnTngeLw+NEBdAghYgBx
2V2lxeW8G3noAwc2y2GAiE6gggoyixdMX9qtTe9v/vLd+CGTnye9gBoSWVH/
AgozSDg9aAg3rOjAllzH7i0Hv+PoGJ2bwtOkjfwGSkl9mHpFwEIMXdWL8gri
L10reVmE9cAeFk3VAYBOuzPp7qPrV26WlVZgRMSUeMv9fVUawA2gG9mLnfGn
bw/vPW54n7FjBkxav3Szu1xhrgjl9DCHzPKac3MFtiZ0cO8EG9g3pInoxt6t
h9q37Da4x6icp6VQleiQkmoMvRIdHACIuKucSIfWTfeKR9V1kJmRtWTBskXz
op48euZ2qqqih67ymnfRKHaQjIe5q+bGjvlhyp6YQ1eO3Xic+IyXlgOxrZ73
EPNvWgG0Zq9DbKzlm+W8KRVg7N9xuGPrHkN7jsl5UiLRISXVOKoNHZYeGwRg
iilUgepSdA0wY6EKpfT+3fsd23Ye0n9Y/OWbJS/LbBV276Ng7/KsGB6LGQxy
n+fviN7bu+2QRZNXPktIcxd4tFINO3BBWr5qV3huIzDpHvsblVVDh5iv4i0g
E08EjUO7jnZr22d4n/G5T6TXISXVSKojOsx8JdSg7tEwLwHj3KisrDp25ET7
Vh0iJs1OupNsK3O4OQSEoyJKQg3EghHMDLngrbg7EwfP+PTnX0b8OP/a0cQX
t7OfJ6YnXX0Uf+Z6SVYRVoHYHOdfs/ERKNR4YRiflkB8fQ6RcWTPsZ7tfxj1
w8T8p+USHVJSjaN6oYPvHVGB/3Z5efnbt+7q3LbbioWr056ke+yq5gbeFATg
++Z5ayANMwM2Pe7Ilf4dh/3n//jt+H4zjmw8E3/87uXDN0/tPH1i14ncp1nA
pQW9AjMYqREd3p105i2O7D3e+/v+o/tPevm0EqlyhUVKqjFUL3Tw5VodmbfT
Nf3hw6QVy1b17zFoa8yOnBd5qksHCqTeAAf60EGYQTu4dvLGjz3G/vafPhvT
a+r2FftPbr94Ytu549tOnD94riA1D7r1OqCDCnSgEHQcZejoMGBM/8kvUyQ6
pKQaSa8sCfOiI5Cj5N0AmWVlZi9YsKhj+84rF0WnJqerLlUkVCnWCYeMztCB
+F1EW1HqoY9uPImauqLdX7r92GX8tKFzZ49auHjqyv2xB57ceOR4WUlUy3Z+
GhYdVOxkQQIdkFDkR8ex/Sf7dRo8buD0gpQqiQ4pqZ9axFp4EQ4dVPTcof61
DO5FEJfN+exhMrOYldETR42NXrayuKjY4/JAyNt9meYtDhUrs+bONnal4lJK
i8pyMnJf5hYWvSwpLihl/7RV2Nj1SId8y70R/qy3lqdS7scghAFE3rgJA3Li
4JlB3YeP6T+1ONWOteBSNGH8zyCImfBViJlq9dbCerMrYU1SSEoqjPwORc1e
Bz9ZCWJBCp9rgFS9ICfvxpVr+7bvZLZu+cpdG7c8SLztrQzzKex+VfIqUfq6
6NDJqUNnB/cYOarfZCs6KO8XJlwVdoH/DSzWAnwbrkkPgr31qqZJdEhJ1Vmv
Rod5xmLC0MHOxaqyihuXr25Zv2HTuvXMzh8/lfb4qaPShoR4VboXAmHOOPpq
1QcdhKHD26+DAHr68LnBPUeO6DOx8LkNqV5oYDFvjgpuiFlyJjqgRIeU1Buq
jujwuh/UyE7POHHoyLYNmy6fu8AsPytH92js1PQ7G2/WIoPWBR2i4Q/CBCIM
fWGUcfbohSE9Rw7rOa4gpQoq3tiEoYOZiZEAOpBEh5TUm6oe6BCW/jw14dr1
5HsPNKebGQFIrHXgmjyNeqpO6MCiYxhHBwmkSc8fvzi016hBXUflP6lAKvYn
Nyj1XcbMSdGZEShiFokOKak3kESHRIeU1Gso7PJK0NkS/Iuq8oril4XsJwaI
74QFiNeL4obq41cfdFBGDx86iHHhZBxDR/9Ow3OTy1jAEpIm5f0Ioa5rCjOo
KkjXGEAkOqSkXlvVoVE7OthXNy/V8I52NJi/QfkeNaMR0YH51n1qogP70XHx
9OVhvUf3/X5odlIJUFDwaixfW2HQ8LidzBSXU3U5GUAkOqSkXlv1RYe52sKI
YS7aGr7V2wZ9ObW8TipaCmnc8TA7pvtO8bgzV4b1GdOr7aDMB0W6G5rcMNOk
ZqiiqR6X087NbnPbbZrHLdEhJfXaejU6gm/Kzkio6VANbDYhYq2jxsevX2fy
V6ODcMdHE46HaMDuO8Uvnb36Y58x3b/tn36vQHMD6woLCfY63A67x2HXFY9E
h5TUa6te6GAnrVl/Ls5FyAehaDr7aQ5xC38ny4SVOtCj3ujwn/SXBTq6ftPv
xb2XzOvwJzq8aVIfPbgpHqB4kK5JdEhJvbbqgQ52vXfAkmFWlTPDzOUQuY5X
PEvDeR0iTQoZOhABPE0qzm+ooYTLtycPj2jzeee0O/m6B1rTpP6SMHOFBWqq
mSnlXcb4UksoPQL3oliiQ0oqrGpCR20nTP1u/Rovp5bn9FaTYgog1v0lYZoH
3Ln+YOa4yBaftku9nWdFh5kmJSLjYZaEMWhwdGgqb4vsLUoPoMOfXPWmWOUE
KCmpcHoddIS9W0O+nFqeMAgd0IcO3QPuxj9k6Pj6k++e3841AxYrOqyF6NXQ
gULQYaWHRIeUVFi9Jjp+2pdT4y/86GAxCkMH8I2rhip6kPBo1vj5zT7+NiUh
m/caqiM6EB9Kad7Au0vOZxIdUlK1qBZ0vA2A1Akd5h4WgQ7d146MPrn3PHLK
4r/+7pvH8RmqS6+OjkDYAnTGDWaUkUeiQ0rqtfRKdNTFGvrl1PI6A9WkCAOG
DgEDvtiS/jRr+by1zOt4eCVVcWhh0eEFCARY1xg6CNApL0rnD+Gnh0SHlFRd
1CDoaLizqy7owIgAXk1KIERQhCC8T/vLrKLNq3a2/Kz9rfPJbpunFnRQxNHB
jKGDGwLER4/q6HhroZuU1LutJogOggU6iMF7sovlVsR4UFlkO7z9ZNsvulw6
nGgrd1gTnoFgxIsOyIjhpweGnD7V0SEXZ6WkXqkmhg4RsPD5bxjrKmDGHARP
lXrhyNUOzXse2nymtKA8OOjw1WyYFzCivpiFA4RFPShAD4kOKam6S6JDokNK
6vVUX1aElGs36Kuo5eWZKyzIH7CYpeWMELoTXj2V8H3zHpuW7nmZUxgeHd71
GG/MYi7RIsBjHokOKanXVr24YZ2N0sjoMEvCCOXdUBW3yoyXbHjIjfN32zfr
HjU1Oistp1Z04GB0aBIdUlJvotfzN35KryPwtJYXQMS+e76HBWGkeFRmHB0q
TYy71+HrnmP7T0t59Jxi3i/VnOvgLTX3j5BhfMCQQF4bxms82AWeKYWEF3iY
xCB+k+h4TyQ2XtXya/PjJvwAqPuHHv4UoRar631e74+SCi9qmVPt3XZnvsXs
h6qrAOrW6guooTs3HvTtOvjrP7ZNuHwLK5hofIyUeBhs8ObG0Hw0KirKfKu3
7HAxMUMDIyDe5U/0zdNS7+Af1XAilm+ZgMw9kzoKGrbjvZF5GCCIVGaa7mY/
xYFnBD+A+Z1FaNAXZsgcdT5mnR1d2IBImGhqU5u7HuK6h/983uvP66dRbehg
3IAYEDEugfc8Z9GLjh/eTh7SZ9TXn7WNv3BTd+rQAwPoINDwoYNwd0Vn92qS
6Hhf1SBIZP6or7mD/6Mzv/69XkcwOihv6AJE9Q777KHfxJhBw+pWU4tV87iD
AMKjaQMhYRIdb0m1oQMThHmXMIwQQDxNQTCgKUmp44dP++rTb+NOXraX2j02
D/8S4LdGHB2+DxcTHUINQr0pooMG+8OvZ+/mH9YgRryACPyBxD+7kJ+3NOgU
ZSEt4jub2LeJ//AgRMf8n7Su6KAkgCdxyVzJQ95fhL7Gmugh0dFwqg0dxDvs
3osO3jYE0NQnGVPHzm7+ybfnjl2sKKxwljsMSEQDVZ7csKIDABUArQmig9Lg
w/h17Z37wxoKHdTvUvhE/C1l+ElLDN8IVHEN+9T5XEOMNH/QgbGGkBbChxrR
QUl1GPsPXFLDXybR8RPrFejgq7S+gIWjA9IXKVkzJ81v9knrM4fPleaX2ktt
BiBmIGtFB/uKabJeh0RH/dEhxmhg3j4fe9ERaKvrHYnK0MGOCu57UImO90C1
oYP6TyKxhIr4sUFys/JXLFj35e+/ObzraHZqdkleMdUxr/7Q+UYVa0zKaCIi
3MZER9iFqfoZr4ITofQbGmnANbGGEm2Qd8gIzmWIH5hoHsVZZVOcLrMjN4WI
9+Xmv+XnPiMLBIquuZmxaIVgDfNMKaoZHTSUBaQ2dFivl+hoFNUJHeYni0T3
4qL8kq0xe774qOXeLftTk1NfZr3kWSvGBABFNgya3ywiFSbR8Y6pgbwO7xvF
XA2EeKjCvlI0PScj8/rlK9cuXrKXV2AN8KUP5HVHzYV7gnWge5gxdBgU+Bfj
/Av6oQ5bCDdI0DXUQoOa/sR6oEOq3qoHOswV2vLiysO7T3/+uxZbY3Y8vPUw
KzXL/Eh4K1O+y9Z/eHCMNPYKSwNkN80UHH5zexcDloaSeKMIxiwq5Q6GoMeL
Z6l7d+xeNHfBgV17i/MKeQbM/E7RdIp4h0lKuOPBjPIEKfRBA1ugHRzohXAj
mB5mn34vOoIPpOr3Czt+UerNVA90mNVbtnLH+WNX//Lbr9Yujbl24frTh0+9
XiPPp2IxisXFjAUwwejgB5qwEHSYafOG+2sawhpkheW9Rod4l/hOBcwZKZZU
CvMKThw6NnHUhH49+sZfulZRXO6scrBf8dmF0EQHQlBlxhhCqbngUj1aoSHP
UhM6DN96Tuj6SvBda/BZJD3eXK9Ah/kF6n3vBegdVe5r5279+TdfLZq15Nj+
47eu3WaRq7e0g38TARMdRKDDErAQ7JWlbTu1fqoN9Nc0iL1vr6WhRX3f5cjw
V2ooTiUl6enyhcv/+NEfY1auu3HpekrSEww4W8TYU34EQKAxM6NajEEwNEjo
t0jt6LB8+YR9y5rw29s09Ap0YOGPWtHhsnluXrr/5980nzF+1tb12y6cvKg5
dGq65xwRCIh9tuI7xT83wYoOq9tBJDoa89gO5L3fzPxhAItKgQuYhlXsqnLd
upzYplnriSMnMoYc3nPYY/NQHraIG2MCebtKwLctWD70Gv/e2tHhP0prftck
On5KSXRIdEh0SL2GXoEOnu6jQQGL4tQeJqR88XHLgT2HzJgYsWPjTuhB/CZI
1IDwfIfoiI54Fbpva22QzFF1IQdE3WV9nOp/zLtzqtaUACF8RhfxlT7ULWFS
6ysWi5+BC7R6ToCKTIM3VHyFUd9nwRNXiCe+McGhC6W+zCMFFLoRM8YNflmF
OS9yen7fo1ObTt07dF80Z5G70s3RIRKi/C8X0zN4gRCpKzooQs6qqsqyMhby
YE1HuoZE+xcWBSmKC7Goh79Wwhf4ADSnuvMOd7qOkLfnrUTHT6NXoCOoPkeg
Q/PAlAcZX3/WpnOb7gN7D169ZI2JDiqGV5vHBzMI2WcHfFvnrNCgwejAYmsD
oXWW9aGq/zENRI8GeJiavuKxGfl7V2Fe/RXPKzFFRR7xF3hbFxoIbyNr/tZs
YMCNeEcHUnEXSnzosCIl3NK02ZHa3NAsnhcxM8tEzc6RfDO0DrFOzG0ouhtU
FFYxe5lZkJeeX1FUYSu3jRo0qtlnzf/wq09HDh5dVWwjkN1YlIx7X5gRgv3w
57Lv30n37h3au/fcyROuqkqoKRiozAjS2NMrqhNjTfTQRnxekA7NCe+me2NB
B3/tEh0NrXqjQ1dQWnLOt3/t2LF1t75d+y+bv0K1a3wyLRSZdv4I/PA1a9f9
6LCe+5YDF/uKx+qBjrDQ8P8xDWENVU0axtiJbsaAgWVc6jPr2i4NGNChziv6
ITYL/n3DKLyfCWanM+ac1jExQwMfBJj3R2DgloFFShx2NypzIQys8Vot80r2
gSINaW7NZXNVllUV5xUXZBfmZeSnp2SkJqelPX3xLPn5nfh7pw+fY7Z13fZt
67bHX7xRVWKbOXF28z9+/euf/25wn6GFOcVYx+yhiCjuqP6BhT+XLf9eHrW4
a/vvIyZNLMjMYH8nQTqCzOvQ2BtDefkQYJggOuQ1JN4VH+L7FH0PxtO0WKKj
oVVvdEAVZ6UUdP6m9/etOndt12N+xEJ7mYMvsgSjg4ctGBJvV5+QjyiIG3VB
B4MP8gkyJxoh4fFW/2N+qlO+AbnBvyN9xtshCVfbeqVp7EqAdB2ykxlbyx/Y
Nz5UEFKxtZyKfbOzK83dqFYvgl1DdMqAQNiXMzNdlNvohO9p5uWcyDSoQOgR
pghzc/NUKKU5ZS8epSfEJR7bc3xz9JZ1S2NWLVwdOW3+sP4/9u3Wr1Pbzt98
2br5n1ow+/TXf2zb/LtVi1YXZRUvmr3kqz+3/OW//fqHHgOzUnMZf3iiw5w8
bHodZqhm1Akd8+fMa/N1iymjx5Tk5rG3yuOwOSpK3bYKqHnY1xVGPH5h6PAO
PWYXoHAxGHMh8jcP8X9jSXo0nOqNDqSR/BelP3Qe1q5Fp3YtO0RMnF2WXwEV
LI5b85gwSwehmesIlwitNzrq6HWE98Lrbw1CCREqhAYxYajI95yS8G+A6Iuj
ujR3lUd1aFglXn+A1/j7co86Zac58EDvNexTYNG/bjBQsOvZHSsKK1k0kfU8
m9mzB6mPEh7fuXLv6pnrpw6c2bflwK7YPdvW7li3JGb5vBVRM5csmLEocuqC
uZMjmUWMmzV15PSJwyaPGzJh/NCJ7MKkH6dMGj5l8oipY4aOnTl5VvTSNft3
HDh79Jyw8zfjEnNSc+1l9vkRi1o3a/vJr/84pN+wtKcZUOXjzpnLgbH3bTAd
L/Z313giWzzTFUuWd/u+89ypEfaSCsZaV5WtsrjEXl6huz3ifeOumeZSinPy
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
L92xbmtpTiGG7FduTXMA4CREoVQnFBKLJ0GIASEFGiYeZKjUO3LF53XwtRce
sxDEt/LX0f+QkpJ610XF4olH1wCAWMOeUpXZ1pVbls9acvn4BeBUeSRDVIwV
jFXGDeZ7IKBrHlVz60CFzAgvCeGFZBwqCvFUuOwltqqiyuL84rLCEkeFXVd0
IpKl9RyLLSUl9e6KhREqBQrUIUOCB1bm2ZitiVwTuyjm2Z0nBp+cgsUMFZ0F
IRhpjCRIB0DRdQ+AKmKGAdFVWFlWlZGSnpTw4MKxcyf2HTu658ihXQcvnjr/
+EFyaWEpI5PMY0hJvU9i6HBRj0YB5lvetPznhcyi563ZF7O/NLNUtPxjTgXE
SMcML0AjEBmIs0R3AUe5g9nLrMLk+09PHT2zfN6SeVNmzxg7deroyTMnzFge
ufTg7v13bt7Oz8n3uHh7Md5hTNJDSuq9EEeH4dYNiBBxlrnT7mUwWzd//dnd
59Qyzeztw9t3mB03iLeFKHDAwvSSmxduMYtduWn0sHGtmrX++T/8W5svv5k/
be7GleuP7j6cl5qDAPIv0UJev44IkeyQknofJNEhJSX1GuK5DkMFBmQBi7tS
yXqUy2z9go27Vu9Lv5+lVQHggQTypoNQg5UlVSkPnsWduLwndt+KudHTR89i
NqzfiB6deg/qO3hd1Orje44k307KTMl4mZnvsbn52gqvBOG7+OtR4CElJfXO
i6FDN1SNqBAjzaEXppYyWz4jeny/KcsiVp/cczbu1JVTR88cO3Ri/+6D61bG
RoybM+qHcSN6j5k4eOrciQuYrZi/ekP0ptNHThemv3SU2JAC/TMTeLUZRwcJ
lKZLdEhJvReivNhLV5EHYr5i4ih0M1u/eGP3b3u3/NO3Xdp079ttQPtvO37z
VZsWzb758s9ftfi8dZ+OP8yZFLl/y6F78Q+ZvcwoUOwKn2KvB29jwT5W+GbM
UokOKan3S/7RseYIp9TU1M2bN/fv3/9Pf/rTRx999OWXX7Zs2bJdu3ZDhgxZ
vXp1fHx8UVERhNC8L8aYXTbH0UpJSX04MmdPm9NjzWsURcnPz09KSrp582ZC
QsKTJ0/SfGLXOxwOdntzvqQpIou9pKQ+PFkH1lsn3Xs8HpfLxX6a42XNrsfm
gHv/VGsmK3OkpKQ+QIXMnH3ljSU6pKQ+ZJkuhHnBDECsKDDjEatCbiyjFSmp
D1PMczBPfyJmsVjzHuynqqqapulC5gV2M+vd6+6oSElJvU/yxykhfoX/tyFp
kBBK+J0WKSmpD01+MvivMZdczaSo9Zb+VRWJCympD1xhIw52jZkFrX69zG9I
SUkZItdhTW68XgAiSSIl9cGqjuutYTMeUlJSH6wkOqSkpAxfXqJed6lpGaX6
zd7spUlJSb27sqLDvwIb8s+wEJDrrVJSUqb8Kyb+f4assUpcSElJVZe/aNz8
Z8hKirUEXQJESkrKrxAmvDKhYXopIfVgUlJSH6ZMYviXUfxuRnWGvHaBh5SU
1PsnMzAx226Y9LA263jbr05KSuodlbVyI8TrsFaThtzlLb1YKSmpd0VmtGK9
xsoKfyxjTYPInW5SUlIhTgWjhNvttrbgMG9g3eBWfQeclJTUhyYzTWqIxsUO
h6OkpCQpKens2bOPHj2qqKjwA8S6kitrzqWk3mtRv1GficknJOSffJCbQRxO
e3lFWV5+7vX46+NHTYuctTTubHxVmdOcmYIhwXziG/EOmGaPwaIWFscARAEW
DyknqkhJNVkFnb/sfA4YFoYYAwyELf/kU+oNRAzoUZ0OV1V5ZUly8qPh/ae3
adZ7+tgliVeSVSdkBhVCgUEhBR7gsjmz0zKeJT1OTX6a8zy9sqBEd6sMI97x
TNR8IdIvkZJqOnoVOiBFzILRgcUNEKYAEV3V3aVlJXeupfTtPLLV510jp6/J
TKlg5rEBg0FHxbZS54Nb92dMmNKzQ+ehffsvnbfwypmLRTkFQNEt6KDU64hI
SUk1BUl0SElJvYYC6KB1QgfFfOS8yFwQZhQhAjVVqXzpWBEZ0+mb/r07jN6w
4iiz1KRi3Wk4ylw3L92fMnbqdy1af/npnzq2bjM/YmZ83JXK4nICsR8VPA/C
46D67e6XkpJ6e/KnRkldch1YoMNMk/qNp051knTzceSUVe2/GtK51Xhmu2Nv
PLtXkZSQvWbxrjZffd+vW5+Rg4bOnDTl8J7dWS/SNbdinVkvkidATKqWkpJq
EvJNka8ZHcz86GCeBkMHZs4Io4fPDGYIEIXEn304buDSZh8PYzZx8LaYRdfW
RZ2fMnLFiIGTDuw6cPPq9Yd37hTl52AIfMjxF6EydGgMQG/73ZCSkqqj6oEO
sUrLf3J6YEgI8hk0sNuAqCTHdfHws8gJx5gN6ry+7V9mdfwqYt7k7feupzqr
hJvB7k0hC4PYY/D7YerzeCAyVGxob/vdkJKSqqNqRIdJCUQxYs6BtebDey8a
qP5gHNAqqaIgFyzJ0m4ctzHr0yb6l//vgDZ/nn542wN7qUIA4ZkMnh3RoeLS
PR4EIKX+YAkhQ8cGeNvvhpSUVB1Fa+KGpQbMa0GrMUE0YUBwGgAgJ81Otu9a
/YBZz9bLm/9uyuAua49sf1RZADBzKBAzTICKVDcGOmGhj+8BMPdtAJK5Dimp
JqNa0GFNodaODnZzDzv7gd14lli6fMYZZj1bL+3w5YLxA3Yc3PygJBtAD0cH
hZjoCtY8FEOzBMyPDijRISXVlFQPdJhJTcuCjOWu2MNijqoC97XjT2aN3MVs
VJ//v717/YniCsMA/mf1s+mHNqkf2qZN26S2TanV0FiNF1K1gIlVudQbStUo
JAXroqVF1NqCxbSKtYIKCELlUnDZEHaBve/O5Vym75mzDFouu5Aqbvr8crJZ
ZHZ2JZln33Nm5pxThe+dLtpQd2TvpaHuGSPGVdVhC2EZVHi40aEKGy4FNaZ+
pj4Ly/55AeCFkFN0ZNLCW4navcJD2tLRjUnHTFvJ9M3WOyVbDr/zyjZqvpMd
rd+PVRY3vf7ypqaz7UF/RJhCmsKx3cFXQdGh7m8xbYuaLajDInFVB0D+WDA6
5Lxx0dmtVW7ITCFCJYTJ6VGNfzLZWH9hc8HWLZ/sbqr7jdrjgdCM377VMrTr
86rX1qy7fKHN/yg4FYhIJu1UykrFuZ1W15VJd5fuQAiiAyB/LC865jZ340Jd
WEpRYNi9HX3lpZXbNu44dbj28cAktXTEZElnrH+q9njTmpfeKN9T/cPZn29e
60xHLW4xbhlUcXhpofeH6Y8B8scC15Fmjw41apEpFIQlwsFITVVdyfa9Jw6d
6mzvNBMmNW5Y0uLRYPJm670P3/6s8KOiHYV7qsrODPWOMVNdKiK5LQWb2ytu
nQXIJ9mjw6Ou4FIjoo60VHRQb4UbLDGT6Lv7cPeWfQe/qr7x661YOKwu+pI2
t5OCmVSQBEaCVRWnC97d9Nar6z7/uOiS72o0FBM2V7e/zE5UmDkNjOgAyBty
3ujootFhGcw2uepaWKreSIdT8cnYSO+wr6Zh766DvzT/PhmYdgc709Q4iwqe
oLqCKpDuP/tLt+//4M1PN76/ubzk8KOuQSNuzN02652yQXQA5A1EBwCsgDvx
n8MXi44M9wcjbVF6ZKKDOWN/jfbeeXCtubWstPz8t5eH+x8bSYuygvM4NSHi
UiapVyNMOxKKNfuuflNZU1F6tKiw+OK5K6HAVGZgVDhPZQgA5ANvoowFo8Nx
3HlIudDHtW0wZqmqQ5qOMMTt639cPNdUe6ymZHtpz93BZFQVEu5U6ClqUqZU
+UGbqvvnnLGB8Qe3B66cb926/ouy4kP99x7ZKTaXHnqwA+dYAPJE1uhgjNsW
y9zups7GqnpDpKUVMS83XKquOH50/9HqiupwKOFeH+ru0r1ZxT0HY6lGL2OC
JbgVZQP3BvfvrNy6fuf1i+2Ribh7jka/udCDq6v71wCAHGWNDio5KD28W01U
yWE7PCXiwXjDGV/Zl2Unvz7Z3tpupk3BdXR4eCZDqAtjmNISlCVBf6ip7qcd
G0q+O/Hj331+NbuPqaYJUpWJSEmRXJU/AgAsV9bocJy5gQ9hS2FKt7ci48FE
w5kGig7faV90Iip4puB4etDCjRuqVBgTKcYTLDWVGro/Vll8rPZIw8OOQT1m
opo63ZtwHEQHQL6Yf6vKooOVnPodVmaOn+hMtKuz68b1G913u+PhuDulx+L7
V6vBCammMbXDoUjn7ftdHQ8CYxNUq3DGqc1eir7A7W/e8k96RTmil7vFmlAA
+YIOWL26PR3OkUhkfHx8dHSUHum5t+hb1j0kk8lQKDQ5OTk9PU3P9QK1S+SA
91tvmWzLsuhj5PiOALDqvG98Omyj0ejExITf76fHWCyW44FMm6XT6ZmZmamp
KQoceq4LiSWiQ/9Wv3DSFQgE6OWG8e/ZCFGHALyYZm+5V3QCUP0QDofpKM7x
sNWVQ8plmibFQo5vTW8xPDzc7Kqvr29paaHUevJNdXdmJf8rAHjGnlzjno5T
So9EIkGPy/q61ztZ7gLWlFFtbW37XGvXri0oKGhsbKQuD7otAPlFf8vbtv18
vuspo/r6+nyuAwcO1NTU9PT06GpHj34whhnGAPLD7BoqKx9hkE9YeksKqEgk
Mujq7u4eGRmhMHHcQVQqe3T3Z8UfAwDyiO62eOMnuWyvx1S9Uof+hRKDag9K
Dyo8vBMxz/yjA8Dq8UY8cswN2lhHx9JRo7PoP/2kAPACQXQAwMqs4NSMR19k
Ys/SF6o5T58GAoD/s/lDqV4RwmbpamQVPyQAZPWcv9a9AdVc3h0lBwAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAwHP2D7teJ1w=
     "], {{0, 461}, {361, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{235., Automatic},
   ImageSizeRaw->{361, 461},
   PlotRange->{{0, 361}, {0, 461}}]], "Input"],
 "\n\t\t\n\t(iii) Elbow Singularity:\n\t\n\t\tThis singularity happens when ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     SubscriptBox["\[Theta]", "3"], "]"}], " ", 
    SubscriptBox["a", "3"]}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     SubscriptBox["\[Theta]", "3"], "]"}], " ", 
    SubscriptBox["d", "4"]}]}]],
  CellChangeTimes->{3.812893695066353*^9}],
 " = 0. There is no loss of degree of freedom here and the singularity is \
because the manipulator can move only in one direction here which is along \
the \t\t\ttangential. The singularity is also associated only with the \
position.\n\t\t\n\t\t",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
RuXg22yyXL54rUH9xp06dBnYf8iqFWuNhUUS9b4lbe0bKxIzOoZQT7yY4MWv
xpZ0FQJ87YRmZeYsXbysbZu2Plu2WMxFssxLog3IvEpHoVIVPt3fc/XDN9u2
qUBFwzc5Y5lp2SdDzi1fsmFvwLHY6BRDniUpLutU6M2jBy+mxhfkZhQcDzra
oU1bYtu8tyTExSOIBI53rcpSkbC2aJVtRvHB7egJo2Y1qtN6zOAZcyetmDh8
9sh+44ktnL50384Dt6/fTktOJa63fReba3+E4nomr+bYvQ55LmCgFTJiHccw
lAAPFboXnsxNRaASS02zXrmc6LP50uB+O+p8ObHWB5NqvT+1zsdzfqi9tunX
azr94PND/VmN6w0Z2HcKsevX7tpsFkSr06JS+NZ6o0CsNSZQqsQtoOtXCsgg
KTb5px/bNKz7XaP6jSePm2ItsrElUDahI9NHCRZXvX75qiJDceUXdk1rcCSt
KciRREzBnpWRs8PX/+MPPh85zGv1inVHjxwnVwvLYWYlJhRCFIEYTT5XZIZv
4NKJGDqXAoGEZAFqfyc+NnnqpFnNm7XcuWOXzWJVEJkmSgiSKYHg3Nvo4c1W
h4vBE761zVz0ZmRmLrLev/tof+BRP599UZHxtiJBldUnkXFeQ+cN6Tv97vVn
ggU8uh85cew4zUKPHScHGUHknAxUcEkaQxpZKcgyhB2/OHfqisWz162Yt3Ht
Im+/TYHELoZdIXN+zsKJAm/fhmrfx+IWoq+6zcc8rEFo7IbaWhIxhY6dIk1c
g2qhUY5+VkgsMODOqBH+3zec+/e/jPrDfw/44I/Tvnhn4dfvr2xcY9vnby1t
9rX3j/WXtf1hutfwxcSuXr5rsZiwM6fdHd/QHjC3J4jqw2a1E5BAYkwS8b6/
b9CkWaMfpk2cbsc3sncP1sYNPXhe1eSGb23GRvtMFeM77lnC9CmzP/u45oql
a06dOBdx94GCFKvZAqj3LUPAybKVGAIiRsAF39puGuBMxIWSIotI+zsRdx57
jZzStnXnkGNhAq8teRNuS6JghSwDyiPBq8XF4IiTa2n/Wt82JAPqvSF7Ckr0
o2fnwi6fO3k1KiIW8IAce9EEL568WeeLn1o27nvn6kMsK5mpaQf27CXWq/sv
SxYsTElIVD1t9C73XdAtbGRipQAFSig5NvPZo6SYR0mpcZnGHBMxySqTd0VT
pVncmCZZkf/RJoYYl2C30xuvcnJbHbDj29ktVFJoCVla4FIEODdPunYtY82q
S8Q6tlv9/l9H/vY/B771h/Efv7egydc72ny7v1Pj4B4tzn35l40NPt3cvon3
uGH+gX4XiD2JSrTaTMRxL4Vv7JgkQB3f1Vma9922Zbvm3//Y6ofWs6bOthVx
Tu/71cfBdHy/ItEbHjrxrWU40cQjZ3xVUR9EPOzRrc8PTVoGHToeH5OclZGL
Gb4hmfPJvMCbJMlMjGYsQcj2EEGX8lOyvQKVoiqAEFxFzMJCrgzuP75Pj+F3
b0XJItDGQQhlzmZ24tu1EKj9zVaHi4HeYgSaxGMTyCOhogoBBgCToyIrgkUk
Fnww5OiBE/FPUzFLN0hPMD2LzNu97XStD1sO6D4r6k4cFhFntqQlJRMbNWz4
pHHjb4XfYEvnwNlcrJx72flLq4U3FFrII0U/cm3oTS8MJMsiZxF4s6ot7GJA
Q8S05Ijjhe35kFW3nIgn75tlqdlXulkBOvrhs3JQWFjSpAmH63w1g9iffj/8
z78f/+Vna3/64UiHliF92p8d1OniqB63Zg6Pa9cg+NtPNrVtvHn1ovM56ZiY
KGCtDQoltYJdiqNjR7VVmUXptTiHPmxWO5GRmOC7fesOP/3YpmObTgtmL+TN
ArlP0Wuqea7j+9VIi35j+4K1Ulz+1GUR78b1W82+bzFiqFfEnYc2syjygBVh
4xGUZYnjbEWybCEGZBkBesUwB1wqjW/ioskCNuQqxDat3dO147Bxo+amJxci
2Q4UBIHAW16U940roBd9OF+ESuBb9IjvoweOB+0PTXiapsU50uNNT+/nBW47
VfMDO74Vhu/05BRiBN8Tx45z4lt5Hr5df2lxwXfpYrcE38Jz8K3o+HbgG544
mThh/KFvak0n9sffDfvT78Z/9fm6Ns2DOrQM7dP+HMH36J63Cb7bNzzG8L2J
4Ds3QyVGN2Q8B98Sc8B1fFdTueF74ZxFvMWBb+hhH8TL1hswzFYJVQzfN5s2
/nHksDH37z7iLJIrviXJxtmM/wC+N64h+B5K8Z2i47ukWLSZ4JscCySJtLAa
pOwmYDQVFD2KiCK222/fqeMXctOMtO6ZoMZH5UVcT92xKaT2Z+3HD1318GaK
bMNAkq1mCzGfzd5rV666ee26Vjr1uTnnrr+UZSiItMERZRJQBF7ibaIkSAgA
YrRPIeAh5DQHENH+JbSajKPaOWaXk3MxpVIe7RcsttRRjG/aOJV8IwL1xs2M
hfPDfmy6/N0/j6P2pxlffrqhddOjPTpd/qXjxQmDI+Z4PV44PnbFtMzRPe+0
rr+rdcO1S2YfMxtUYpDcoNS/5hVcGt/k5wIz5oCreuZ5dRQZLRKeJRJwd/ip
Y7dO3ZctXC5xtMmUHd+Kju8qKmzfte3IMdPWwYsbg8oiPH/m4rd1Gy2avywu
JhFI9m7StB+0AoDMi4IZIY4Y8eygzEpulY1vs0F4eDeN2KSxy9q1GjBv5lqL
URQ5REsK0FqghFo8a3lZXvZaRT/Zm4hveqAQrbAJZMJuVk5coQ64oki8GPM4
ZvuWHcQCtu+5d+Mhb5bJAVZ4NfZh3p0rKb7rQ775pP2s8Vuf3M0AXPHd+jDi
/snjIeFXrgo27rlr326/1CiBsEKrh2j45gRRECCUiLESnYKCbQohC21ZogHL
2a+EgQxrq8ByRXb0v+li7i/NJXOymxwKAvJCg7LdN7xN65Xv/Mnr7d9PI/bl
J1uaNwzu1OpCj07X+3a/uWR6vPfSjA0LUpdMiZ/r9bRr8/3N6iyeOtbfYsTE
ZAmykiycJ3xLrEw65yC4rO/7roaSRTkuOr5T25+7dOja55e+a5avRRKlNs1d
AaXi5y9flX2YrTpCLlu9NIIXdxkjsDYZrEGHjn/zZb1dO3ZnZ+ZqUVOaQEUL
WxPOihBwGIvEaIEoDd8KdClCJRXjG6rZ6Yag/VeJ/dx2RIsmfTas8ldk1Wai
lZ7ZbIEV3y+b3WpVxzfNEQVAZfNmTJxuGspgAQ0F52RknzgaOmnMZGInjp7K
ScvFrF4IltTEaGPkjeztG058/rdWsyduj3+cSYZ5J6kJtZ89ib4VHp6Vnq41
fv2V+Kb71YjL7ShkroXR7U06FIWDilXDt9avhIwZ2hZ/+wI5+QmWFfxG4NvT
CkG5QQp2lJFmrOq7jLCoYFHROp7T1CFs45X7900Txx+q8dmU//2dV42P1hD7
8bsDHVuG/Nzm+C8/hw7qd2bRtKgNCxOXTXsyYcC1mSMjurUKbFpn9rjhW7LT
ZWKcTYSIRwzfiqOiklLsfWstyQR7FF3Hd/WTKEjPHsW0bdm+b4/+Y4aP3brZ
V8M3BGyfKXx+usuLVSUfZquQFJcGxFqQE9lpq5CRX0qITdu83u+bWg1OHDtj
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
4+XXG3xZf7b/LLPRDCSZBjPTwl+0zjm0V08VNb/biW/VtZBbc/ENNVCTKcuo
qjpmZpa16olv2oiQrohD9mCzik3EaHdOScYyAKJVhZDe6Uiq3Wxq8nm4wOfk
d59PeuHhH4i99lTLdt8PXh685XpGDvEwnMi1R6IVa1nGVWNVLfCtOi47LU1b
dJjE6gQCwLplO8vpu+VqufBNXGZMve9CEWRbxWwFmBGS6Q6AqFp0IDPJsnf7
5WkTNvbvOZtYwNRdfpP3dG0f8N5rP69ecjIn06wt+9HlKo5vLi4PMXxb9Obe
3Xu9+cobDb9qMNuP47uovODbwnwKJ74dybhQJe4IxTcmn4xFM1ZvFmAFQslG
yz8rmDwViUgwSLkZuuh9N6b8vq/RJ2PffLozsc/f+aXvLz5b1h+4lZNHI5Sw
fcpGTnzzuaqWqLrgWy228+IMnLCflqJASVJEUSbGygkWeTDbX7OyO14Du6el
ISDEoS64BWMi80IWxfiM3Tp+xJrpE7cQO7Q7I3xvju+kPU3r/x66JbYg1+qM
duP45uLyFO12hSWz0L93v/feerdJg8az/AJKwbcjttOFb0qjGo9v6vNKDN8G
ZqKzX5KqsoaHNOob2j1l1lIbQ8l+Y4OR5oWwiQuwxG/VYhQunUmZ5bO+S5sp
X78/4Iv/9Gvx9RhivuO2hIXGZqTksiMzfwbScHIgIe+BaVw1VdUI384Xdzf6
C0TXtJ1NZj2K+dtNlpAia0tSCrkjNelBYR64eV25fMa2c31mwOSoFYtiT0cV
pMbpiOlypMRYU+CsyKYNhoRuO1uQZ2bHIM8VaL4cZzdXLVAFLmy6yoWhoAwd
MOSjOh82a9TUf5qfyWjSCmir5F6a+JOKXDq+tb3vGjug7NyUmdPNjOWrOlKs
sNbik/GdEhzKxLR0GM3s29bkA7yZnXlo/76N69YGLwoa0n9E/c/bfPNJ5y5t
Js2esif64A1iKWQGy7VJgtaVG9Beb4qoyKIsOXqA1rhPl8u7qhjf7lnS3s6H
vDLEsgycw51wlfwIFISdgRVsgNCIV1mVBZSfK1y9lBNxMGnfjvhdmxPWLU0O
Dkj0HXt2kW/cno23LxyzEUu5DA+HXh8xYE29j3vs3nG2MN/Cjg1o8BvDN2c3
V81Wxa5tbS6Q4cihI+p+8kWL776fOtFHX6Cj6720xCfSqqTSlt+KC9+uJXS6
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
nLfF8c1VopAjtMwD36r90nRcruwq1fCtsGByWcWK1WRZHbR++qjZB7Yftpgs
2oOtJjk7w3D+VM72jZd+bjf3Py8Ofvahnu++OKJHx42nomyGQuYaIEmUzcQA
kLVi5uyiFzi+ue6BauTUh4v2FnFvMlLp79eOb6hmXku/EhO7IXht669aEnwL
VYRvGiTHjO08ewleo+ymmVx03qEl2YHWMgWLVtGQW5gYe3XP5h2zpvgSGzNk
hN+U6Xu2h2Ykp8tWCdvD2DCS2bYhLHrcYh9LCf/CxXU3hNgyOPCOb4/QNdWJ
b62bCRQswo61+4P81p6OvOgs43/pfGbwwj39egY0rT/qxSe6Pfdw/+cfHvbx
6/6/9zp5dL+kz2MOOpZkaCJmtVnIgHLgG1Tm3TgXVwmqVfj2IHjlvJbD+7bj
O2hty3rfx0ZfsukFDXCuRbx7gm9RAVZJFhTgPD5d1XN2HmGCAFrNNpvRCmV7
O3IgKkmXr4Vu3BY4c96McVMmDh9DLCx0b1pCkrFAV0YieTFIl/wvXFx3SRzf
XLVOHN9/9rU4vjm+uaped4BvbQmJboeLFunA1qOr5u+8cCzeopeuXc4jtnj+
7k5tx9Z5u+ML/271r7+1fewvvZ/4y6CXHxvf6NM1Pn+cizx4I++2jQwdiK3E
JMmmyIpj7/2+7P/Ldd+phuHbfcu7dN1VfF+MumgtsNFug+he41tBtI6zzDK2
ZcSiyextxtlmtHYKEAMJABEgEWAJGPN1Z4+fWjxr/tTRExf4zg7dsO1M5Ali
WamZJr1RFiR7Chi5DyBzFTN2rLKXzTm+ue6VSsI3dpZac8WCuPBt3w4XLXLE
rrOr5u45tP3CiSNps2fsI9b6uzGvP9/m+Sebvvd2l88/GFXn1Sn/eX7aq0/5
PP3wpC/qLBw1ZPehA3EFBTpWSVWCtP0exPbjIX7hc90D1Vp8o8ou25KZkB53
8tLG4HWtvmxB8Z1vQzJLxbq3+HZFjmOKcki7GdMeSlChpnUXp425rVJ+Tm5i
bPzlUxeiD0YEz1k0ccSYBX6zw3btu56UDq0yMZqyTakNoaz1YCJPY8bxzVXt
VAq+7S62q2WJHd8QOx5C8H14x/k54zf6j901duiOrz4cQeyVpzu992q3jq2m
TJ+0PXjeyeH9Inv+eKhZ/Y0P/33sUw+O++IDn3F/rD5xIlYBIjFasQjZA0HJ
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
leFNPvclFjwnOvVaIS29Qoa6q80B+U6BQMQI8fHOxVXlSk8B8/yvvvn8RGIE
3w2+DFy99JpR7xXfmOObi6skOcPDKorv8rC7PPiWZZmwW/O+tQdoy+nOhxkM
hs3rjrz73PCx/Y9tDLqxf4N+/8aCsO05sadyN6242LtTSMOPfH5tv5LYltUX
s9ONLCCNJoHRkDQtR5TiW+L45uKqDkpJlAOmxb727DhiD/5t4LdfB61fkWQx
Y9pvSBUZuyVHuplXfAs0iYyPZa5aqeJoLinn2uuDK6TyH8T50u5PJN/Ex8f7
TQtu8PGoo7sNecmq9YaacMo4e/LpQT2Xdu8w59cOgdNHHz4TKRPT30YYkiEv
IGS2mA1AURz4ZjSHvNYpF1fVKzlB9veJfeXpccQe+tvAJg2WbFmbKtpoBiej
MzHZ1WzMke7B8c3FpfnaHq50KfhW/xzByzwCLhru7mxkpv3GbDYfPnx45LAp
ndv4ZF01WbJUYjF7s35ouPit535uUu/38cM2he9Ot+owMSipmHYsMkBohFCi
XQ/sqakKxzcXVzURw/elV58ZT+yRvw1u3mj5zk3pCl1vA6qzJKKd2RzfXFwu
Fcc3KrWQmvNZdwbxkg5V/KVV5msTdrsvpAuCcOLEiUkTZnZsMf7o7vzwzZa9
q4yzxlz87wvj3nv514E9F+zadCE71WYf9JAczQqgjuaI0Y5Fzv4jCkU54vjm
4qp6pSSCgKlxr/97IrHH/j6sdZNVe7ZfR0BlUFYQYqOVCnN8c3G5q3R8l/7E
SsG3WpTg7u42cizjO59Izio9PX1p0PpvvxgwcejxQZ1P9Wh5os1XO+s8P7Fb
+/lb153MSNGJFqxIkBiC5Ik0R4yy3FnIkca4yKxmI8c3F1fVKzUJzp4R/9YL
k4k9+Y/h7Zqt2b8rmzUIBRAqANDZADvW7ezDluObi8sN3+4gLt319nj6n8e3
+6Gced8qgzUuGjunMgd83+7oD9765ZsPAt57dt5rD89995n5zeuGrAg8m5Fi
UGQCbWCzisTIkTDWVt4c456aVraF/JP3rQEuLq57qbRkPNcvUcv7fubB4R2+
XxO2JxvTwFIyDdCbeUWbD1jxRbf7cPYjxzdXLZZXfGu6x/gufmRn1TXNK9fy
vsnvj0Vd+ujtvm88OeaZv/g8/sD09/69eNiv0aeOFup1FuJrExMlarIsQGhn
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
aJSCBROcRBAiYUYj5bxHeCTXOgiCSKOcixKNpo8j+2Zwax2Zu4gG1Slo4PPg
BTPg8NpofV1LdUF5QWpOSkR8bEBEdEA4MMo/LNQ30P+k75lDJ84eOunrcwa2
wBN7fY6CE7p9//7NuzevWLd6/vIVcxavnLsUdhbMmDdr2szpX0+f+c2MuT/8
CPzx+zmw/8OU72G7cNaCtcvWbFy9cav3lj2bd29fv337+m0Hdx4843P6wglf
4ImDxw/tOnj68MnUqLjshOS06PiUyJjkiJjk8Oj85PSSjJzijOyi9Oyy7Hxg
RV5ReU5BWU5BVVFpdXFZWU4+nFCWnVddWNJUXddc29hSpdEUN1ZnVwArMspq
cio1xQ2GSq2hSqev1Okqtboqra5GZ6k3Wxss1kaLtcnqYqMFDpprjaZqvaFS
Z9MYnXozpsWhN9taDOZGraleY6xrAprqmy1NWrvW6DRagQ6DBRFO0xrhuKWx
xdKkg304gmgy2o06u14LdJoMtN3COG2M084SDtppI21mwmIkLCbSbgFSQJuZ
sqFzONLJEnbYgYNOo54xmAWbU7A6WJOVNiJSVgdhdRhbDKX5xRfO+K5evvrH
mT/u27XXpDN5dD+6Oz5FaADaGupqC7Jzo0IiDu87smPTzjUr1k3/5sfdWw+V
5lfTTmj1SQyB2FRn8F69bdDA18eN+SI/u5x00JK7Nu4u/7EKN7CzhrJx0TaS
MDpzk3OmfzXjxcdfHjHofa+5O7LiyqClD7Rq7VY9/MQM8jh4nMyLZRFRDyeP
Uk8ip4CRZLbWPxzqaUdDa6CLtMAzHj2kLrZrbGGHgsU9+XwnPeVtqXTLtx2S
c6/MiVr1Hj2mbde7QotgMK0xQWjdFvA2oG1ICZSDshltZp3Z2GJsrtcU5xcX
5xelJqYE+F46esAHGOwfEhUSdeH0hW0btu/bsf/QniOH9x4FHtl77OSRc/5n
g0P9oyMC42XGhKUkx2bnpZVUFlQXpBUVZ5aUZJdV5FU2lDVqKpv1DQZzixmo
b9QD7TobZYaGAjggDEewPMkBBQovZM2g20HjfW0jiCSlR0MZbeywLPL1It8I
eIa7nI61rrI6NjTi6N4DO7w37lq/+dzhY4Gnz0f6BxWkZuqbWliS5hmWJimZ
rcPQ3Rm+S8FZ1tUXhHrd3bnXDVpz4IXICWMmL/3ROykqzdBoyE8pAa5fvP/9
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
Q2RFh5nITilcMH31awPfn/TRLOA5n9D6Cj1HiCA3tJMQOFr2wHGsJoslpDd+
C9dltx0uUloj+KqhEnfaybzcvM2bNkz/4duAS/75ubm11dW460BKjs/bvvb/
b+9MvKyo8jz/B8zp7pk5M9Nn5vTpOj09PTXdNT3TXd1TVW2VlrVrlYWilPsC
bggiLuCCioqIGyirIqsKIooiiwiy7zsCyb4nJJD78rZY7hrzu/dGxIuIF2/J
zJfLS+73/IpKX0a+Fy8i7v3c372/+/utmPDi+o3LLoEd2d16qqrp4K7qzd9W
LVmwbd70NXOmrpw95evZU778Yt6aFV9uXLti2+Y1e7atOwAG4+fNq6o2rdy/
4Zs961bsPLT75OnDF84cvnDu6MWak7W155oaLrQ01LQ21MC/Lc2X25INaTNh
y/m0wKRsNGOPDHNVKwBu3XkVohEodOvlZSlqsRPL0jvlMp2MgBx1jbkTOdGD
5fHR3/AIu6WxnMMiYwGxv5WFt9XlWhjZWQsck+0taADQgYF/9kWSHaHION0o
vmU1UKKceDWYVabSYMi1SUqDUb5iUgH6M2Qj21JmIyvBrRS3YbhMxKWUXRQM
rgxi1red3HFg7JOjZrw1eeEHH25esYaqSGbVDQpPHvx3hW8xJgZnBc4UI9MG
x8Y2MULphH1o/5mvF++e9NbXD983Eez//eM9D9z95uZ1J7gMNZdJ4yyEbRl2
7KUA0MovOQOIqYilSDpOG6PN2GgQ+6ptx2hwNi6pufP3H4Jd839fG3jzh9Pf
3v7ZnI3TJyycMfHTWZPh34VT3/ps3AsLJ4xZOvbZT58dOmPUsFlgo5/4cMzI
ea+O/Hj0E7NGDp46fND4R+97c+i9rz9y96sDbxk16NZRD9/14rBBY558eBzY
00PffPrRN0cMGff4Q2OG3T96yN3PDL5jxNC7nn580PNPD37luaGvPf/ouFGP
vjZqqLRHX3t+2Lg3Rk355P0lC95f+tmMrz+fueKLOSuXf7J+7eId21Z+t2f9
4f1bjldtPwl27lj1+ZNnzxw9efbYqdrqiy11TYnGlkRDi8iRcrmx5XKj0Zp2
600jt0yeikAOmfCrGHOH9W6IOzz0cirLxXd8O4/i2/HKdTJ3pZ/7m2mzvZQM
4s/SPJCgTT3Pyq/og4LvjogcFUXw7WVj9uuWcm+viotvP/mz6ra8+1Loo7y1
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
ie98cbm6m9LS0tLS0tLS0tLS0tLSqmj9fxIWbtw=
     "], {{0, 408}, {661, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{410., Automatic},
   ImageSizeRaw->{661, 408},
   PlotRange->{{0, 661}, {0, 408}}]], "Input"]
}], "Text",
 CellChangeTimes->{{3.8128935898721294`*^9, 3.8128936406657624`*^9}, {
  3.812893700465831*^9, 3.8128938013520727`*^9}, {3.8128938644527383`*^9, 
  3.8128938826534767`*^9}, {3.8128940045225477`*^9, 3.812894052248117*^9}, {
  3.8128942273112855`*^9, 3.81289450355179*^9}, {3.8128945480745935`*^9, 
  3.812894551277904*^9}, {3.8128946205132575`*^9, 3.812894654155657*^9}}],

Cell[CellGroupData[{

Cell["(e) Kinematic Isotropy:", "Subsubsection",
 CellChangeTimes->{{3.8128946679104166`*^9, 3.8128946762447357`*^9}, {
  3.8128947637799673`*^9, 3.8128947823207517`*^9}}],

Cell["\<\
The isotropy of the composite Jacobian Matrix can be interpreted as follows:

\tWhen we perform Eigen Value Decomposition on g = Transpose[ J ] * J we get \
six eigen values. 3 of them correspond to the linear space and when those \
eigenvalues are equal then that is the condition for maximizing \t\tthe \
linear velocity of the end-effector for the norm of \[Theta] \
\[CloseCurlyQuote]s going to 0. Similarly the condition for the 3 eigenvalues \
corresponding to the angular space becoming equal is for maximizing the \
angular velocity of the end-\t\teffector for the norm of \[Theta] \
\[OpenCurlyQuote]s going to 0.\
\>", "Text",
 CellChangeTimes->{{3.812894786704488*^9, 3.812895091119565*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 821},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 135, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[718, 27, 171, 3, 49, "Subsection"],
Cell[892, 32, 16304, 421, 1076, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17233, 458, 180, 4, 49, "Subsection"],
Cell[CellGroupData[{
Cell[17438, 466, 1224, 34, 69, "Input"],
Cell[18665, 502, 26112, 632, 132, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44826, 1140, 172, 3, 49, "Subsection"],
Cell[CellGroupData[{
Cell[45023, 1147, 1859, 47, 88, "Input"],
Cell[CellGroupData[{
Cell[46907, 1198, 10342, 256, 77, "Print"],
Cell[57252, 1456, 14856, 356, 77, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72169, 1819, 184, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[72378, 1825, 544, 14, 50, "Input"],
Cell[72925, 1841, 24082, 585, 135, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97044, 2431, 404, 10, 30, "Input"],
Cell[97451, 2443, 1921, 49, 22, "Print"]
}, Open  ]],
Cell[99387, 2495, 262640, 4333, 1158, "Text"],
Cell[CellGroupData[{
Cell[362052, 6832, 171, 2, 39, "Subsubsection"],
Cell[362226, 6836, 712, 12, 106, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

